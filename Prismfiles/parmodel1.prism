smg
//=========Player definition=======
player p1
planner,[n0r0],[n0r1],[n0r2],[n0r3],[n0r4],[n0r5],[n0r6],[n0r7],[n0r8],[n0r9],[n0r10],[n0r11],[n0r12],[n0r13],[n0r14],[n0r15],[n0r16],[n0r17],[n0r18],[n0r19],[n0r20],[n0r21],[n0r22],[n0r23],[n0r24],[n0r25],[n0r26],[n0r27],[n0r28],[n0r29],[n1r0],[n1r1],[n1r2],[n1r3],[n1r4],[n1r5],[n1r6],[n1r7],[n1r8],[n1r9],[n1r10],[n1r11],[n1r12],[n1r13],[n1r14],[n1r15],[n1r16],[n1r17],[n1r18],[n1r19],[n1r20],[n1r21],[n1r22],[n1r23],[n1r24],[n1r25],[n1r26],[n1r27],[n1r28],[n1r29],[n2r0],[n2r1],[n2r2],[n2r3],[n2r4],[n2r5],[n2r6],[n2r7],[n2r8],[n2r9],[n2r10],[n2r11],[n2r12],[n2r13],[n2r14],[n2r15],[n2r16],[n2r17],[n2r18],[n2r19],[n2r20],[n2r21],[n2r22],[n2r23],[n2r24],[n2r25],[n2r26],[n2r27],[n2r28],[n2r29],[n3r0],[n3r1],[n3r2],[n3r3],[n3r4],[n3r5],[n3r6],[n3r7],[n3r8],[n3r9],[n3r10],[n3r11],[n3r12],[n3r13],[n3r14],[n3r15],[n3r16],[n3r17],[n3r18],[n3r19],[n3r20],[n3r21],[n3r22],[n3r23],[n3r24],[n3r25],[n3r26],[n3r27],[n3r28],[n3r29],[be],[end],[ter]
endplayer

player p2
environment,[n0e0],[n0e1],[n1e0],[n1e1],[n2e0],[n2e1],[n3e0],[n3e1]
endplayer

//=========User Requirements=======
const int A0_ID = 0;
const int A0_DUR = 120; //cost
const double A0_REL = 0.5; //reliability
const double A0_COST= 50; //max cost
const double A0_WG_COST = 0.3; //weight for cost
const double A0_WG_DUR = 0.3; //weight for duration
const double A0_WG_REL = 0.4; //weight for reliability

//=========Resource Profiles=======
const int MXN=4;
const int N0_MAX_SV=30;	//finite number of services
const int N0_MAX_EV=2;	//finite number of computing nodes
const int N1_MAX_SV=30;	//finite number of services
const int N1_MAX_EV=2;	//finite number of computing nodes
const int N2_MAX_SV=30;	//finite number of services
const int N2_MAX_EV=2;	//finite number of computing nodes
const int N3_MAX_SV=30;	//finite number of services
const int N3_MAX_EV=2;	//finite number of computing nodes

const int N0_RS0_ID = 0;
const int N0_RS0_COST = 43;	//cost
const bool N0_RS0_AVAIL = true;	//availability status
const int N0_RS0_DUR0 = 59;	//duration 0;
const int N0_RS0_DUR1 = 23;	//duration 1;
const double N0_RS0_REL0 = 0.9247798432279503;	//reliability 0;
const double N0_RS0_REL1 = 0.9377179038388533;	//reliability 1;

const int N0_RS1_ID = 1;
const int N0_RS1_COST = 37;	//cost
const bool N0_RS1_AVAIL = true;	//availability status
const int N0_RS1_DUR0 = 45;	//duration 0;
const int N0_RS1_DUR1 = 29;	//duration 1;
const double N0_RS1_REL0 = 0.9068160169684769;	//reliability 0;
const double N0_RS1_REL1 = 0.986960239486422;	//reliability 1;

const int N0_RS2_ID = 2;
const int N0_RS2_COST = 11;	//cost
const bool N0_RS2_AVAIL = true;	//availability status
const int N0_RS2_DUR0 = 49;	//duration 0;
const int N0_RS2_DUR1 = 59;	//duration 1;
const double N0_RS2_REL0 = 0.9845599185311213;	//reliability 0;
const double N0_RS2_REL1 = 0.9356496915514066;	//reliability 1;

const int N0_RS3_ID = 3;
const int N0_RS3_COST = 33;	//cost
const bool N0_RS3_AVAIL = true;	//availability status
const int N0_RS3_DUR0 = 36;	//duration 0;
const int N0_RS3_DUR1 = 30;	//duration 1;
const double N0_RS3_REL0 = 0.9697202072609353;	//reliability 0;
const double N0_RS3_REL1 = 0.9670652236259051;	//reliability 1;

const int N0_RS4_ID = 4;
const int N0_RS4_COST = 11;	//cost
const bool N0_RS4_AVAIL = true;	//availability status
const int N0_RS4_DUR0 = 44;	//duration 0;
const int N0_RS4_DUR1 = 57;	//duration 1;
const double N0_RS4_REL0 = 0.9863410225800122;	//reliability 0;
const double N0_RS4_REL1 = 0.9474572190470881;	//reliability 1;

const int N0_RS5_ID = 5;
const int N0_RS5_COST = 17;	//cost
const bool N0_RS5_AVAIL = true;	//availability status
const int N0_RS5_DUR0 = 26;	//duration 0;
const int N0_RS5_DUR1 = 53;	//duration 1;
const double N0_RS5_REL0 = 0.9749833929467091;	//reliability 0;
const double N0_RS5_REL1 = 0.9545222648060058;	//reliability 1;

const int N0_RS6_ID = 6;
const int N0_RS6_COST = 31;	//cost
const bool N0_RS6_AVAIL = true;	//availability status
const int N0_RS6_DUR0 = 14;	//duration 0;
const int N0_RS6_DUR1 = 16;	//duration 1;
const double N0_RS6_REL0 = 0.9366647340489982;	//reliability 0;
const double N0_RS6_REL1 = 0.9471170686110572;	//reliability 1;

const int N0_RS7_ID = 7;
const int N0_RS7_COST = 16;	//cost
const bool N0_RS7_AVAIL = true;	//availability status
const int N0_RS7_DUR0 = 35;	//duration 0;
const int N0_RS7_DUR1 = 33;	//duration 1;
const double N0_RS7_REL0 = 0.9034568778663532;	//reliability 0;
const double N0_RS7_REL1 = 0.9507066562447902;	//reliability 1;

const int N0_RS8_ID = 8;
const int N0_RS8_COST = 23;	//cost
const bool N0_RS8_AVAIL = true;	//availability status
const int N0_RS8_DUR0 = 22;	//duration 0;
const int N0_RS8_DUR1 = 41;	//duration 1;
const double N0_RS8_REL0 = 0.969483237226941;	//reliability 0;
const double N0_RS8_REL1 = 0.9915261381295415;	//reliability 1;

const int N0_RS9_ID = 9;
const int N0_RS9_COST = 45;	//cost
const bool N0_RS9_AVAIL = true;	//availability status
const int N0_RS9_DUR0 = 21;	//duration 0;
const int N0_RS9_DUR1 = 34;	//duration 1;
const double N0_RS9_REL0 = 0.995089695835433;	//reliability 0;
const double N0_RS9_REL1 = 0.9044508423972831;	//reliability 1;

const int N0_RS10_ID = 10;
const int N0_RS10_COST = 36;	//cost
const bool N0_RS10_AVAIL = true;	//availability status
const int N0_RS10_DUR0 = 10;	//duration 0;
const int N0_RS10_DUR1 = 19;	//duration 1;
const double N0_RS10_REL0 = 0.9654187021830412;	//reliability 0;
const double N0_RS10_REL1 = 0.9272310840054682;	//reliability 1;

const int N0_RS11_ID = 11;
const int N0_RS11_COST = 11;	//cost
const bool N0_RS11_AVAIL = true;	//availability status
const int N0_RS11_DUR0 = 41;	//duration 0;
const int N0_RS11_DUR1 = 28;	//duration 1;
const double N0_RS11_REL0 = 0.9505205025571545;	//reliability 0;
const double N0_RS11_REL1 = 0.921452851085821;	//reliability 1;

const int N0_RS12_ID = 12;
const int N0_RS12_COST = 58;	//cost
const bool N0_RS12_AVAIL = true;	//availability status
const int N0_RS12_DUR0 = 29;	//duration 0;
const int N0_RS12_DUR1 = 13;	//duration 1;
const double N0_RS12_REL0 = 0.9309392872969279;	//reliability 0;
const double N0_RS12_REL1 = 0.9455662968874748;	//reliability 1;

const int N0_RS13_ID = 13;
const int N0_RS13_COST = 41;	//cost
const bool N0_RS13_AVAIL = true;	//availability status
const int N0_RS13_DUR0 = 36;	//duration 0;
const int N0_RS13_DUR1 = 25;	//duration 1;
const double N0_RS13_REL0 = 0.9593365413705264;	//reliability 0;
const double N0_RS13_REL1 = 0.9953024915283206;	//reliability 1;

const int N0_RS14_ID = 14;
const int N0_RS14_COST = 29;	//cost
const bool N0_RS14_AVAIL = true;	//availability status
const int N0_RS14_DUR0 = 34;	//duration 0;
const int N0_RS14_DUR1 = 17;	//duration 1;
const double N0_RS14_REL0 = 0.9334681511587236;	//reliability 0;
const double N0_RS14_REL1 = 0.9682942674095847;	//reliability 1;

const int N0_RS15_ID = 15;
const int N0_RS15_COST = 28;	//cost
const bool N0_RS15_AVAIL = true;	//availability status
const int N0_RS15_DUR0 = 20;	//duration 0;
const int N0_RS15_DUR1 = 17;	//duration 1;
const double N0_RS15_REL0 = 0.9939851683732684;	//reliability 0;
const double N0_RS15_REL1 = 0.9425724599312343;	//reliability 1;

const int N0_RS16_ID = 16;
const int N0_RS16_COST = 54;	//cost
const bool N0_RS16_AVAIL = true;	//availability status
const int N0_RS16_DUR0 = 59;	//duration 0;
const int N0_RS16_DUR1 = 15;	//duration 1;
const double N0_RS16_REL0 = 0.9452383701351728;	//reliability 0;
const double N0_RS16_REL1 = 0.9927448330936587;	//reliability 1;

const int N0_RS17_ID = 17;
const int N0_RS17_COST = 19;	//cost
const bool N0_RS17_AVAIL = true;	//availability status
const int N0_RS17_DUR0 = 18;	//duration 0;
const int N0_RS17_DUR1 = 53;	//duration 1;
const double N0_RS17_REL0 = 0.9302882719364316;	//reliability 0;
const double N0_RS17_REL1 = 0.9582487481855076;	//reliability 1;

const int N0_RS18_ID = 18;
const int N0_RS18_COST = 47;	//cost
const bool N0_RS18_AVAIL = true;	//availability status
const int N0_RS18_DUR0 = 30;	//duration 0;
const int N0_RS18_DUR1 = 20;	//duration 1;
const double N0_RS18_REL0 = 0.9754903376418033;	//reliability 0;
const double N0_RS18_REL1 = 0.9873501964102849;	//reliability 1;

const int N0_RS19_ID = 19;
const int N0_RS19_COST = 36;	//cost
const bool N0_RS19_AVAIL = true;	//availability status
const int N0_RS19_DUR0 = 57;	//duration 0;
const int N0_RS19_DUR1 = 50;	//duration 1;
const double N0_RS19_REL0 = 0.9844804712052807;	//reliability 0;
const double N0_RS19_REL1 = 0.9370536574257113;	//reliability 1;

const int N0_RS20_ID = 20;
const int N0_RS20_COST = 43;	//cost
const bool N0_RS20_AVAIL = true;	//availability status
const int N0_RS20_DUR0 = 10;	//duration 0;
const int N0_RS20_DUR1 = 46;	//duration 1;
const double N0_RS20_REL0 = 0.9169947312300639;	//reliability 0;
const double N0_RS20_REL1 = 0.9285347014577168;	//reliability 1;

const int N0_RS21_ID = 21;
const int N0_RS21_COST = 29;	//cost
const bool N0_RS21_AVAIL = true;	//availability status
const int N0_RS21_DUR0 = 46;	//duration 0;
const int N0_RS21_DUR1 = 51;	//duration 1;
const double N0_RS21_REL0 = 0.9026381263418831;	//reliability 0;
const double N0_RS21_REL1 = 0.9237899180067528;	//reliability 1;

const int N0_RS22_ID = 22;
const int N0_RS22_COST = 39;	//cost
const bool N0_RS22_AVAIL = true;	//availability status
const int N0_RS22_DUR0 = 34;	//duration 0;
const int N0_RS22_DUR1 = 17;	//duration 1;
const double N0_RS22_REL0 = 0.9394189838333465;	//reliability 0;
const double N0_RS22_REL1 = 0.9637481801619855;	//reliability 1;

const int N0_RS23_ID = 23;
const int N0_RS23_COST = 48;	//cost
const bool N0_RS23_AVAIL = true;	//availability status
const int N0_RS23_DUR0 = 26;	//duration 0;
const int N0_RS23_DUR1 = 12;	//duration 1;
const double N0_RS23_REL0 = 0.9637555598292186;	//reliability 0;
const double N0_RS23_REL1 = 0.9278961589506355;	//reliability 1;

const int N0_RS24_ID = 24;
const int N0_RS24_COST = 14;	//cost
const bool N0_RS24_AVAIL = true;	//availability status
const int N0_RS24_DUR0 = 14;	//duration 0;
const int N0_RS24_DUR1 = 46;	//duration 1;
const double N0_RS24_REL0 = 0.9710347477249653;	//reliability 0;
const double N0_RS24_REL1 = 0.901025453091354;	//reliability 1;

const int N0_RS25_ID = 25;
const int N0_RS25_COST = 52;	//cost
const bool N0_RS25_AVAIL = true;	//availability status
const int N0_RS25_DUR0 = 58;	//duration 0;
const int N0_RS25_DUR1 = 56;	//duration 1;
const double N0_RS25_REL0 = 0.9800695409967943;	//reliability 0;
const double N0_RS25_REL1 = 0.9704123723168278;	//reliability 1;

const int N0_RS26_ID = 26;
const int N0_RS26_COST = 22;	//cost
const bool N0_RS26_AVAIL = true;	//availability status
const int N0_RS26_DUR0 = 19;	//duration 0;
const int N0_RS26_DUR1 = 34;	//duration 1;
const double N0_RS26_REL0 = 0.9206485257575573;	//reliability 0;
const double N0_RS26_REL1 = 0.9337611442186812;	//reliability 1;

const int N0_RS27_ID = 27;
const int N0_RS27_COST = 58;	//cost
const bool N0_RS27_AVAIL = true;	//availability status
const int N0_RS27_DUR0 = 37;	//duration 0;
const int N0_RS27_DUR1 = 30;	//duration 1;
const double N0_RS27_REL0 = 0.9555928197054202;	//reliability 0;
const double N0_RS27_REL1 = 0.9047409570319729;	//reliability 1;

const int N0_RS28_ID = 28;
const int N0_RS28_COST = 41;	//cost
const bool N0_RS28_AVAIL = true;	//availability status
const int N0_RS28_DUR0 = 40;	//duration 0;
const int N0_RS28_DUR1 = 25;	//duration 1;
const double N0_RS28_REL0 = 0.9412607766218971;	//reliability 0;
const double N0_RS28_REL1 = 0.9852536277717037;	//reliability 1;

const int N0_RS29_ID = 29;
const int N0_RS29_COST = 43;	//cost
const bool N0_RS29_AVAIL = true;	//availability status
const int N0_RS29_DUR0 = 31;	//duration 0;
const int N0_RS29_DUR1 = 27;	//duration 1;
const double N0_RS29_REL0 = 0.9792786539071878;	//reliability 0;
const double N0_RS29_REL1 = 0.914863034740315;	//reliability 1;

const int N1_RS0_ID = 0;
const int N1_RS0_COST = 47;	//cost
const bool N1_RS0_AVAIL = true;	//availability status
const int N1_RS0_DUR0 = 33;	//duration 0;
const int N1_RS0_DUR1 = 22;	//duration 1;
const double N1_RS0_REL0 = 0.9921071036263052;	//reliability 0;
const double N1_RS0_REL1 = 0.9252011773855829;	//reliability 1;

const int N1_RS1_ID = 1;
const int N1_RS1_COST = 20;	//cost
const bool N1_RS1_AVAIL = true;	//availability status
const int N1_RS1_DUR0 = 11;	//duration 0;
const int N1_RS1_DUR1 = 30;	//duration 1;
const double N1_RS1_REL0 = 0.9747582295819812;	//reliability 0;
const double N1_RS1_REL1 = 0.9966296306163301;	//reliability 1;

const int N1_RS2_ID = 2;
const int N1_RS2_COST = 38;	//cost
const bool N1_RS2_AVAIL = true;	//availability status
const int N1_RS2_DUR0 = 51;	//duration 0;
const int N1_RS2_DUR1 = 31;	//duration 1;
const double N1_RS2_REL0 = 0.9100571268564025;	//reliability 0;
const double N1_RS2_REL1 = 0.9267976775236971;	//reliability 1;

const int N1_RS3_ID = 3;
const int N1_RS3_COST = 30;	//cost
const bool N1_RS3_AVAIL = true;	//availability status
const int N1_RS3_DUR0 = 59;	//duration 0;
const int N1_RS3_DUR1 = 34;	//duration 1;
const double N1_RS3_REL0 = 0.9979741961814537;	//reliability 0;
const double N1_RS3_REL1 = 0.9563800852740166;	//reliability 1;

const int N1_RS4_ID = 4;
const int N1_RS4_COST = 34;	//cost
const bool N1_RS4_AVAIL = true;	//availability status
const int N1_RS4_DUR0 = 24;	//duration 0;
const int N1_RS4_DUR1 = 41;	//duration 1;
const double N1_RS4_REL0 = 0.9329133001682175;	//reliability 0;
const double N1_RS4_REL1 = 0.9477381946567481;	//reliability 1;

const int N1_RS5_ID = 5;
const int N1_RS5_COST = 46;	//cost
const bool N1_RS5_AVAIL = true;	//availability status
const int N1_RS5_DUR0 = 22;	//duration 0;
const int N1_RS5_DUR1 = 52;	//duration 1;
const double N1_RS5_REL0 = 0.9091710058111326;	//reliability 0;
const double N1_RS5_REL1 = 0.9666581403385411;	//reliability 1;

const int N1_RS6_ID = 6;
const int N1_RS6_COST = 56;	//cost
const bool N1_RS6_AVAIL = true;	//availability status
const int N1_RS6_DUR0 = 26;	//duration 0;
const int N1_RS6_DUR1 = 23;	//duration 1;
const double N1_RS6_REL0 = 0.9243771339444727;	//reliability 0;
const double N1_RS6_REL1 = 0.9555870591112265;	//reliability 1;

const int N1_RS7_ID = 7;
const int N1_RS7_COST = 42;	//cost
const bool N1_RS7_AVAIL = true;	//availability status
const int N1_RS7_DUR0 = 40;	//duration 0;
const int N1_RS7_DUR1 = 32;	//duration 1;
const double N1_RS7_REL0 = 0.9396161592204271;	//reliability 0;
const double N1_RS7_REL1 = 0.9699418935282985;	//reliability 1;

const int N1_RS8_ID = 8;
const int N1_RS8_COST = 48;	//cost
const bool N1_RS8_AVAIL = true;	//availability status
const int N1_RS8_DUR0 = 52;	//duration 0;
const int N1_RS8_DUR1 = 50;	//duration 1;
const double N1_RS8_REL0 = 0.9844444003403399;	//reliability 0;
const double N1_RS8_REL1 = 0.9642375893687891;	//reliability 1;

const int N1_RS9_ID = 9;
const int N1_RS9_COST = 23;	//cost
const bool N1_RS9_AVAIL = true;	//availability status
const int N1_RS9_DUR0 = 34;	//duration 0;
const int N1_RS9_DUR1 = 13;	//duration 1;
const double N1_RS9_REL0 = 0.9179724876412272;	//reliability 0;
const double N1_RS9_REL1 = 0.9973222679815269;	//reliability 1;

const int N1_RS10_ID = 10;
const int N1_RS10_COST = 47;	//cost
const bool N1_RS10_AVAIL = true;	//availability status
const int N1_RS10_DUR0 = 20;	//duration 0;
const int N1_RS10_DUR1 = 35;	//duration 1;
const double N1_RS10_REL0 = 0.9618048736627711;	//reliability 0;
const double N1_RS10_REL1 = 0.9859390223801752;	//reliability 1;

const int N1_RS11_ID = 11;
const int N1_RS11_COST = 33;	//cost
const bool N1_RS11_AVAIL = true;	//availability status
const int N1_RS11_DUR0 = 36;	//duration 0;
const int N1_RS11_DUR1 = 31;	//duration 1;
const double N1_RS11_REL0 = 0.9967675793468598;	//reliability 0;
const double N1_RS11_REL1 = 0.9934270912119965;	//reliability 1;

const int N1_RS12_ID = 12;
const int N1_RS12_COST = 26;	//cost
const bool N1_RS12_AVAIL = true;	//availability status
const int N1_RS12_DUR0 = 45;	//duration 0;
const int N1_RS12_DUR1 = 43;	//duration 1;
const double N1_RS12_REL0 = 0.999907715622581;	//reliability 0;
const double N1_RS12_REL1 = 0.9151462860316907;	//reliability 1;

const int N1_RS13_ID = 13;
const int N1_RS13_COST = 56;	//cost
const bool N1_RS13_AVAIL = true;	//availability status
const int N1_RS13_DUR0 = 56;	//duration 0;
const int N1_RS13_DUR1 = 32;	//duration 1;
const double N1_RS13_REL0 = 0.9579896742591832;	//reliability 0;
const double N1_RS13_REL1 = 0.9817130752093096;	//reliability 1;

const int N1_RS14_ID = 14;
const int N1_RS14_COST = 17;	//cost
const bool N1_RS14_AVAIL = true;	//availability status
const int N1_RS14_DUR0 = 24;	//duration 0;
const int N1_RS14_DUR1 = 45;	//duration 1;
const double N1_RS14_REL0 = 0.9114427893603496;	//reliability 0;
const double N1_RS14_REL1 = 0.9396072209342653;	//reliability 1;

const int N1_RS15_ID = 15;
const int N1_RS15_COST = 53;	//cost
const bool N1_RS15_AVAIL = true;	//availability status
const int N1_RS15_DUR0 = 52;	//duration 0;
const int N1_RS15_DUR1 = 38;	//duration 1;
const double N1_RS15_REL0 = 0.990124573575904;	//reliability 0;
const double N1_RS15_REL1 = 0.9272562033442663;	//reliability 1;

const int N1_RS16_ID = 16;
const int N1_RS16_COST = 15;	//cost
const bool N1_RS16_AVAIL = true;	//availability status
const int N1_RS16_DUR0 = 21;	//duration 0;
const int N1_RS16_DUR1 = 37;	//duration 1;
const double N1_RS16_REL0 = 0.9414724234464448;	//reliability 0;
const double N1_RS16_REL1 = 0.9104650394005205;	//reliability 1;

const int N1_RS17_ID = 17;
const int N1_RS17_COST = 42;	//cost
const bool N1_RS17_AVAIL = true;	//availability status
const int N1_RS17_DUR0 = 14;	//duration 0;
const int N1_RS17_DUR1 = 30;	//duration 1;
const double N1_RS17_REL0 = 0.9759762399276172;	//reliability 0;
const double N1_RS17_REL1 = 0.9438677413246785;	//reliability 1;

const int N1_RS18_ID = 18;
const int N1_RS18_COST = 39;	//cost
const bool N1_RS18_AVAIL = true;	//availability status
const int N1_RS18_DUR0 = 46;	//duration 0;
const int N1_RS18_DUR1 = 32;	//duration 1;
const double N1_RS18_REL0 = 0.9092067870309418;	//reliability 0;
const double N1_RS18_REL1 = 0.9723888871166231;	//reliability 1;

const int N1_RS19_ID = 19;
const int N1_RS19_COST = 48;	//cost
const bool N1_RS19_AVAIL = true;	//availability status
const int N1_RS19_DUR0 = 15;	//duration 0;
const int N1_RS19_DUR1 = 57;	//duration 1;
const double N1_RS19_REL0 = 0.9104060997518346;	//reliability 0;
const double N1_RS19_REL1 = 0.9240348933250115;	//reliability 1;

const int N1_RS20_ID = 20;
const int N1_RS20_COST = 50;	//cost
const bool N1_RS20_AVAIL = true;	//availability status
const int N1_RS20_DUR0 = 19;	//duration 0;
const int N1_RS20_DUR1 = 57;	//duration 1;
const double N1_RS20_REL0 = 0.9369252089316591;	//reliability 0;
const double N1_RS20_REL1 = 0.9242766368238583;	//reliability 1;

const int N1_RS21_ID = 21;
const int N1_RS21_COST = 58;	//cost
const bool N1_RS21_AVAIL = true;	//availability status
const int N1_RS21_DUR0 = 10;	//duration 0;
const int N1_RS21_DUR1 = 48;	//duration 1;
const double N1_RS21_REL0 = 0.9551648556117703;	//reliability 0;
const double N1_RS21_REL1 = 0.9671586557524812;	//reliability 1;

const int N1_RS22_ID = 22;
const int N1_RS22_COST = 45;	//cost
const bool N1_RS22_AVAIL = true;	//availability status
const int N1_RS22_DUR0 = 59;	//duration 0;
const int N1_RS22_DUR1 = 42;	//duration 1;
const double N1_RS22_REL0 = 0.955970328491696;	//reliability 0;
const double N1_RS22_REL1 = 0.9548144877360513;	//reliability 1;

const int N1_RS23_ID = 23;
const int N1_RS23_COST = 57;	//cost
const bool N1_RS23_AVAIL = true;	//availability status
const int N1_RS23_DUR0 = 34;	//duration 0;
const int N1_RS23_DUR1 = 34;	//duration 1;
const double N1_RS23_REL0 = 0.9451120037700921;	//reliability 0;
const double N1_RS23_REL1 = 0.9810540360843696;	//reliability 1;

const int N1_RS24_ID = 24;
const int N1_RS24_COST = 53;	//cost
const bool N1_RS24_AVAIL = true;	//availability status
const int N1_RS24_DUR0 = 23;	//duration 0;
const int N1_RS24_DUR1 = 38;	//duration 1;
const double N1_RS24_REL0 = 0.9595850283979133;	//reliability 0;
const double N1_RS24_REL1 = 0.9557215686483458;	//reliability 1;

const int N1_RS25_ID = 25;
const int N1_RS25_COST = 26;	//cost
const bool N1_RS25_AVAIL = true;	//availability status
const int N1_RS25_DUR0 = 48;	//duration 0;
const int N1_RS25_DUR1 = 55;	//duration 1;
const double N1_RS25_REL0 = 0.976707719532725;	//reliability 0;
const double N1_RS25_REL1 = 0.9404435537819489;	//reliability 1;

const int N1_RS26_ID = 26;
const int N1_RS26_COST = 59;	//cost
const bool N1_RS26_AVAIL = true;	//availability status
const int N1_RS26_DUR0 = 30;	//duration 0;
const int N1_RS26_DUR1 = 39;	//duration 1;
const double N1_RS26_REL0 = 0.9981330708689246;	//reliability 0;
const double N1_RS26_REL1 = 0.9677957708778775;	//reliability 1;

const int N1_RS27_ID = 27;
const int N1_RS27_COST = 48;	//cost
const bool N1_RS27_AVAIL = true;	//availability status
const int N1_RS27_DUR0 = 54;	//duration 0;
const int N1_RS27_DUR1 = 10;	//duration 1;
const double N1_RS27_REL0 = 0.9074182314738761;	//reliability 0;
const double N1_RS27_REL1 = 0.9060232994314071;	//reliability 1;

const int N1_RS28_ID = 28;
const int N1_RS28_COST = 17;	//cost
const bool N1_RS28_AVAIL = true;	//availability status
const int N1_RS28_DUR0 = 13;	//duration 0;
const int N1_RS28_DUR1 = 53;	//duration 1;
const double N1_RS28_REL0 = 0.9944634015394609;	//reliability 0;
const double N1_RS28_REL1 = 0.9617285729762699;	//reliability 1;

const int N1_RS29_ID = 29;
const int N1_RS29_COST = 32;	//cost
const bool N1_RS29_AVAIL = true;	//availability status
const int N1_RS29_DUR0 = 55;	//duration 0;
const int N1_RS29_DUR1 = 25;	//duration 1;
const double N1_RS29_REL0 = 0.9925843316796699;	//reliability 0;
const double N1_RS29_REL1 = 0.9328213654062085;	//reliability 1;

const int N2_RS0_ID = 0;
const int N2_RS0_COST = 12;	//cost
const bool N2_RS0_AVAIL = true;	//availability status
const int N2_RS0_DUR0 = 26;	//duration 0;
const int N2_RS0_DUR1 = 11;	//duration 1;
const double N2_RS0_REL0 = 0.9539300444348373;	//reliability 0;
const double N2_RS0_REL1 = 0.9749323544056445;	//reliability 1;

const int N2_RS1_ID = 1;
const int N2_RS1_COST = 12;	//cost
const bool N2_RS1_AVAIL = true;	//availability status
const int N2_RS1_DUR0 = 56;	//duration 0;
const int N2_RS1_DUR1 = 48;	//duration 1;
const double N2_RS1_REL0 = 0.9468320528360712;	//reliability 0;
const double N2_RS1_REL1 = 0.9316108608148516;	//reliability 1;

const int N2_RS2_ID = 2;
const int N2_RS2_COST = 56;	//cost
const bool N2_RS2_AVAIL = true;	//availability status
const int N2_RS2_DUR0 = 59;	//duration 0;
const int N2_RS2_DUR1 = 16;	//duration 1;
const double N2_RS2_REL0 = 0.9086879050008039;	//reliability 0;
const double N2_RS2_REL1 = 0.9231584744715237;	//reliability 1;

const int N2_RS3_ID = 3;
const int N2_RS3_COST = 54;	//cost
const bool N2_RS3_AVAIL = true;	//availability status
const int N2_RS3_DUR0 = 28;	//duration 0;
const int N2_RS3_DUR1 = 26;	//duration 1;
const double N2_RS3_REL0 = 0.9230200240657594;	//reliability 0;
const double N2_RS3_REL1 = 0.9664493840865064;	//reliability 1;

const int N2_RS4_ID = 4;
const int N2_RS4_COST = 52;	//cost
const bool N2_RS4_AVAIL = true;	//availability status
const int N2_RS4_DUR0 = 25;	//duration 0;
const int N2_RS4_DUR1 = 39;	//duration 1;
const double N2_RS4_REL0 = 0.9826632704754878;	//reliability 0;
const double N2_RS4_REL1 = 0.935509085542978;	//reliability 1;

const int N2_RS5_ID = 5;
const int N2_RS5_COST = 24;	//cost
const bool N2_RS5_AVAIL = true;	//availability status
const int N2_RS5_DUR0 = 32;	//duration 0;
const int N2_RS5_DUR1 = 43;	//duration 1;
const double N2_RS5_REL0 = 0.9732751722501692;	//reliability 0;
const double N2_RS5_REL1 = 0.9374082786220681;	//reliability 1;

const int N2_RS6_ID = 6;
const int N2_RS6_COST = 14;	//cost
const bool N2_RS6_AVAIL = true;	//availability status
const int N2_RS6_DUR0 = 53;	//duration 0;
const int N2_RS6_DUR1 = 59;	//duration 1;
const double N2_RS6_REL0 = 0.9430060263201449;	//reliability 0;
const double N2_RS6_REL1 = 0.9031850768529138;	//reliability 1;

const int N2_RS7_ID = 7;
const int N2_RS7_COST = 21;	//cost
const bool N2_RS7_AVAIL = true;	//availability status
const int N2_RS7_DUR0 = 22;	//duration 0;
const int N2_RS7_DUR1 = 18;	//duration 1;
const double N2_RS7_REL0 = 0.9033275128518224;	//reliability 0;
const double N2_RS7_REL1 = 0.9773718091388045;	//reliability 1;

const int N2_RS8_ID = 8;
const int N2_RS8_COST = 50;	//cost
const bool N2_RS8_AVAIL = true;	//availability status
const int N2_RS8_DUR0 = 43;	//duration 0;
const int N2_RS8_DUR1 = 38;	//duration 1;
const double N2_RS8_REL0 = 0.9677366471239547;	//reliability 0;
const double N2_RS8_REL1 = 0.9230284010783375;	//reliability 1;

const int N2_RS9_ID = 9;
const int N2_RS9_COST = 53;	//cost
const bool N2_RS9_AVAIL = true;	//availability status
const int N2_RS9_DUR0 = 37;	//duration 0;
const int N2_RS9_DUR1 = 52;	//duration 1;
const double N2_RS9_REL0 = 0.991533953865624;	//reliability 0;
const double N2_RS9_REL1 = 0.9586994714712213;	//reliability 1;

const int N2_RS10_ID = 10;
const int N2_RS10_COST = 13;	//cost
const bool N2_RS10_AVAIL = true;	//availability status
const int N2_RS10_DUR0 = 56;	//duration 0;
const int N2_RS10_DUR1 = 56;	//duration 1;
const double N2_RS10_REL0 = 0.9764301301417294;	//reliability 0;
const double N2_RS10_REL1 = 0.9690327782921891;	//reliability 1;

const int N2_RS11_ID = 11;
const int N2_RS11_COST = 45;	//cost
const bool N2_RS11_AVAIL = true;	//availability status
const int N2_RS11_DUR0 = 16;	//duration 0;
const int N2_RS11_DUR1 = 59;	//duration 1;
const double N2_RS11_REL0 = 0.9507353448401467;	//reliability 0;
const double N2_RS11_REL1 = 0.9832697858066223;	//reliability 1;

const int N2_RS12_ID = 12;
const int N2_RS12_COST = 12;	//cost
const bool N2_RS12_AVAIL = true;	//availability status
const int N2_RS12_DUR0 = 19;	//duration 0;
const int N2_RS12_DUR1 = 59;	//duration 1;
const double N2_RS12_REL0 = 0.9848009200547228;	//reliability 0;
const double N2_RS12_REL1 = 0.9213245798164291;	//reliability 1;

const int N2_RS13_ID = 13;
const int N2_RS13_COST = 59;	//cost
const bool N2_RS13_AVAIL = true;	//availability status
const int N2_RS13_DUR0 = 19;	//duration 0;
const int N2_RS13_DUR1 = 33;	//duration 1;
const double N2_RS13_REL0 = 0.9309863994485691;	//reliability 0;
const double N2_RS13_REL1 = 0.9344371486128259;	//reliability 1;

const int N2_RS14_ID = 14;
const int N2_RS14_COST = 24;	//cost
const bool N2_RS14_AVAIL = true;	//availability status
const int N2_RS14_DUR0 = 22;	//duration 0;
const int N2_RS14_DUR1 = 12;	//duration 1;
const double N2_RS14_REL0 = 0.9101353363589845;	//reliability 0;
const double N2_RS14_REL1 = 0.9233710263142682;	//reliability 1;

const int N2_RS15_ID = 15;
const int N2_RS15_COST = 21;	//cost
const bool N2_RS15_AVAIL = true;	//availability status
const int N2_RS15_DUR0 = 48;	//duration 0;
const int N2_RS15_DUR1 = 13;	//duration 1;
const double N2_RS15_REL0 = 0.9880180531863733;	//reliability 0;
const double N2_RS15_REL1 = 0.9282381350021114;	//reliability 1;

const int N2_RS16_ID = 16;
const int N2_RS16_COST = 50;	//cost
const bool N2_RS16_AVAIL = true;	//availability status
const int N2_RS16_DUR0 = 46;	//duration 0;
const int N2_RS16_DUR1 = 59;	//duration 1;
const double N2_RS16_REL0 = 0.9625510869754333;	//reliability 0;
const double N2_RS16_REL1 = 0.9277472171945806;	//reliability 1;

const int N2_RS17_ID = 17;
const int N2_RS17_COST = 41;	//cost
const bool N2_RS17_AVAIL = true;	//availability status
const int N2_RS17_DUR0 = 31;	//duration 0;
const int N2_RS17_DUR1 = 53;	//duration 1;
const double N2_RS17_REL0 = 0.9865949523070011;	//reliability 0;
const double N2_RS17_REL1 = 0.9663570508595175;	//reliability 1;

const int N2_RS18_ID = 18;
const int N2_RS18_COST = 54;	//cost
const bool N2_RS18_AVAIL = true;	//availability status
const int N2_RS18_DUR0 = 44;	//duration 0;
const int N2_RS18_DUR1 = 52;	//duration 1;
const double N2_RS18_REL0 = 0.9466311261898477;	//reliability 0;
const double N2_RS18_REL1 = 0.9759220350667906;	//reliability 1;

const int N2_RS19_ID = 19;
const int N2_RS19_COST = 39;	//cost
const bool N2_RS19_AVAIL = true;	//availability status
const int N2_RS19_DUR0 = 35;	//duration 0;
const int N2_RS19_DUR1 = 33;	//duration 1;
const double N2_RS19_REL0 = 0.9078472067789618;	//reliability 0;
const double N2_RS19_REL1 = 0.9540813549600836;	//reliability 1;

const int N2_RS20_ID = 20;
const int N2_RS20_COST = 30;	//cost
const bool N2_RS20_AVAIL = true;	//availability status
const int N2_RS20_DUR0 = 32;	//duration 0;
const int N2_RS20_DUR1 = 56;	//duration 1;
const double N2_RS20_REL0 = 0.9920327764226663;	//reliability 0;
const double N2_RS20_REL1 = 0.9053651364069639;	//reliability 1;

const int N2_RS21_ID = 21;
const int N2_RS21_COST = 33;	//cost
const bool N2_RS21_AVAIL = true;	//availability status
const int N2_RS21_DUR0 = 22;	//duration 0;
const int N2_RS21_DUR1 = 11;	//duration 1;
const double N2_RS21_REL0 = 0.9176904799620267;	//reliability 0;
const double N2_RS21_REL1 = 0.9261159485699088;	//reliability 1;

const int N2_RS22_ID = 22;
const int N2_RS22_COST = 11;	//cost
const bool N2_RS22_AVAIL = true;	//availability status
const int N2_RS22_DUR0 = 38;	//duration 0;
const int N2_RS22_DUR1 = 35;	//duration 1;
const double N2_RS22_REL0 = 0.9627331954715667;	//reliability 0;
const double N2_RS22_REL1 = 0.9487994744013772;	//reliability 1;

const int N2_RS23_ID = 23;
const int N2_RS23_COST = 38;	//cost
const bool N2_RS23_AVAIL = true;	//availability status
const int N2_RS23_DUR0 = 41;	//duration 0;
const int N2_RS23_DUR1 = 23;	//duration 1;
const double N2_RS23_REL0 = 0.9484313496479752;	//reliability 0;
const double N2_RS23_REL1 = 0.9783453375411891;	//reliability 1;

const int N2_RS24_ID = 24;
const int N2_RS24_COST = 10;	//cost
const bool N2_RS24_AVAIL = true;	//availability status
const int N2_RS24_DUR0 = 17;	//duration 0;
const int N2_RS24_DUR1 = 42;	//duration 1;
const double N2_RS24_REL0 = 0.9691644128155891;	//reliability 0;
const double N2_RS24_REL1 = 0.9843514653950818;	//reliability 1;

const int N2_RS25_ID = 25;
const int N2_RS25_COST = 23;	//cost
const bool N2_RS25_AVAIL = true;	//availability status
const int N2_RS25_DUR0 = 14;	//duration 0;
const int N2_RS25_DUR1 = 11;	//duration 1;
const double N2_RS25_REL0 = 0.998351031468644;	//reliability 0;
const double N2_RS25_REL1 = 0.9863365121986292;	//reliability 1;

const int N2_RS26_ID = 26;
const int N2_RS26_COST = 25;	//cost
const bool N2_RS26_AVAIL = true;	//availability status
const int N2_RS26_DUR0 = 44;	//duration 0;
const int N2_RS26_DUR1 = 36;	//duration 1;
const double N2_RS26_REL0 = 0.9513897489224109;	//reliability 0;
const double N2_RS26_REL1 = 0.9688281962317831;	//reliability 1;

const int N2_RS27_ID = 27;
const int N2_RS27_COST = 45;	//cost
const bool N2_RS27_AVAIL = true;	//availability status
const int N2_RS27_DUR0 = 36;	//duration 0;
const int N2_RS27_DUR1 = 34;	//duration 1;
const double N2_RS27_REL0 = 0.9593354551650861;	//reliability 0;
const double N2_RS27_REL1 = 0.9066939491683537;	//reliability 1;

const int N2_RS28_ID = 28;
const int N2_RS28_COST = 25;	//cost
const bool N2_RS28_AVAIL = true;	//availability status
const int N2_RS28_DUR0 = 13;	//duration 0;
const int N2_RS28_DUR1 = 18;	//duration 1;
const double N2_RS28_REL0 = 0.9502124567638295;	//reliability 0;
const double N2_RS28_REL1 = 0.9183262704987032;	//reliability 1;

const int N2_RS29_ID = 29;
const int N2_RS29_COST = 33;	//cost
const bool N2_RS29_AVAIL = true;	//availability status
const int N2_RS29_DUR0 = 22;	//duration 0;
const int N2_RS29_DUR1 = 52;	//duration 1;
const double N2_RS29_REL0 = 0.9804217156109057;	//reliability 0;
const double N2_RS29_REL1 = 0.9477820938943288;	//reliability 1;

const int N3_RS0_ID = 0;
const int N3_RS0_COST = 47;	//cost
const bool N3_RS0_AVAIL = true;	//availability status
const int N3_RS0_DUR0 = 54;	//duration 0;
const int N3_RS0_DUR1 = 25;	//duration 1;
const double N3_RS0_REL0 = 0.9290797863677953;	//reliability 0;
const double N3_RS0_REL1 = 0.9481026892638874;	//reliability 1;

const int N3_RS1_ID = 1;
const int N3_RS1_COST = 53;	//cost
const bool N3_RS1_AVAIL = true;	//availability status
const int N3_RS1_DUR0 = 31;	//duration 0;
const int N3_RS1_DUR1 = 39;	//duration 1;
const double N3_RS1_REL0 = 0.9969329891928923;	//reliability 0;
const double N3_RS1_REL1 = 0.90382048207699;	//reliability 1;

const int N3_RS2_ID = 2;
const int N3_RS2_COST = 42;	//cost
const bool N3_RS2_AVAIL = true;	//availability status
const int N3_RS2_DUR0 = 53;	//duration 0;
const int N3_RS2_DUR1 = 16;	//duration 1;
const double N3_RS2_REL0 = 0.9890001866969063;	//reliability 0;
const double N3_RS2_REL1 = 0.992052413140101;	//reliability 1;

const int N3_RS3_ID = 3;
const int N3_RS3_COST = 37;	//cost
const bool N3_RS3_AVAIL = true;	//availability status
const int N3_RS3_DUR0 = 46;	//duration 0;
const int N3_RS3_DUR1 = 45;	//duration 1;
const double N3_RS3_REL0 = 0.9315897130893981;	//reliability 0;
const double N3_RS3_REL1 = 0.9515549432079063;	//reliability 1;

const int N3_RS4_ID = 4;
const int N3_RS4_COST = 31;	//cost
const bool N3_RS4_AVAIL = true;	//availability status
const int N3_RS4_DUR0 = 25;	//duration 0;
const int N3_RS4_DUR1 = 18;	//duration 1;
const double N3_RS4_REL0 = 0.9181004602954992;	//reliability 0;
const double N3_RS4_REL1 = 0.9802660900751737;	//reliability 1;

const int N3_RS5_ID = 5;
const int N3_RS5_COST = 49;	//cost
const bool N3_RS5_AVAIL = true;	//availability status
const int N3_RS5_DUR0 = 54;	//duration 0;
const int N3_RS5_DUR1 = 59;	//duration 1;
const double N3_RS5_REL0 = 0.9057500894768921;	//reliability 0;
const double N3_RS5_REL1 = 0.9175601680978742;	//reliability 1;

const int N3_RS6_ID = 6;
const int N3_RS6_COST = 28;	//cost
const bool N3_RS6_AVAIL = true;	//availability status
const int N3_RS6_DUR0 = 32;	//duration 0;
const int N3_RS6_DUR1 = 13;	//duration 1;
const double N3_RS6_REL0 = 0.9027053941690798;	//reliability 0;
const double N3_RS6_REL1 = 0.9510383775047289;	//reliability 1;

const int N3_RS7_ID = 7;
const int N3_RS7_COST = 13;	//cost
const bool N3_RS7_AVAIL = true;	//availability status
const int N3_RS7_DUR0 = 43;	//duration 0;
const int N3_RS7_DUR1 = 18;	//duration 1;
const double N3_RS7_REL0 = 0.9965182897523369;	//reliability 0;
const double N3_RS7_REL1 = 0.9698886771983706;	//reliability 1;

const int N3_RS8_ID = 8;
const int N3_RS8_COST = 42;	//cost
const bool N3_RS8_AVAIL = true;	//availability status
const int N3_RS8_DUR0 = 15;	//duration 0;
const int N3_RS8_DUR1 = 27;	//duration 1;
const double N3_RS8_REL0 = 0.9420847098007693;	//reliability 0;
const double N3_RS8_REL1 = 0.9978111494219924;	//reliability 1;

const int N3_RS9_ID = 9;
const int N3_RS9_COST = 39;	//cost
const bool N3_RS9_AVAIL = true;	//availability status
const int N3_RS9_DUR0 = 59;	//duration 0;
const int N3_RS9_DUR1 = 22;	//duration 1;
const double N3_RS9_REL0 = 0.9174530812739773;	//reliability 0;
const double N3_RS9_REL1 = 0.9371358515265898;	//reliability 1;

const int N3_RS10_ID = 10;
const int N3_RS10_COST = 49;	//cost
const bool N3_RS10_AVAIL = true;	//availability status
const int N3_RS10_DUR0 = 58;	//duration 0;
const int N3_RS10_DUR1 = 57;	//duration 1;
const double N3_RS10_REL0 = 0.967416481298511;	//reliability 0;
const double N3_RS10_REL1 = 0.9657714006335113;	//reliability 1;

const int N3_RS11_ID = 11;
const int N3_RS11_COST = 29;	//cost
const bool N3_RS11_AVAIL = true;	//availability status
const int N3_RS11_DUR0 = 50;	//duration 0;
const int N3_RS11_DUR1 = 59;	//duration 1;
const double N3_RS11_REL0 = 0.9098913512795099;	//reliability 0;
const double N3_RS11_REL1 = 0.9591528328263496;	//reliability 1;

const int N3_RS12_ID = 12;
const int N3_RS12_COST = 55;	//cost
const bool N3_RS12_AVAIL = true;	//availability status
const int N3_RS12_DUR0 = 27;	//duration 0;
const int N3_RS12_DUR1 = 41;	//duration 1;
const double N3_RS12_REL0 = 0.9487148614691648;	//reliability 0;
const double N3_RS12_REL1 = 0.9069360262273513;	//reliability 1;

const int N3_RS13_ID = 13;
const int N3_RS13_COST = 11;	//cost
const bool N3_RS13_AVAIL = true;	//availability status
const int N3_RS13_DUR0 = 23;	//duration 0;
const int N3_RS13_DUR1 = 15;	//duration 1;
const double N3_RS13_REL0 = 0.959286511995429;	//reliability 0;
const double N3_RS13_REL1 = 0.9526067262098081;	//reliability 1;

const int N3_RS14_ID = 14;
const int N3_RS14_COST = 42;	//cost
const bool N3_RS14_AVAIL = true;	//availability status
const int N3_RS14_DUR0 = 26;	//duration 0;
const int N3_RS14_DUR1 = 21;	//duration 1;
const double N3_RS14_REL0 = 0.9795640217931668;	//reliability 0;
const double N3_RS14_REL1 = 0.9488954235120934;	//reliability 1;

const int N3_RS15_ID = 15;
const int N3_RS15_COST = 13;	//cost
const bool N3_RS15_AVAIL = true;	//availability status
const int N3_RS15_DUR0 = 49;	//duration 0;
const int N3_RS15_DUR1 = 12;	//duration 1;
const double N3_RS15_REL0 = 0.9632977820242751;	//reliability 0;
const double N3_RS15_REL1 = 0.9861551017973017;	//reliability 1;

const int N3_RS16_ID = 16;
const int N3_RS16_COST = 45;	//cost
const bool N3_RS16_AVAIL = true;	//availability status
const int N3_RS16_DUR0 = 13;	//duration 0;
const int N3_RS16_DUR1 = 26;	//duration 1;
const double N3_RS16_REL0 = 0.9556859647281167;	//reliability 0;
const double N3_RS16_REL1 = 0.9763850447196034;	//reliability 1;

const int N3_RS17_ID = 17;
const int N3_RS17_COST = 15;	//cost
const bool N3_RS17_AVAIL = true;	//availability status
const int N3_RS17_DUR0 = 24;	//duration 0;
const int N3_RS17_DUR1 = 46;	//duration 1;
const double N3_RS17_REL0 = 0.9827053421095949;	//reliability 0;
const double N3_RS17_REL1 = 0.9198691316462029;	//reliability 1;

const int N3_RS18_ID = 18;
const int N3_RS18_COST = 27;	//cost
const bool N3_RS18_AVAIL = true;	//availability status
const int N3_RS18_DUR0 = 50;	//duration 0;
const int N3_RS18_DUR1 = 32;	//duration 1;
const double N3_RS18_REL0 = 0.9815079949836205;	//reliability 0;
const double N3_RS18_REL1 = 0.9440088984228683;	//reliability 1;

const int N3_RS19_ID = 19;
const int N3_RS19_COST = 21;	//cost
const bool N3_RS19_AVAIL = true;	//availability status
const int N3_RS19_DUR0 = 35;	//duration 0;
const int N3_RS19_DUR1 = 50;	//duration 1;
const double N3_RS19_REL0 = 0.9011029591550687;	//reliability 0;
const double N3_RS19_REL1 = 0.9354534845549286;	//reliability 1;

const int N3_RS20_ID = 20;
const int N3_RS20_COST = 36;	//cost
const bool N3_RS20_AVAIL = true;	//availability status
const int N3_RS20_DUR0 = 36;	//duration 0;
const int N3_RS20_DUR1 = 37;	//duration 1;
const double N3_RS20_REL0 = 0.9190751003259285;	//reliability 0;
const double N3_RS20_REL1 = 0.938958882576554;	//reliability 1;

const int N3_RS21_ID = 21;
const int N3_RS21_COST = 10;	//cost
const bool N3_RS21_AVAIL = true;	//availability status
const int N3_RS21_DUR0 = 35;	//duration 0;
const int N3_RS21_DUR1 = 54;	//duration 1;
const double N3_RS21_REL0 = 0.9485161031468403;	//reliability 0;
const double N3_RS21_REL1 = 0.9674359760754039;	//reliability 1;

const int N3_RS22_ID = 22;
const int N3_RS22_COST = 50;	//cost
const bool N3_RS22_AVAIL = true;	//availability status
const int N3_RS22_DUR0 = 10;	//duration 0;
const int N3_RS22_DUR1 = 26;	//duration 1;
const double N3_RS22_REL0 = 0.9527091482922215;	//reliability 0;
const double N3_RS22_REL1 = 0.9921723801330957;	//reliability 1;

const int N3_RS23_ID = 23;
const int N3_RS23_COST = 39;	//cost
const bool N3_RS23_AVAIL = true;	//availability status
const int N3_RS23_DUR0 = 42;	//duration 0;
const int N3_RS23_DUR1 = 35;	//duration 1;
const double N3_RS23_REL0 = 0.9376610815221726;	//reliability 0;
const double N3_RS23_REL1 = 0.9076019793418239;	//reliability 1;

const int N3_RS24_ID = 24;
const int N3_RS24_COST = 33;	//cost
const bool N3_RS24_AVAIL = true;	//availability status
const int N3_RS24_DUR0 = 42;	//duration 0;
const int N3_RS24_DUR1 = 24;	//duration 1;
const double N3_RS24_REL0 = 0.9416281398339578;	//reliability 0;
const double N3_RS24_REL1 = 0.9261192472201762;	//reliability 1;

const int N3_RS25_ID = 25;
const int N3_RS25_COST = 15;	//cost
const bool N3_RS25_AVAIL = true;	//availability status
const int N3_RS25_DUR0 = 56;	//duration 0;
const int N3_RS25_DUR1 = 54;	//duration 1;
const double N3_RS25_REL0 = 0.9832387032479887;	//reliability 0;
const double N3_RS25_REL1 = 0.9683417213326188;	//reliability 1;

const int N3_RS26_ID = 26;
const int N3_RS26_COST = 42;	//cost
const bool N3_RS26_AVAIL = true;	//availability status
const int N3_RS26_DUR0 = 20;	//duration 0;
const int N3_RS26_DUR1 = 55;	//duration 1;
const double N3_RS26_REL0 = 0.9180034395582777;	//reliability 0;
const double N3_RS26_REL1 = 0.9349079147460015;	//reliability 1;

const int N3_RS27_ID = 27;
const int N3_RS27_COST = 21;	//cost
const bool N3_RS27_AVAIL = true;	//availability status
const int N3_RS27_DUR0 = 43;	//duration 0;
const int N3_RS27_DUR1 = 28;	//duration 1;
const double N3_RS27_REL0 = 0.9542012912314778;	//reliability 0;
const double N3_RS27_REL1 = 0.9921628366594871;	//reliability 1;

const int N3_RS28_ID = 28;
const int N3_RS28_COST = 44;	//cost
const bool N3_RS28_AVAIL = true;	//availability status
const int N3_RS28_DUR0 = 49;	//duration 0;
const int N3_RS28_DUR1 = 54;	//duration 1;
const double N3_RS28_REL0 = 0.9710089966567411;	//reliability 0;
const double N3_RS28_REL1 = 0.9029060064829496;	//reliability 1;

const int N3_RS29_ID = 29;
const int N3_RS29_COST = 23;	//cost
const bool N3_RS29_AVAIL = true;	//availability status
const int N3_RS29_DUR0 = 36;	//duration 0;
const int N3_RS29_DUR1 = 43;	//duration 1;
const double N3_RS29_REL0 = 0.9222524876220904;	//reliability 0;
const double N3_RS29_REL1 = 0.945715317574289;	//reliability 1;


//=========Global Parameters=======
const int TE=0;	//plater 2 state
const int TP=1;	//player 1 state
const int TS=2;	//coordinator state
const int NI=1;	//initial node
global t:[TE..TS] init TS;	//to control the turn
global end : bool init false;	//(absorbing state)
global n:[0..MXN] init NI;  //to control the sequence

//=========Module for Player 1=======
module planner
n0:[-1..N0_MAX_SV-1] init -1;
n1:[-1..N1_MAX_SV-1] init -1;
n2:[-1..N2_MAX_SV-1] init -1;
n3:[-1..N3_MAX_SV-1] init -1;
//P1's coordinator :
//for parallel pattern
[be] (t=TS) & (n < MXN) -> (t'=TP);
[be] (t=TS) & (n < MXN) -> (t'=TP);
[be] (t=TS) & (n < MXN) -> (t'=TP);
[be] (t=TS) & (n < MXN) -> (t'=TP);
[end] (t=TS) & (n >= MXN) & (end=false) -> (end'=true); //for ending the selection
[ter] (t=TS) & (n >= MXN) & (end=true) -> true;	//for absorbing state
//P1 moves :
[n0r0] (t=TP) & (n=0) & (a0_n0_rs0_sat_all=true) -> (n0'=0) & (t'=TE);
[n0r1] (t=TP) & (n=0) & (a0_n0_rs1_sat_all=true) -> (n0'=1) & (t'=TE);
[n0r2] (t=TP) & (n=0) & (a0_n0_rs2_sat_all=true) -> (n0'=2) & (t'=TE);
[n0r3] (t=TP) & (n=0) & (a0_n0_rs3_sat_all=true) -> (n0'=3) & (t'=TE);
[n0r4] (t=TP) & (n=0) & (a0_n0_rs4_sat_all=true) -> (n0'=4) & (t'=TE);
[n0r5] (t=TP) & (n=0) & (a0_n0_rs5_sat_all=true) -> (n0'=5) & (t'=TE);
[n0r6] (t=TP) & (n=0) & (a0_n0_rs6_sat_all=true) -> (n0'=6) & (t'=TE);
[n0r7] (t=TP) & (n=0) & (a0_n0_rs7_sat_all=true) -> (n0'=7) & (t'=TE);
[n0r8] (t=TP) & (n=0) & (a0_n0_rs8_sat_all=true) -> (n0'=8) & (t'=TE);
[n0r9] (t=TP) & (n=0) & (a0_n0_rs9_sat_all=true) -> (n0'=9) & (t'=TE);
[n0r10] (t=TP) & (n=0) & (a0_n0_rs10_sat_all=true) -> (n0'=10) & (t'=TE);
[n0r11] (t=TP) & (n=0) & (a0_n0_rs11_sat_all=true) -> (n0'=11) & (t'=TE);
[n0r12] (t=TP) & (n=0) & (a0_n0_rs12_sat_all=true) -> (n0'=12) & (t'=TE);
[n0r13] (t=TP) & (n=0) & (a0_n0_rs13_sat_all=true) -> (n0'=13) & (t'=TE);
[n0r14] (t=TP) & (n=0) & (a0_n0_rs14_sat_all=true) -> (n0'=14) & (t'=TE);
[n0r15] (t=TP) & (n=0) & (a0_n0_rs15_sat_all=true) -> (n0'=15) & (t'=TE);
[n0r16] (t=TP) & (n=0) & (a0_n0_rs16_sat_all=true) -> (n0'=16) & (t'=TE);
[n0r17] (t=TP) & (n=0) & (a0_n0_rs17_sat_all=true) -> (n0'=17) & (t'=TE);
[n0r18] (t=TP) & (n=0) & (a0_n0_rs18_sat_all=true) -> (n0'=18) & (t'=TE);
[n0r19] (t=TP) & (n=0) & (a0_n0_rs19_sat_all=true) -> (n0'=19) & (t'=TE);
[n0r20] (t=TP) & (n=0) & (a0_n0_rs20_sat_all=true) -> (n0'=20) & (t'=TE);
[n0r21] (t=TP) & (n=0) & (a0_n0_rs21_sat_all=true) -> (n0'=21) & (t'=TE);
[n0r22] (t=TP) & (n=0) & (a0_n0_rs22_sat_all=true) -> (n0'=22) & (t'=TE);
[n0r23] (t=TP) & (n=0) & (a0_n0_rs23_sat_all=true) -> (n0'=23) & (t'=TE);
[n0r24] (t=TP) & (n=0) & (a0_n0_rs24_sat_all=true) -> (n0'=24) & (t'=TE);
[n0r25] (t=TP) & (n=0) & (a0_n0_rs25_sat_all=true) -> (n0'=25) & (t'=TE);
[n0r26] (t=TP) & (n=0) & (a0_n0_rs26_sat_all=true) -> (n0'=26) & (t'=TE);
[n0r27] (t=TP) & (n=0) & (a0_n0_rs27_sat_all=true) -> (n0'=27) & (t'=TE);
[n0r28] (t=TP) & (n=0) & (a0_n0_rs28_sat_all=true) -> (n0'=28) & (t'=TE);
[n0r29] (t=TP) & (n=0) & (a0_n0_rs29_sat_all=true) -> (n0'=29) & (t'=TE);
[n1r0] (t=TP) & (n=1) & (a0_n1_rs0_sat_all=true) -> (n1'=0) & (t'=TE);
[n1r1] (t=TP) & (n=1) & (a0_n1_rs1_sat_all=true) -> (n1'=1) & (t'=TE);
[n1r2] (t=TP) & (n=1) & (a0_n1_rs2_sat_all=true) -> (n1'=2) & (t'=TE);
[n1r3] (t=TP) & (n=1) & (a0_n1_rs3_sat_all=true) -> (n1'=3) & (t'=TE);
[n1r4] (t=TP) & (n=1) & (a0_n1_rs4_sat_all=true) -> (n1'=4) & (t'=TE);
[n1r5] (t=TP) & (n=1) & (a0_n1_rs5_sat_all=true) -> (n1'=5) & (t'=TE);
[n1r6] (t=TP) & (n=1) & (a0_n1_rs6_sat_all=true) -> (n1'=6) & (t'=TE);
[n1r7] (t=TP) & (n=1) & (a0_n1_rs7_sat_all=true) -> (n1'=7) & (t'=TE);
[n1r8] (t=TP) & (n=1) & (a0_n1_rs8_sat_all=true) -> (n1'=8) & (t'=TE);
[n1r9] (t=TP) & (n=1) & (a0_n1_rs9_sat_all=true) -> (n1'=9) & (t'=TE);
[n1r10] (t=TP) & (n=1) & (a0_n1_rs10_sat_all=true) -> (n1'=10) & (t'=TE);
[n1r11] (t=TP) & (n=1) & (a0_n1_rs11_sat_all=true) -> (n1'=11) & (t'=TE);
[n1r12] (t=TP) & (n=1) & (a0_n1_rs12_sat_all=true) -> (n1'=12) & (t'=TE);
[n1r13] (t=TP) & (n=1) & (a0_n1_rs13_sat_all=true) -> (n1'=13) & (t'=TE);
[n1r14] (t=TP) & (n=1) & (a0_n1_rs14_sat_all=true) -> (n1'=14) & (t'=TE);
[n1r15] (t=TP) & (n=1) & (a0_n1_rs15_sat_all=true) -> (n1'=15) & (t'=TE);
[n1r16] (t=TP) & (n=1) & (a0_n1_rs16_sat_all=true) -> (n1'=16) & (t'=TE);
[n1r17] (t=TP) & (n=1) & (a0_n1_rs17_sat_all=true) -> (n1'=17) & (t'=TE);
[n1r18] (t=TP) & (n=1) & (a0_n1_rs18_sat_all=true) -> (n1'=18) & (t'=TE);
[n1r19] (t=TP) & (n=1) & (a0_n1_rs19_sat_all=true) -> (n1'=19) & (t'=TE);
[n1r20] (t=TP) & (n=1) & (a0_n1_rs20_sat_all=true) -> (n1'=20) & (t'=TE);
[n1r21] (t=TP) & (n=1) & (a0_n1_rs21_sat_all=true) -> (n1'=21) & (t'=TE);
[n1r22] (t=TP) & (n=1) & (a0_n1_rs22_sat_all=true) -> (n1'=22) & (t'=TE);
[n1r23] (t=TP) & (n=1) & (a0_n1_rs23_sat_all=true) -> (n1'=23) & (t'=TE);
[n1r24] (t=TP) & (n=1) & (a0_n1_rs24_sat_all=true) -> (n1'=24) & (t'=TE);
[n1r25] (t=TP) & (n=1) & (a0_n1_rs25_sat_all=true) -> (n1'=25) & (t'=TE);
[n1r26] (t=TP) & (n=1) & (a0_n1_rs26_sat_all=true) -> (n1'=26) & (t'=TE);
[n1r27] (t=TP) & (n=1) & (a0_n1_rs27_sat_all=true) -> (n1'=27) & (t'=TE);
[n1r28] (t=TP) & (n=1) & (a0_n1_rs28_sat_all=true) -> (n1'=28) & (t'=TE);
[n1r29] (t=TP) & (n=1) & (a0_n1_rs29_sat_all=true) -> (n1'=29) & (t'=TE);
[n2r0] (t=TP) & (n=2) & (a0_n2_rs0_sat_all=true) -> (n2'=0) & (t'=TE);
[n2r1] (t=TP) & (n=2) & (a0_n2_rs1_sat_all=true) -> (n2'=1) & (t'=TE);
[n2r2] (t=TP) & (n=2) & (a0_n2_rs2_sat_all=true) -> (n2'=2) & (t'=TE);
[n2r3] (t=TP) & (n=2) & (a0_n2_rs3_sat_all=true) -> (n2'=3) & (t'=TE);
[n2r4] (t=TP) & (n=2) & (a0_n2_rs4_sat_all=true) -> (n2'=4) & (t'=TE);
[n2r5] (t=TP) & (n=2) & (a0_n2_rs5_sat_all=true) -> (n2'=5) & (t'=TE);
[n2r6] (t=TP) & (n=2) & (a0_n2_rs6_sat_all=true) -> (n2'=6) & (t'=TE);
[n2r7] (t=TP) & (n=2) & (a0_n2_rs7_sat_all=true) -> (n2'=7) & (t'=TE);
[n2r8] (t=TP) & (n=2) & (a0_n2_rs8_sat_all=true) -> (n2'=8) & (t'=TE);
[n2r9] (t=TP) & (n=2) & (a0_n2_rs9_sat_all=true) -> (n2'=9) & (t'=TE);
[n2r10] (t=TP) & (n=2) & (a0_n2_rs10_sat_all=true) -> (n2'=10) & (t'=TE);
[n2r11] (t=TP) & (n=2) & (a0_n2_rs11_sat_all=true) -> (n2'=11) & (t'=TE);
[n2r12] (t=TP) & (n=2) & (a0_n2_rs12_sat_all=true) -> (n2'=12) & (t'=TE);
[n2r13] (t=TP) & (n=2) & (a0_n2_rs13_sat_all=true) -> (n2'=13) & (t'=TE);
[n2r14] (t=TP) & (n=2) & (a0_n2_rs14_sat_all=true) -> (n2'=14) & (t'=TE);
[n2r15] (t=TP) & (n=2) & (a0_n2_rs15_sat_all=true) -> (n2'=15) & (t'=TE);
[n2r16] (t=TP) & (n=2) & (a0_n2_rs16_sat_all=true) -> (n2'=16) & (t'=TE);
[n2r17] (t=TP) & (n=2) & (a0_n2_rs17_sat_all=true) -> (n2'=17) & (t'=TE);
[n2r18] (t=TP) & (n=2) & (a0_n2_rs18_sat_all=true) -> (n2'=18) & (t'=TE);
[n2r19] (t=TP) & (n=2) & (a0_n2_rs19_sat_all=true) -> (n2'=19) & (t'=TE);
[n2r20] (t=TP) & (n=2) & (a0_n2_rs20_sat_all=true) -> (n2'=20) & (t'=TE);
[n2r21] (t=TP) & (n=2) & (a0_n2_rs21_sat_all=true) -> (n2'=21) & (t'=TE);
[n2r22] (t=TP) & (n=2) & (a0_n2_rs22_sat_all=true) -> (n2'=22) & (t'=TE);
[n2r23] (t=TP) & (n=2) & (a0_n2_rs23_sat_all=true) -> (n2'=23) & (t'=TE);
[n2r24] (t=TP) & (n=2) & (a0_n2_rs24_sat_all=true) -> (n2'=24) & (t'=TE);
[n2r25] (t=TP) & (n=2) & (a0_n2_rs25_sat_all=true) -> (n2'=25) & (t'=TE);
[n2r26] (t=TP) & (n=2) & (a0_n2_rs26_sat_all=true) -> (n2'=26) & (t'=TE);
[n2r27] (t=TP) & (n=2) & (a0_n2_rs27_sat_all=true) -> (n2'=27) & (t'=TE);
[n2r28] (t=TP) & (n=2) & (a0_n2_rs28_sat_all=true) -> (n2'=28) & (t'=TE);
[n2r29] (t=TP) & (n=2) & (a0_n2_rs29_sat_all=true) -> (n2'=29) & (t'=TE);
[n3r0] (t=TP) & (n=3) & (a0_n3_rs0_sat_all=true) -> (n3'=0) & (t'=TE);
[n3r1] (t=TP) & (n=3) & (a0_n3_rs1_sat_all=true) -> (n3'=1) & (t'=TE);
[n3r2] (t=TP) & (n=3) & (a0_n3_rs2_sat_all=true) -> (n3'=2) & (t'=TE);
[n3r3] (t=TP) & (n=3) & (a0_n3_rs3_sat_all=true) -> (n3'=3) & (t'=TE);
[n3r4] (t=TP) & (n=3) & (a0_n3_rs4_sat_all=true) -> (n3'=4) & (t'=TE);
[n3r5] (t=TP) & (n=3) & (a0_n3_rs5_sat_all=true) -> (n3'=5) & (t'=TE);
[n3r6] (t=TP) & (n=3) & (a0_n3_rs6_sat_all=true) -> (n3'=6) & (t'=TE);
[n3r7] (t=TP) & (n=3) & (a0_n3_rs7_sat_all=true) -> (n3'=7) & (t'=TE);
[n3r8] (t=TP) & (n=3) & (a0_n3_rs8_sat_all=true) -> (n3'=8) & (t'=TE);
[n3r9] (t=TP) & (n=3) & (a0_n3_rs9_sat_all=true) -> (n3'=9) & (t'=TE);
[n3r10] (t=TP) & (n=3) & (a0_n3_rs10_sat_all=true) -> (n3'=10) & (t'=TE);
[n3r11] (t=TP) & (n=3) & (a0_n3_rs11_sat_all=true) -> (n3'=11) & (t'=TE);
[n3r12] (t=TP) & (n=3) & (a0_n3_rs12_sat_all=true) -> (n3'=12) & (t'=TE);
[n3r13] (t=TP) & (n=3) & (a0_n3_rs13_sat_all=true) -> (n3'=13) & (t'=TE);
[n3r14] (t=TP) & (n=3) & (a0_n3_rs14_sat_all=true) -> (n3'=14) & (t'=TE);
[n3r15] (t=TP) & (n=3) & (a0_n3_rs15_sat_all=true) -> (n3'=15) & (t'=TE);
[n3r16] (t=TP) & (n=3) & (a0_n3_rs16_sat_all=true) -> (n3'=16) & (t'=TE);
[n3r17] (t=TP) & (n=3) & (a0_n3_rs17_sat_all=true) -> (n3'=17) & (t'=TE);
[n3r18] (t=TP) & (n=3) & (a0_n3_rs18_sat_all=true) -> (n3'=18) & (t'=TE);
[n3r19] (t=TP) & (n=3) & (a0_n3_rs19_sat_all=true) -> (n3'=19) & (t'=TE);
[n3r20] (t=TP) & (n=3) & (a0_n3_rs20_sat_all=true) -> (n3'=20) & (t'=TE);
[n3r21] (t=TP) & (n=3) & (a0_n3_rs21_sat_all=true) -> (n3'=21) & (t'=TE);
[n3r22] (t=TP) & (n=3) & (a0_n3_rs22_sat_all=true) -> (n3'=22) & (t'=TE);
[n3r23] (t=TP) & (n=3) & (a0_n3_rs23_sat_all=true) -> (n3'=23) & (t'=TE);
[n3r24] (t=TP) & (n=3) & (a0_n3_rs24_sat_all=true) -> (n3'=24) & (t'=TE);
[n3r25] (t=TP) & (n=3) & (a0_n3_rs25_sat_all=true) -> (n3'=25) & (t'=TE);
[n3r26] (t=TP) & (n=3) & (a0_n3_rs26_sat_all=true) -> (n3'=26) & (t'=TE);
[n3r27] (t=TP) & (n=3) & (a0_n3_rs27_sat_all=true) -> (n3'=27) & (t'=TE);
[n3r28] (t=TP) & (n=3) & (a0_n3_rs28_sat_all=true) -> (n3'=28) & (t'=TE);
[n3r29] (t=TP) & (n=3) & (a0_n3_rs29_sat_all=true) -> (n3'=29) & (t'=TE);
endmodule

//=========Module for Player 2=======
module environment
n0ev:[-1..N0_MAX_EV] init -1;
n1ev:[-1..N1_MAX_EV] init -1;
n2ev:[-1..N2_MAX_EV] init -1;
n3ev:[-1..N3_MAX_EV] init -1;
//P2 moves for single/conditional/parallel pattern:
[n0e0] (t=TE) & (n=0) -> n0ev0_rel:(n0ev'=0) & (t'=TS) & (n'=MXN) + 1-n0ev0_rel:(n0ev'=-1) & (t'=TS) & (n'=MXN);
[n0e1] (t=TE) & (n=0) -> n0ev1_rel:(n0ev'=1) & (t'=TS) & (n'=MXN) + 1-n0ev1_rel:(n0ev'=-1) & (t'=TS) & (n'=MXN);
[n1e0] (t=TE) & (n=1) -> n1ev0_rel:(n1ev'=0) & (t'=TS) & (n'=MXN) + 1-n1ev0_rel:(n1ev'=-1) & (t'=TS) & (n'=MXN);
[n1e1] (t=TE) & (n=1) -> n1ev1_rel:(n1ev'=1) & (t'=TS) & (n'=MXN) + 1-n1ev1_rel:(n1ev'=-1) & (t'=TS) & (n'=MXN);
[n2e0] (t=TE) & (n=2) -> n2ev0_rel:(n2ev'=0) & (t'=TS) & (n'=MXN) + 1-n2ev0_rel:(n2ev'=-1) & (t'=TS) & (n'=MXN);
[n2e1] (t=TE) & (n=2) -> n2ev1_rel:(n2ev'=1) & (t'=TS) & (n'=MXN) + 1-n2ev1_rel:(n2ev'=-1) & (t'=TS) & (n'=MXN);
[n3e0] (t=TE) & (n=3) -> n3ev0_rel:(n3ev'=0) & (t'=TS) & (n'=MXN) + 1-n3ev0_rel:(n3ev'=-1) & (t'=TS) & (n'=MXN);
[n3e1] (t=TE) & (n=3) -> n3ev1_rel:(n3ev'=1) & (t'=TS) & (n'=MXN) + 1-n3ev1_rel:(n3ev'=-1) & (t'=TS) & (n'=MXN);
endmodule

//=========Assign reliability values=======
formula n0ev0_rel = ( n0 = 0 ? N0_RS0_REL0 : ( n0 = 1 ? N0_RS1_REL0 : ( n0 = 2 ? N0_RS2_REL0 : ( n0 = 3 ? N0_RS3_REL0 : ( n0 = 4 ? N0_RS4_REL0 : ( n0 = 5 ? N0_RS5_REL0 : ( n0 = 6 ? N0_RS6_REL0 : ( n0 = 7 ? N0_RS7_REL0 : ( n0 = 8 ? N0_RS8_REL0 : ( n0 = 9 ? N0_RS9_REL0 : ( n0 = 10 ? N0_RS10_REL0 : ( n0 = 11 ? N0_RS11_REL0 : ( n0 = 12 ? N0_RS12_REL0 : ( n0 = 13 ? N0_RS13_REL0 : ( n0 = 14 ? N0_RS14_REL0 : ( n0 = 15 ? N0_RS15_REL0 : ( n0 = 16 ? N0_RS16_REL0 : ( n0 = 17 ? N0_RS17_REL0 : ( n0 = 18 ? N0_RS18_REL0 : ( n0 = 19 ? N0_RS19_REL0 : ( n0 = 20 ? N0_RS20_REL0 : ( n0 = 21 ? N0_RS21_REL0 : ( n0 = 22 ? N0_RS22_REL0 : ( n0 = 23 ? N0_RS23_REL0 : ( n0 = 24 ? N0_RS24_REL0 : ( n0 = 25 ? N0_RS25_REL0 : ( n0 = 26 ? N0_RS26_REL0 : ( n0 = 27 ? N0_RS27_REL0 : ( n0 = 28 ? N0_RS28_REL0 : ( n0 = 29 ? N0_RS29_REL0 :0.0))))))))))))))))))))))))))))));
formula n0ev1_rel = ( n0 = 0 ? N0_RS0_REL1 : ( n0 = 1 ? N0_RS1_REL1 : ( n0 = 2 ? N0_RS2_REL1 : ( n0 = 3 ? N0_RS3_REL1 : ( n0 = 4 ? N0_RS4_REL1 : ( n0 = 5 ? N0_RS5_REL1 : ( n0 = 6 ? N0_RS6_REL1 : ( n0 = 7 ? N0_RS7_REL1 : ( n0 = 8 ? N0_RS8_REL1 : ( n0 = 9 ? N0_RS9_REL1 : ( n0 = 10 ? N0_RS10_REL1 : ( n0 = 11 ? N0_RS11_REL1 : ( n0 = 12 ? N0_RS12_REL1 : ( n0 = 13 ? N0_RS13_REL1 : ( n0 = 14 ? N0_RS14_REL1 : ( n0 = 15 ? N0_RS15_REL1 : ( n0 = 16 ? N0_RS16_REL1 : ( n0 = 17 ? N0_RS17_REL1 : ( n0 = 18 ? N0_RS18_REL1 : ( n0 = 19 ? N0_RS19_REL1 : ( n0 = 20 ? N0_RS20_REL1 : ( n0 = 21 ? N0_RS21_REL1 : ( n0 = 22 ? N0_RS22_REL1 : ( n0 = 23 ? N0_RS23_REL1 : ( n0 = 24 ? N0_RS24_REL1 : ( n0 = 25 ? N0_RS25_REL1 : ( n0 = 26 ? N0_RS26_REL1 : ( n0 = 27 ? N0_RS27_REL1 : ( n0 = 28 ? N0_RS28_REL1 : ( n0 = 29 ? N0_RS29_REL1 :0.0))))))))))))))))))))))))))))));

formula n1ev0_rel = ( n1 = 0 ? N1_RS0_REL0 : ( n1 = 1 ? N1_RS1_REL0 : ( n1 = 2 ? N1_RS2_REL0 : ( n1 = 3 ? N1_RS3_REL0 : ( n1 = 4 ? N1_RS4_REL0 : ( n1 = 5 ? N1_RS5_REL0 : ( n1 = 6 ? N1_RS6_REL0 : ( n1 = 7 ? N1_RS7_REL0 : ( n1 = 8 ? N1_RS8_REL0 : ( n1 = 9 ? N1_RS9_REL0 : ( n1 = 10 ? N1_RS10_REL0 : ( n1 = 11 ? N1_RS11_REL0 : ( n1 = 12 ? N1_RS12_REL0 : ( n1 = 13 ? N1_RS13_REL0 : ( n1 = 14 ? N1_RS14_REL0 : ( n1 = 15 ? N1_RS15_REL0 : ( n1 = 16 ? N1_RS16_REL0 : ( n1 = 17 ? N1_RS17_REL0 : ( n1 = 18 ? N1_RS18_REL0 : ( n1 = 19 ? N1_RS19_REL0 : ( n1 = 20 ? N1_RS20_REL0 : ( n1 = 21 ? N1_RS21_REL0 : ( n1 = 22 ? N1_RS22_REL0 : ( n1 = 23 ? N1_RS23_REL0 : ( n1 = 24 ? N1_RS24_REL0 : ( n1 = 25 ? N1_RS25_REL0 : ( n1 = 26 ? N1_RS26_REL0 : ( n1 = 27 ? N1_RS27_REL0 : ( n1 = 28 ? N1_RS28_REL0 : ( n1 = 29 ? N1_RS29_REL0 :0.0))))))))))))))))))))))))))))));
formula n1ev1_rel = ( n1 = 0 ? N1_RS0_REL1 : ( n1 = 1 ? N1_RS1_REL1 : ( n1 = 2 ? N1_RS2_REL1 : ( n1 = 3 ? N1_RS3_REL1 : ( n1 = 4 ? N1_RS4_REL1 : ( n1 = 5 ? N1_RS5_REL1 : ( n1 = 6 ? N1_RS6_REL1 : ( n1 = 7 ? N1_RS7_REL1 : ( n1 = 8 ? N1_RS8_REL1 : ( n1 = 9 ? N1_RS9_REL1 : ( n1 = 10 ? N1_RS10_REL1 : ( n1 = 11 ? N1_RS11_REL1 : ( n1 = 12 ? N1_RS12_REL1 : ( n1 = 13 ? N1_RS13_REL1 : ( n1 = 14 ? N1_RS14_REL1 : ( n1 = 15 ? N1_RS15_REL1 : ( n1 = 16 ? N1_RS16_REL1 : ( n1 = 17 ? N1_RS17_REL1 : ( n1 = 18 ? N1_RS18_REL1 : ( n1 = 19 ? N1_RS19_REL1 : ( n1 = 20 ? N1_RS20_REL1 : ( n1 = 21 ? N1_RS21_REL1 : ( n1 = 22 ? N1_RS22_REL1 : ( n1 = 23 ? N1_RS23_REL1 : ( n1 = 24 ? N1_RS24_REL1 : ( n1 = 25 ? N1_RS25_REL1 : ( n1 = 26 ? N1_RS26_REL1 : ( n1 = 27 ? N1_RS27_REL1 : ( n1 = 28 ? N1_RS28_REL1 : ( n1 = 29 ? N1_RS29_REL1 :0.0))))))))))))))))))))))))))))));

formula n2ev0_rel = ( n2 = 0 ? N2_RS0_REL0 : ( n2 = 1 ? N2_RS1_REL0 : ( n2 = 2 ? N2_RS2_REL0 : ( n2 = 3 ? N2_RS3_REL0 : ( n2 = 4 ? N2_RS4_REL0 : ( n2 = 5 ? N2_RS5_REL0 : ( n2 = 6 ? N2_RS6_REL0 : ( n2 = 7 ? N2_RS7_REL0 : ( n2 = 8 ? N2_RS8_REL0 : ( n2 = 9 ? N2_RS9_REL0 : ( n2 = 10 ? N2_RS10_REL0 : ( n2 = 11 ? N2_RS11_REL0 : ( n2 = 12 ? N2_RS12_REL0 : ( n2 = 13 ? N2_RS13_REL0 : ( n2 = 14 ? N2_RS14_REL0 : ( n2 = 15 ? N2_RS15_REL0 : ( n2 = 16 ? N2_RS16_REL0 : ( n2 = 17 ? N2_RS17_REL0 : ( n2 = 18 ? N2_RS18_REL0 : ( n2 = 19 ? N2_RS19_REL0 : ( n2 = 20 ? N2_RS20_REL0 : ( n2 = 21 ? N2_RS21_REL0 : ( n2 = 22 ? N2_RS22_REL0 : ( n2 = 23 ? N2_RS23_REL0 : ( n2 = 24 ? N2_RS24_REL0 : ( n2 = 25 ? N2_RS25_REL0 : ( n2 = 26 ? N2_RS26_REL0 : ( n2 = 27 ? N2_RS27_REL0 : ( n2 = 28 ? N2_RS28_REL0 : ( n2 = 29 ? N2_RS29_REL0 :0.0))))))))))))))))))))))))))))));
formula n2ev1_rel = ( n2 = 0 ? N2_RS0_REL1 : ( n2 = 1 ? N2_RS1_REL1 : ( n2 = 2 ? N2_RS2_REL1 : ( n2 = 3 ? N2_RS3_REL1 : ( n2 = 4 ? N2_RS4_REL1 : ( n2 = 5 ? N2_RS5_REL1 : ( n2 = 6 ? N2_RS6_REL1 : ( n2 = 7 ? N2_RS7_REL1 : ( n2 = 8 ? N2_RS8_REL1 : ( n2 = 9 ? N2_RS9_REL1 : ( n2 = 10 ? N2_RS10_REL1 : ( n2 = 11 ? N2_RS11_REL1 : ( n2 = 12 ? N2_RS12_REL1 : ( n2 = 13 ? N2_RS13_REL1 : ( n2 = 14 ? N2_RS14_REL1 : ( n2 = 15 ? N2_RS15_REL1 : ( n2 = 16 ? N2_RS16_REL1 : ( n2 = 17 ? N2_RS17_REL1 : ( n2 = 18 ? N2_RS18_REL1 : ( n2 = 19 ? N2_RS19_REL1 : ( n2 = 20 ? N2_RS20_REL1 : ( n2 = 21 ? N2_RS21_REL1 : ( n2 = 22 ? N2_RS22_REL1 : ( n2 = 23 ? N2_RS23_REL1 : ( n2 = 24 ? N2_RS24_REL1 : ( n2 = 25 ? N2_RS25_REL1 : ( n2 = 26 ? N2_RS26_REL1 : ( n2 = 27 ? N2_RS27_REL1 : ( n2 = 28 ? N2_RS28_REL1 : ( n2 = 29 ? N2_RS29_REL1 :0.0))))))))))))))))))))))))))))));

formula n3ev0_rel = ( n3 = 0 ? N3_RS0_REL0 : ( n3 = 1 ? N3_RS1_REL0 : ( n3 = 2 ? N3_RS2_REL0 : ( n3 = 3 ? N3_RS3_REL0 : ( n3 = 4 ? N3_RS4_REL0 : ( n3 = 5 ? N3_RS5_REL0 : ( n3 = 6 ? N3_RS6_REL0 : ( n3 = 7 ? N3_RS7_REL0 : ( n3 = 8 ? N3_RS8_REL0 : ( n3 = 9 ? N3_RS9_REL0 : ( n3 = 10 ? N3_RS10_REL0 : ( n3 = 11 ? N3_RS11_REL0 : ( n3 = 12 ? N3_RS12_REL0 : ( n3 = 13 ? N3_RS13_REL0 : ( n3 = 14 ? N3_RS14_REL0 : ( n3 = 15 ? N3_RS15_REL0 : ( n3 = 16 ? N3_RS16_REL0 : ( n3 = 17 ? N3_RS17_REL0 : ( n3 = 18 ? N3_RS18_REL0 : ( n3 = 19 ? N3_RS19_REL0 : ( n3 = 20 ? N3_RS20_REL0 : ( n3 = 21 ? N3_RS21_REL0 : ( n3 = 22 ? N3_RS22_REL0 : ( n3 = 23 ? N3_RS23_REL0 : ( n3 = 24 ? N3_RS24_REL0 : ( n3 = 25 ? N3_RS25_REL0 : ( n3 = 26 ? N3_RS26_REL0 : ( n3 = 27 ? N3_RS27_REL0 : ( n3 = 28 ? N3_RS28_REL0 : ( n3 = 29 ? N3_RS29_REL0 :0.0))))))))))))))))))))))))))))));
formula n3ev1_rel = ( n3 = 0 ? N3_RS0_REL1 : ( n3 = 1 ? N3_RS1_REL1 : ( n3 = 2 ? N3_RS2_REL1 : ( n3 = 3 ? N3_RS3_REL1 : ( n3 = 4 ? N3_RS4_REL1 : ( n3 = 5 ? N3_RS5_REL1 : ( n3 = 6 ? N3_RS6_REL1 : ( n3 = 7 ? N3_RS7_REL1 : ( n3 = 8 ? N3_RS8_REL1 : ( n3 = 9 ? N3_RS9_REL1 : ( n3 = 10 ? N3_RS10_REL1 : ( n3 = 11 ? N3_RS11_REL1 : ( n3 = 12 ? N3_RS12_REL1 : ( n3 = 13 ? N3_RS13_REL1 : ( n3 = 14 ? N3_RS14_REL1 : ( n3 = 15 ? N3_RS15_REL1 : ( n3 = 16 ? N3_RS16_REL1 : ( n3 = 17 ? N3_RS17_REL1 : ( n3 = 18 ? N3_RS18_REL1 : ( n3 = 19 ? N3_RS19_REL1 : ( n3 = 20 ? N3_RS20_REL1 : ( n3 = 21 ? N3_RS21_REL1 : ( n3 = 22 ? N3_RS22_REL1 : ( n3 = 23 ? N3_RS23_REL1 : ( n3 = 24 ? N3_RS24_REL1 : ( n3 = 25 ? N3_RS25_REL1 : ( n3 = 26 ? N3_RS26_REL1 : ( n3 = 27 ? N3_RS27_REL1 : ( n3 = 28 ? N3_RS28_REL1 : ( n3 = 29 ? N3_RS29_REL1 :0.0))))))))))))))))))))))))))))));


//=========QoS Constraints Checking=======
//=====Application 0, Node0 and RS0
formula a0_n0_rs0_sat_dur0 = ( (A0_DUR <= N0_RS0_DUR0) ? true:false);
formula a0_n0_rs0_sat_dur1 = ( (A0_DUR <= N0_RS0_DUR1) ? true:false);
formula a0_n0_rs0_sat_rel0 = ( (A0_DUR <= N0_RS0_REL0) ? true:false);
formula a0_n0_rs0_sat_rel1 = ( (A0_DUR <= N0_RS0_REL1) ? true:false);
formula a0_n0_rs0_sat_cost = ( (A0_COST <= N0_RS0_COST) ? true:false);
formula a0_n0_rs0_sat_avail = N0_RS0_AVAIL;
formula a0_n0_rs0_sat_all = a0_n0_rs0_sat_avail;

//=====Application 0, Node0 and RS1
formula a0_n0_rs1_sat_dur0 = ( (A0_DUR <= N0_RS1_DUR0) ? true:false);
formula a0_n0_rs1_sat_dur1 = ( (A0_DUR <= N0_RS1_DUR1) ? true:false);
formula a0_n0_rs1_sat_rel0 = ( (A0_DUR <= N0_RS1_REL0) ? true:false);
formula a0_n0_rs1_sat_rel1 = ( (A0_DUR <= N0_RS1_REL1) ? true:false);
formula a0_n0_rs1_sat_cost = ( (A0_COST <= N0_RS1_COST) ? true:false);
formula a0_n0_rs1_sat_avail = N0_RS1_AVAIL;
formula a0_n0_rs1_sat_all = a0_n0_rs1_sat_avail;

//=====Application 0, Node0 and RS2
formula a0_n0_rs2_sat_dur0 = ( (A0_DUR <= N0_RS2_DUR0) ? true:false);
formula a0_n0_rs2_sat_dur1 = ( (A0_DUR <= N0_RS2_DUR1) ? true:false);
formula a0_n0_rs2_sat_rel0 = ( (A0_DUR <= N0_RS2_REL0) ? true:false);
formula a0_n0_rs2_sat_rel1 = ( (A0_DUR <= N0_RS2_REL1) ? true:false);
formula a0_n0_rs2_sat_cost = ( (A0_COST <= N0_RS2_COST) ? true:false);
formula a0_n0_rs2_sat_avail = N0_RS2_AVAIL;
formula a0_n0_rs2_sat_all = a0_n0_rs2_sat_avail;

//=====Application 0, Node0 and RS3
formula a0_n0_rs3_sat_dur0 = ( (A0_DUR <= N0_RS3_DUR0) ? true:false);
formula a0_n0_rs3_sat_dur1 = ( (A0_DUR <= N0_RS3_DUR1) ? true:false);
formula a0_n0_rs3_sat_rel0 = ( (A0_DUR <= N0_RS3_REL0) ? true:false);
formula a0_n0_rs3_sat_rel1 = ( (A0_DUR <= N0_RS3_REL1) ? true:false);
formula a0_n0_rs3_sat_cost = ( (A0_COST <= N0_RS3_COST) ? true:false);
formula a0_n0_rs3_sat_avail = N0_RS3_AVAIL;
formula a0_n0_rs3_sat_all = a0_n0_rs3_sat_avail;

//=====Application 0, Node0 and RS4
formula a0_n0_rs4_sat_dur0 = ( (A0_DUR <= N0_RS4_DUR0) ? true:false);
formula a0_n0_rs4_sat_dur1 = ( (A0_DUR <= N0_RS4_DUR1) ? true:false);
formula a0_n0_rs4_sat_rel0 = ( (A0_DUR <= N0_RS4_REL0) ? true:false);
formula a0_n0_rs4_sat_rel1 = ( (A0_DUR <= N0_RS4_REL1) ? true:false);
formula a0_n0_rs4_sat_cost = ( (A0_COST <= N0_RS4_COST) ? true:false);
formula a0_n0_rs4_sat_avail = N0_RS4_AVAIL;
formula a0_n0_rs4_sat_all = a0_n0_rs4_sat_avail;

//=====Application 0, Node0 and RS5
formula a0_n0_rs5_sat_dur0 = ( (A0_DUR <= N0_RS5_DUR0) ? true:false);
formula a0_n0_rs5_sat_dur1 = ( (A0_DUR <= N0_RS5_DUR1) ? true:false);
formula a0_n0_rs5_sat_rel0 = ( (A0_DUR <= N0_RS5_REL0) ? true:false);
formula a0_n0_rs5_sat_rel1 = ( (A0_DUR <= N0_RS5_REL1) ? true:false);
formula a0_n0_rs5_sat_cost = ( (A0_COST <= N0_RS5_COST) ? true:false);
formula a0_n0_rs5_sat_avail = N0_RS5_AVAIL;
formula a0_n0_rs5_sat_all = a0_n0_rs5_sat_avail;

//=====Application 0, Node0 and RS6
formula a0_n0_rs6_sat_dur0 = ( (A0_DUR <= N0_RS6_DUR0) ? true:false);
formula a0_n0_rs6_sat_dur1 = ( (A0_DUR <= N0_RS6_DUR1) ? true:false);
formula a0_n0_rs6_sat_rel0 = ( (A0_DUR <= N0_RS6_REL0) ? true:false);
formula a0_n0_rs6_sat_rel1 = ( (A0_DUR <= N0_RS6_REL1) ? true:false);
formula a0_n0_rs6_sat_cost = ( (A0_COST <= N0_RS6_COST) ? true:false);
formula a0_n0_rs6_sat_avail = N0_RS6_AVAIL;
formula a0_n0_rs6_sat_all = a0_n0_rs6_sat_avail;

//=====Application 0, Node0 and RS7
formula a0_n0_rs7_sat_dur0 = ( (A0_DUR <= N0_RS7_DUR0) ? true:false);
formula a0_n0_rs7_sat_dur1 = ( (A0_DUR <= N0_RS7_DUR1) ? true:false);
formula a0_n0_rs7_sat_rel0 = ( (A0_DUR <= N0_RS7_REL0) ? true:false);
formula a0_n0_rs7_sat_rel1 = ( (A0_DUR <= N0_RS7_REL1) ? true:false);
formula a0_n0_rs7_sat_cost = ( (A0_COST <= N0_RS7_COST) ? true:false);
formula a0_n0_rs7_sat_avail = N0_RS7_AVAIL;
formula a0_n0_rs7_sat_all = a0_n0_rs7_sat_avail;

//=====Application 0, Node0 and RS8
formula a0_n0_rs8_sat_dur0 = ( (A0_DUR <= N0_RS8_DUR0) ? true:false);
formula a0_n0_rs8_sat_dur1 = ( (A0_DUR <= N0_RS8_DUR1) ? true:false);
formula a0_n0_rs8_sat_rel0 = ( (A0_DUR <= N0_RS8_REL0) ? true:false);
formula a0_n0_rs8_sat_rel1 = ( (A0_DUR <= N0_RS8_REL1) ? true:false);
formula a0_n0_rs8_sat_cost = ( (A0_COST <= N0_RS8_COST) ? true:false);
formula a0_n0_rs8_sat_avail = N0_RS8_AVAIL;
formula a0_n0_rs8_sat_all = a0_n0_rs8_sat_avail;

//=====Application 0, Node0 and RS9
formula a0_n0_rs9_sat_dur0 = ( (A0_DUR <= N0_RS9_DUR0) ? true:false);
formula a0_n0_rs9_sat_dur1 = ( (A0_DUR <= N0_RS9_DUR1) ? true:false);
formula a0_n0_rs9_sat_rel0 = ( (A0_DUR <= N0_RS9_REL0) ? true:false);
formula a0_n0_rs9_sat_rel1 = ( (A0_DUR <= N0_RS9_REL1) ? true:false);
formula a0_n0_rs9_sat_cost = ( (A0_COST <= N0_RS9_COST) ? true:false);
formula a0_n0_rs9_sat_avail = N0_RS9_AVAIL;
formula a0_n0_rs9_sat_all = a0_n0_rs9_sat_avail;

//=====Application 0, Node0 and RS10
formula a0_n0_rs10_sat_dur0 = ( (A0_DUR <= N0_RS10_DUR0) ? true:false);
formula a0_n0_rs10_sat_dur1 = ( (A0_DUR <= N0_RS10_DUR1) ? true:false);
formula a0_n0_rs10_sat_rel0 = ( (A0_DUR <= N0_RS10_REL0) ? true:false);
formula a0_n0_rs10_sat_rel1 = ( (A0_DUR <= N0_RS10_REL1) ? true:false);
formula a0_n0_rs10_sat_cost = ( (A0_COST <= N0_RS10_COST) ? true:false);
formula a0_n0_rs10_sat_avail = N0_RS10_AVAIL;
formula a0_n0_rs10_sat_all = a0_n0_rs10_sat_avail;

//=====Application 0, Node0 and RS11
formula a0_n0_rs11_sat_dur0 = ( (A0_DUR <= N0_RS11_DUR0) ? true:false);
formula a0_n0_rs11_sat_dur1 = ( (A0_DUR <= N0_RS11_DUR1) ? true:false);
formula a0_n0_rs11_sat_rel0 = ( (A0_DUR <= N0_RS11_REL0) ? true:false);
formula a0_n0_rs11_sat_rel1 = ( (A0_DUR <= N0_RS11_REL1) ? true:false);
formula a0_n0_rs11_sat_cost = ( (A0_COST <= N0_RS11_COST) ? true:false);
formula a0_n0_rs11_sat_avail = N0_RS11_AVAIL;
formula a0_n0_rs11_sat_all = a0_n0_rs11_sat_avail;

//=====Application 0, Node0 and RS12
formula a0_n0_rs12_sat_dur0 = ( (A0_DUR <= N0_RS12_DUR0) ? true:false);
formula a0_n0_rs12_sat_dur1 = ( (A0_DUR <= N0_RS12_DUR1) ? true:false);
formula a0_n0_rs12_sat_rel0 = ( (A0_DUR <= N0_RS12_REL0) ? true:false);
formula a0_n0_rs12_sat_rel1 = ( (A0_DUR <= N0_RS12_REL1) ? true:false);
formula a0_n0_rs12_sat_cost = ( (A0_COST <= N0_RS12_COST) ? true:false);
formula a0_n0_rs12_sat_avail = N0_RS12_AVAIL;
formula a0_n0_rs12_sat_all = a0_n0_rs12_sat_avail;

//=====Application 0, Node0 and RS13
formula a0_n0_rs13_sat_dur0 = ( (A0_DUR <= N0_RS13_DUR0) ? true:false);
formula a0_n0_rs13_sat_dur1 = ( (A0_DUR <= N0_RS13_DUR1) ? true:false);
formula a0_n0_rs13_sat_rel0 = ( (A0_DUR <= N0_RS13_REL0) ? true:false);
formula a0_n0_rs13_sat_rel1 = ( (A0_DUR <= N0_RS13_REL1) ? true:false);
formula a0_n0_rs13_sat_cost = ( (A0_COST <= N0_RS13_COST) ? true:false);
formula a0_n0_rs13_sat_avail = N0_RS13_AVAIL;
formula a0_n0_rs13_sat_all = a0_n0_rs13_sat_avail;

//=====Application 0, Node0 and RS14
formula a0_n0_rs14_sat_dur0 = ( (A0_DUR <= N0_RS14_DUR0) ? true:false);
formula a0_n0_rs14_sat_dur1 = ( (A0_DUR <= N0_RS14_DUR1) ? true:false);
formula a0_n0_rs14_sat_rel0 = ( (A0_DUR <= N0_RS14_REL0) ? true:false);
formula a0_n0_rs14_sat_rel1 = ( (A0_DUR <= N0_RS14_REL1) ? true:false);
formula a0_n0_rs14_sat_cost = ( (A0_COST <= N0_RS14_COST) ? true:false);
formula a0_n0_rs14_sat_avail = N0_RS14_AVAIL;
formula a0_n0_rs14_sat_all = a0_n0_rs14_sat_avail;

//=====Application 0, Node0 and RS15
formula a0_n0_rs15_sat_dur0 = ( (A0_DUR <= N0_RS15_DUR0) ? true:false);
formula a0_n0_rs15_sat_dur1 = ( (A0_DUR <= N0_RS15_DUR1) ? true:false);
formula a0_n0_rs15_sat_rel0 = ( (A0_DUR <= N0_RS15_REL0) ? true:false);
formula a0_n0_rs15_sat_rel1 = ( (A0_DUR <= N0_RS15_REL1) ? true:false);
formula a0_n0_rs15_sat_cost = ( (A0_COST <= N0_RS15_COST) ? true:false);
formula a0_n0_rs15_sat_avail = N0_RS15_AVAIL;
formula a0_n0_rs15_sat_all = a0_n0_rs15_sat_avail;

//=====Application 0, Node0 and RS16
formula a0_n0_rs16_sat_dur0 = ( (A0_DUR <= N0_RS16_DUR0) ? true:false);
formula a0_n0_rs16_sat_dur1 = ( (A0_DUR <= N0_RS16_DUR1) ? true:false);
formula a0_n0_rs16_sat_rel0 = ( (A0_DUR <= N0_RS16_REL0) ? true:false);
formula a0_n0_rs16_sat_rel1 = ( (A0_DUR <= N0_RS16_REL1) ? true:false);
formula a0_n0_rs16_sat_cost = ( (A0_COST <= N0_RS16_COST) ? true:false);
formula a0_n0_rs16_sat_avail = N0_RS16_AVAIL;
formula a0_n0_rs16_sat_all = a0_n0_rs16_sat_avail;

//=====Application 0, Node0 and RS17
formula a0_n0_rs17_sat_dur0 = ( (A0_DUR <= N0_RS17_DUR0) ? true:false);
formula a0_n0_rs17_sat_dur1 = ( (A0_DUR <= N0_RS17_DUR1) ? true:false);
formula a0_n0_rs17_sat_rel0 = ( (A0_DUR <= N0_RS17_REL0) ? true:false);
formula a0_n0_rs17_sat_rel1 = ( (A0_DUR <= N0_RS17_REL1) ? true:false);
formula a0_n0_rs17_sat_cost = ( (A0_COST <= N0_RS17_COST) ? true:false);
formula a0_n0_rs17_sat_avail = N0_RS17_AVAIL;
formula a0_n0_rs17_sat_all = a0_n0_rs17_sat_avail;

//=====Application 0, Node0 and RS18
formula a0_n0_rs18_sat_dur0 = ( (A0_DUR <= N0_RS18_DUR0) ? true:false);
formula a0_n0_rs18_sat_dur1 = ( (A0_DUR <= N0_RS18_DUR1) ? true:false);
formula a0_n0_rs18_sat_rel0 = ( (A0_DUR <= N0_RS18_REL0) ? true:false);
formula a0_n0_rs18_sat_rel1 = ( (A0_DUR <= N0_RS18_REL1) ? true:false);
formula a0_n0_rs18_sat_cost = ( (A0_COST <= N0_RS18_COST) ? true:false);
formula a0_n0_rs18_sat_avail = N0_RS18_AVAIL;
formula a0_n0_rs18_sat_all = a0_n0_rs18_sat_avail;

//=====Application 0, Node0 and RS19
formula a0_n0_rs19_sat_dur0 = ( (A0_DUR <= N0_RS19_DUR0) ? true:false);
formula a0_n0_rs19_sat_dur1 = ( (A0_DUR <= N0_RS19_DUR1) ? true:false);
formula a0_n0_rs19_sat_rel0 = ( (A0_DUR <= N0_RS19_REL0) ? true:false);
formula a0_n0_rs19_sat_rel1 = ( (A0_DUR <= N0_RS19_REL1) ? true:false);
formula a0_n0_rs19_sat_cost = ( (A0_COST <= N0_RS19_COST) ? true:false);
formula a0_n0_rs19_sat_avail = N0_RS19_AVAIL;
formula a0_n0_rs19_sat_all = a0_n0_rs19_sat_avail;

//=====Application 0, Node0 and RS20
formula a0_n0_rs20_sat_dur0 = ( (A0_DUR <= N0_RS20_DUR0) ? true:false);
formula a0_n0_rs20_sat_dur1 = ( (A0_DUR <= N0_RS20_DUR1) ? true:false);
formula a0_n0_rs20_sat_rel0 = ( (A0_DUR <= N0_RS20_REL0) ? true:false);
formula a0_n0_rs20_sat_rel1 = ( (A0_DUR <= N0_RS20_REL1) ? true:false);
formula a0_n0_rs20_sat_cost = ( (A0_COST <= N0_RS20_COST) ? true:false);
formula a0_n0_rs20_sat_avail = N0_RS20_AVAIL;
formula a0_n0_rs20_sat_all = a0_n0_rs20_sat_avail;

//=====Application 0, Node0 and RS21
formula a0_n0_rs21_sat_dur0 = ( (A0_DUR <= N0_RS21_DUR0) ? true:false);
formula a0_n0_rs21_sat_dur1 = ( (A0_DUR <= N0_RS21_DUR1) ? true:false);
formula a0_n0_rs21_sat_rel0 = ( (A0_DUR <= N0_RS21_REL0) ? true:false);
formula a0_n0_rs21_sat_rel1 = ( (A0_DUR <= N0_RS21_REL1) ? true:false);
formula a0_n0_rs21_sat_cost = ( (A0_COST <= N0_RS21_COST) ? true:false);
formula a0_n0_rs21_sat_avail = N0_RS21_AVAIL;
formula a0_n0_rs21_sat_all = a0_n0_rs21_sat_avail;

//=====Application 0, Node0 and RS22
formula a0_n0_rs22_sat_dur0 = ( (A0_DUR <= N0_RS22_DUR0) ? true:false);
formula a0_n0_rs22_sat_dur1 = ( (A0_DUR <= N0_RS22_DUR1) ? true:false);
formula a0_n0_rs22_sat_rel0 = ( (A0_DUR <= N0_RS22_REL0) ? true:false);
formula a0_n0_rs22_sat_rel1 = ( (A0_DUR <= N0_RS22_REL1) ? true:false);
formula a0_n0_rs22_sat_cost = ( (A0_COST <= N0_RS22_COST) ? true:false);
formula a0_n0_rs22_sat_avail = N0_RS22_AVAIL;
formula a0_n0_rs22_sat_all = a0_n0_rs22_sat_avail;

//=====Application 0, Node0 and RS23
formula a0_n0_rs23_sat_dur0 = ( (A0_DUR <= N0_RS23_DUR0) ? true:false);
formula a0_n0_rs23_sat_dur1 = ( (A0_DUR <= N0_RS23_DUR1) ? true:false);
formula a0_n0_rs23_sat_rel0 = ( (A0_DUR <= N0_RS23_REL0) ? true:false);
formula a0_n0_rs23_sat_rel1 = ( (A0_DUR <= N0_RS23_REL1) ? true:false);
formula a0_n0_rs23_sat_cost = ( (A0_COST <= N0_RS23_COST) ? true:false);
formula a0_n0_rs23_sat_avail = N0_RS23_AVAIL;
formula a0_n0_rs23_sat_all = a0_n0_rs23_sat_avail;

//=====Application 0, Node0 and RS24
formula a0_n0_rs24_sat_dur0 = ( (A0_DUR <= N0_RS24_DUR0) ? true:false);
formula a0_n0_rs24_sat_dur1 = ( (A0_DUR <= N0_RS24_DUR1) ? true:false);
formula a0_n0_rs24_sat_rel0 = ( (A0_DUR <= N0_RS24_REL0) ? true:false);
formula a0_n0_rs24_sat_rel1 = ( (A0_DUR <= N0_RS24_REL1) ? true:false);
formula a0_n0_rs24_sat_cost = ( (A0_COST <= N0_RS24_COST) ? true:false);
formula a0_n0_rs24_sat_avail = N0_RS24_AVAIL;
formula a0_n0_rs24_sat_all = a0_n0_rs24_sat_avail;

//=====Application 0, Node0 and RS25
formula a0_n0_rs25_sat_dur0 = ( (A0_DUR <= N0_RS25_DUR0) ? true:false);
formula a0_n0_rs25_sat_dur1 = ( (A0_DUR <= N0_RS25_DUR1) ? true:false);
formula a0_n0_rs25_sat_rel0 = ( (A0_DUR <= N0_RS25_REL0) ? true:false);
formula a0_n0_rs25_sat_rel1 = ( (A0_DUR <= N0_RS25_REL1) ? true:false);
formula a0_n0_rs25_sat_cost = ( (A0_COST <= N0_RS25_COST) ? true:false);
formula a0_n0_rs25_sat_avail = N0_RS25_AVAIL;
formula a0_n0_rs25_sat_all = a0_n0_rs25_sat_avail;

//=====Application 0, Node0 and RS26
formula a0_n0_rs26_sat_dur0 = ( (A0_DUR <= N0_RS26_DUR0) ? true:false);
formula a0_n0_rs26_sat_dur1 = ( (A0_DUR <= N0_RS26_DUR1) ? true:false);
formula a0_n0_rs26_sat_rel0 = ( (A0_DUR <= N0_RS26_REL0) ? true:false);
formula a0_n0_rs26_sat_rel1 = ( (A0_DUR <= N0_RS26_REL1) ? true:false);
formula a0_n0_rs26_sat_cost = ( (A0_COST <= N0_RS26_COST) ? true:false);
formula a0_n0_rs26_sat_avail = N0_RS26_AVAIL;
formula a0_n0_rs26_sat_all = a0_n0_rs26_sat_avail;

//=====Application 0, Node0 and RS27
formula a0_n0_rs27_sat_dur0 = ( (A0_DUR <= N0_RS27_DUR0) ? true:false);
formula a0_n0_rs27_sat_dur1 = ( (A0_DUR <= N0_RS27_DUR1) ? true:false);
formula a0_n0_rs27_sat_rel0 = ( (A0_DUR <= N0_RS27_REL0) ? true:false);
formula a0_n0_rs27_sat_rel1 = ( (A0_DUR <= N0_RS27_REL1) ? true:false);
formula a0_n0_rs27_sat_cost = ( (A0_COST <= N0_RS27_COST) ? true:false);
formula a0_n0_rs27_sat_avail = N0_RS27_AVAIL;
formula a0_n0_rs27_sat_all = a0_n0_rs27_sat_avail;

//=====Application 0, Node0 and RS28
formula a0_n0_rs28_sat_dur0 = ( (A0_DUR <= N0_RS28_DUR0) ? true:false);
formula a0_n0_rs28_sat_dur1 = ( (A0_DUR <= N0_RS28_DUR1) ? true:false);
formula a0_n0_rs28_sat_rel0 = ( (A0_DUR <= N0_RS28_REL0) ? true:false);
formula a0_n0_rs28_sat_rel1 = ( (A0_DUR <= N0_RS28_REL1) ? true:false);
formula a0_n0_rs28_sat_cost = ( (A0_COST <= N0_RS28_COST) ? true:false);
formula a0_n0_rs28_sat_avail = N0_RS28_AVAIL;
formula a0_n0_rs28_sat_all = a0_n0_rs28_sat_avail;

//=====Application 0, Node0 and RS29
formula a0_n0_rs29_sat_dur0 = ( (A0_DUR <= N0_RS29_DUR0) ? true:false);
formula a0_n0_rs29_sat_dur1 = ( (A0_DUR <= N0_RS29_DUR1) ? true:false);
formula a0_n0_rs29_sat_rel0 = ( (A0_DUR <= N0_RS29_REL0) ? true:false);
formula a0_n0_rs29_sat_rel1 = ( (A0_DUR <= N0_RS29_REL1) ? true:false);
formula a0_n0_rs29_sat_cost = ( (A0_COST <= N0_RS29_COST) ? true:false);
formula a0_n0_rs29_sat_avail = N0_RS29_AVAIL;
formula a0_n0_rs29_sat_all = a0_n0_rs29_sat_avail;

//=====Application 0, Node1 and RS0
formula a0_n1_rs0_sat_dur0 = ( (A0_DUR <= N1_RS0_DUR0) ? true:false);
formula a0_n1_rs0_sat_dur1 = ( (A0_DUR <= N1_RS0_DUR1) ? true:false);
formula a0_n1_rs0_sat_rel0 = ( (A0_DUR <= N1_RS0_REL0) ? true:false);
formula a0_n1_rs0_sat_rel1 = ( (A0_DUR <= N1_RS0_REL1) ? true:false);
formula a0_n1_rs0_sat_cost = ( (A0_COST <= N1_RS0_COST) ? true:false);
formula a0_n1_rs0_sat_avail = N1_RS0_AVAIL;
formula a0_n1_rs0_sat_all = a0_n1_rs0_sat_avail;

//=====Application 0, Node1 and RS1
formula a0_n1_rs1_sat_dur0 = ( (A0_DUR <= N1_RS1_DUR0) ? true:false);
formula a0_n1_rs1_sat_dur1 = ( (A0_DUR <= N1_RS1_DUR1) ? true:false);
formula a0_n1_rs1_sat_rel0 = ( (A0_DUR <= N1_RS1_REL0) ? true:false);
formula a0_n1_rs1_sat_rel1 = ( (A0_DUR <= N1_RS1_REL1) ? true:false);
formula a0_n1_rs1_sat_cost = ( (A0_COST <= N1_RS1_COST) ? true:false);
formula a0_n1_rs1_sat_avail = N1_RS1_AVAIL;
formula a0_n1_rs1_sat_all = a0_n1_rs1_sat_avail;

//=====Application 0, Node1 and RS2
formula a0_n1_rs2_sat_dur0 = ( (A0_DUR <= N1_RS2_DUR0) ? true:false);
formula a0_n1_rs2_sat_dur1 = ( (A0_DUR <= N1_RS2_DUR1) ? true:false);
formula a0_n1_rs2_sat_rel0 = ( (A0_DUR <= N1_RS2_REL0) ? true:false);
formula a0_n1_rs2_sat_rel1 = ( (A0_DUR <= N1_RS2_REL1) ? true:false);
formula a0_n1_rs2_sat_cost = ( (A0_COST <= N1_RS2_COST) ? true:false);
formula a0_n1_rs2_sat_avail = N1_RS2_AVAIL;
formula a0_n1_rs2_sat_all = a0_n1_rs2_sat_avail;

//=====Application 0, Node1 and RS3
formula a0_n1_rs3_sat_dur0 = ( (A0_DUR <= N1_RS3_DUR0) ? true:false);
formula a0_n1_rs3_sat_dur1 = ( (A0_DUR <= N1_RS3_DUR1) ? true:false);
formula a0_n1_rs3_sat_rel0 = ( (A0_DUR <= N1_RS3_REL0) ? true:false);
formula a0_n1_rs3_sat_rel1 = ( (A0_DUR <= N1_RS3_REL1) ? true:false);
formula a0_n1_rs3_sat_cost = ( (A0_COST <= N1_RS3_COST) ? true:false);
formula a0_n1_rs3_sat_avail = N1_RS3_AVAIL;
formula a0_n1_rs3_sat_all = a0_n1_rs3_sat_avail;

//=====Application 0, Node1 and RS4
formula a0_n1_rs4_sat_dur0 = ( (A0_DUR <= N1_RS4_DUR0) ? true:false);
formula a0_n1_rs4_sat_dur1 = ( (A0_DUR <= N1_RS4_DUR1) ? true:false);
formula a0_n1_rs4_sat_rel0 = ( (A0_DUR <= N1_RS4_REL0) ? true:false);
formula a0_n1_rs4_sat_rel1 = ( (A0_DUR <= N1_RS4_REL1) ? true:false);
formula a0_n1_rs4_sat_cost = ( (A0_COST <= N1_RS4_COST) ? true:false);
formula a0_n1_rs4_sat_avail = N1_RS4_AVAIL;
formula a0_n1_rs4_sat_all = a0_n1_rs4_sat_avail;

//=====Application 0, Node1 and RS5
formula a0_n1_rs5_sat_dur0 = ( (A0_DUR <= N1_RS5_DUR0) ? true:false);
formula a0_n1_rs5_sat_dur1 = ( (A0_DUR <= N1_RS5_DUR1) ? true:false);
formula a0_n1_rs5_sat_rel0 = ( (A0_DUR <= N1_RS5_REL0) ? true:false);
formula a0_n1_rs5_sat_rel1 = ( (A0_DUR <= N1_RS5_REL1) ? true:false);
formula a0_n1_rs5_sat_cost = ( (A0_COST <= N1_RS5_COST) ? true:false);
formula a0_n1_rs5_sat_avail = N1_RS5_AVAIL;
formula a0_n1_rs5_sat_all = a0_n1_rs5_sat_avail;

//=====Application 0, Node1 and RS6
formula a0_n1_rs6_sat_dur0 = ( (A0_DUR <= N1_RS6_DUR0) ? true:false);
formula a0_n1_rs6_sat_dur1 = ( (A0_DUR <= N1_RS6_DUR1) ? true:false);
formula a0_n1_rs6_sat_rel0 = ( (A0_DUR <= N1_RS6_REL0) ? true:false);
formula a0_n1_rs6_sat_rel1 = ( (A0_DUR <= N1_RS6_REL1) ? true:false);
formula a0_n1_rs6_sat_cost = ( (A0_COST <= N1_RS6_COST) ? true:false);
formula a0_n1_rs6_sat_avail = N1_RS6_AVAIL;
formula a0_n1_rs6_sat_all = a0_n1_rs6_sat_avail;

//=====Application 0, Node1 and RS7
formula a0_n1_rs7_sat_dur0 = ( (A0_DUR <= N1_RS7_DUR0) ? true:false);
formula a0_n1_rs7_sat_dur1 = ( (A0_DUR <= N1_RS7_DUR1) ? true:false);
formula a0_n1_rs7_sat_rel0 = ( (A0_DUR <= N1_RS7_REL0) ? true:false);
formula a0_n1_rs7_sat_rel1 = ( (A0_DUR <= N1_RS7_REL1) ? true:false);
formula a0_n1_rs7_sat_cost = ( (A0_COST <= N1_RS7_COST) ? true:false);
formula a0_n1_rs7_sat_avail = N1_RS7_AVAIL;
formula a0_n1_rs7_sat_all = a0_n1_rs7_sat_avail;

//=====Application 0, Node1 and RS8
formula a0_n1_rs8_sat_dur0 = ( (A0_DUR <= N1_RS8_DUR0) ? true:false);
formula a0_n1_rs8_sat_dur1 = ( (A0_DUR <= N1_RS8_DUR1) ? true:false);
formula a0_n1_rs8_sat_rel0 = ( (A0_DUR <= N1_RS8_REL0) ? true:false);
formula a0_n1_rs8_sat_rel1 = ( (A0_DUR <= N1_RS8_REL1) ? true:false);
formula a0_n1_rs8_sat_cost = ( (A0_COST <= N1_RS8_COST) ? true:false);
formula a0_n1_rs8_sat_avail = N1_RS8_AVAIL;
formula a0_n1_rs8_sat_all = a0_n1_rs8_sat_avail;

//=====Application 0, Node1 and RS9
formula a0_n1_rs9_sat_dur0 = ( (A0_DUR <= N1_RS9_DUR0) ? true:false);
formula a0_n1_rs9_sat_dur1 = ( (A0_DUR <= N1_RS9_DUR1) ? true:false);
formula a0_n1_rs9_sat_rel0 = ( (A0_DUR <= N1_RS9_REL0) ? true:false);
formula a0_n1_rs9_sat_rel1 = ( (A0_DUR <= N1_RS9_REL1) ? true:false);
formula a0_n1_rs9_sat_cost = ( (A0_COST <= N1_RS9_COST) ? true:false);
formula a0_n1_rs9_sat_avail = N1_RS9_AVAIL;
formula a0_n1_rs9_sat_all = a0_n1_rs9_sat_avail;

//=====Application 0, Node1 and RS10
formula a0_n1_rs10_sat_dur0 = ( (A0_DUR <= N1_RS10_DUR0) ? true:false);
formula a0_n1_rs10_sat_dur1 = ( (A0_DUR <= N1_RS10_DUR1) ? true:false);
formula a0_n1_rs10_sat_rel0 = ( (A0_DUR <= N1_RS10_REL0) ? true:false);
formula a0_n1_rs10_sat_rel1 = ( (A0_DUR <= N1_RS10_REL1) ? true:false);
formula a0_n1_rs10_sat_cost = ( (A0_COST <= N1_RS10_COST) ? true:false);
formula a0_n1_rs10_sat_avail = N1_RS10_AVAIL;
formula a0_n1_rs10_sat_all = a0_n1_rs10_sat_avail;

//=====Application 0, Node1 and RS11
formula a0_n1_rs11_sat_dur0 = ( (A0_DUR <= N1_RS11_DUR0) ? true:false);
formula a0_n1_rs11_sat_dur1 = ( (A0_DUR <= N1_RS11_DUR1) ? true:false);
formula a0_n1_rs11_sat_rel0 = ( (A0_DUR <= N1_RS11_REL0) ? true:false);
formula a0_n1_rs11_sat_rel1 = ( (A0_DUR <= N1_RS11_REL1) ? true:false);
formula a0_n1_rs11_sat_cost = ( (A0_COST <= N1_RS11_COST) ? true:false);
formula a0_n1_rs11_sat_avail = N1_RS11_AVAIL;
formula a0_n1_rs11_sat_all = a0_n1_rs11_sat_avail;

//=====Application 0, Node1 and RS12
formula a0_n1_rs12_sat_dur0 = ( (A0_DUR <= N1_RS12_DUR0) ? true:false);
formula a0_n1_rs12_sat_dur1 = ( (A0_DUR <= N1_RS12_DUR1) ? true:false);
formula a0_n1_rs12_sat_rel0 = ( (A0_DUR <= N1_RS12_REL0) ? true:false);
formula a0_n1_rs12_sat_rel1 = ( (A0_DUR <= N1_RS12_REL1) ? true:false);
formula a0_n1_rs12_sat_cost = ( (A0_COST <= N1_RS12_COST) ? true:false);
formula a0_n1_rs12_sat_avail = N1_RS12_AVAIL;
formula a0_n1_rs12_sat_all = a0_n1_rs12_sat_avail;

//=====Application 0, Node1 and RS13
formula a0_n1_rs13_sat_dur0 = ( (A0_DUR <= N1_RS13_DUR0) ? true:false);
formula a0_n1_rs13_sat_dur1 = ( (A0_DUR <= N1_RS13_DUR1) ? true:false);
formula a0_n1_rs13_sat_rel0 = ( (A0_DUR <= N1_RS13_REL0) ? true:false);
formula a0_n1_rs13_sat_rel1 = ( (A0_DUR <= N1_RS13_REL1) ? true:false);
formula a0_n1_rs13_sat_cost = ( (A0_COST <= N1_RS13_COST) ? true:false);
formula a0_n1_rs13_sat_avail = N1_RS13_AVAIL;
formula a0_n1_rs13_sat_all = a0_n1_rs13_sat_avail;

//=====Application 0, Node1 and RS14
formula a0_n1_rs14_sat_dur0 = ( (A0_DUR <= N1_RS14_DUR0) ? true:false);
formula a0_n1_rs14_sat_dur1 = ( (A0_DUR <= N1_RS14_DUR1) ? true:false);
formula a0_n1_rs14_sat_rel0 = ( (A0_DUR <= N1_RS14_REL0) ? true:false);
formula a0_n1_rs14_sat_rel1 = ( (A0_DUR <= N1_RS14_REL1) ? true:false);
formula a0_n1_rs14_sat_cost = ( (A0_COST <= N1_RS14_COST) ? true:false);
formula a0_n1_rs14_sat_avail = N1_RS14_AVAIL;
formula a0_n1_rs14_sat_all = a0_n1_rs14_sat_avail;

//=====Application 0, Node1 and RS15
formula a0_n1_rs15_sat_dur0 = ( (A0_DUR <= N1_RS15_DUR0) ? true:false);
formula a0_n1_rs15_sat_dur1 = ( (A0_DUR <= N1_RS15_DUR1) ? true:false);
formula a0_n1_rs15_sat_rel0 = ( (A0_DUR <= N1_RS15_REL0) ? true:false);
formula a0_n1_rs15_sat_rel1 = ( (A0_DUR <= N1_RS15_REL1) ? true:false);
formula a0_n1_rs15_sat_cost = ( (A0_COST <= N1_RS15_COST) ? true:false);
formula a0_n1_rs15_sat_avail = N1_RS15_AVAIL;
formula a0_n1_rs15_sat_all = a0_n1_rs15_sat_avail;

//=====Application 0, Node1 and RS16
formula a0_n1_rs16_sat_dur0 = ( (A0_DUR <= N1_RS16_DUR0) ? true:false);
formula a0_n1_rs16_sat_dur1 = ( (A0_DUR <= N1_RS16_DUR1) ? true:false);
formula a0_n1_rs16_sat_rel0 = ( (A0_DUR <= N1_RS16_REL0) ? true:false);
formula a0_n1_rs16_sat_rel1 = ( (A0_DUR <= N1_RS16_REL1) ? true:false);
formula a0_n1_rs16_sat_cost = ( (A0_COST <= N1_RS16_COST) ? true:false);
formula a0_n1_rs16_sat_avail = N1_RS16_AVAIL;
formula a0_n1_rs16_sat_all = a0_n1_rs16_sat_avail;

//=====Application 0, Node1 and RS17
formula a0_n1_rs17_sat_dur0 = ( (A0_DUR <= N1_RS17_DUR0) ? true:false);
formula a0_n1_rs17_sat_dur1 = ( (A0_DUR <= N1_RS17_DUR1) ? true:false);
formula a0_n1_rs17_sat_rel0 = ( (A0_DUR <= N1_RS17_REL0) ? true:false);
formula a0_n1_rs17_sat_rel1 = ( (A0_DUR <= N1_RS17_REL1) ? true:false);
formula a0_n1_rs17_sat_cost = ( (A0_COST <= N1_RS17_COST) ? true:false);
formula a0_n1_rs17_sat_avail = N1_RS17_AVAIL;
formula a0_n1_rs17_sat_all = a0_n1_rs17_sat_avail;

//=====Application 0, Node1 and RS18
formula a0_n1_rs18_sat_dur0 = ( (A0_DUR <= N1_RS18_DUR0) ? true:false);
formula a0_n1_rs18_sat_dur1 = ( (A0_DUR <= N1_RS18_DUR1) ? true:false);
formula a0_n1_rs18_sat_rel0 = ( (A0_DUR <= N1_RS18_REL0) ? true:false);
formula a0_n1_rs18_sat_rel1 = ( (A0_DUR <= N1_RS18_REL1) ? true:false);
formula a0_n1_rs18_sat_cost = ( (A0_COST <= N1_RS18_COST) ? true:false);
formula a0_n1_rs18_sat_avail = N1_RS18_AVAIL;
formula a0_n1_rs18_sat_all = a0_n1_rs18_sat_avail;

//=====Application 0, Node1 and RS19
formula a0_n1_rs19_sat_dur0 = ( (A0_DUR <= N1_RS19_DUR0) ? true:false);
formula a0_n1_rs19_sat_dur1 = ( (A0_DUR <= N1_RS19_DUR1) ? true:false);
formula a0_n1_rs19_sat_rel0 = ( (A0_DUR <= N1_RS19_REL0) ? true:false);
formula a0_n1_rs19_sat_rel1 = ( (A0_DUR <= N1_RS19_REL1) ? true:false);
formula a0_n1_rs19_sat_cost = ( (A0_COST <= N1_RS19_COST) ? true:false);
formula a0_n1_rs19_sat_avail = N1_RS19_AVAIL;
formula a0_n1_rs19_sat_all = a0_n1_rs19_sat_avail;

//=====Application 0, Node1 and RS20
formula a0_n1_rs20_sat_dur0 = ( (A0_DUR <= N1_RS20_DUR0) ? true:false);
formula a0_n1_rs20_sat_dur1 = ( (A0_DUR <= N1_RS20_DUR1) ? true:false);
formula a0_n1_rs20_sat_rel0 = ( (A0_DUR <= N1_RS20_REL0) ? true:false);
formula a0_n1_rs20_sat_rel1 = ( (A0_DUR <= N1_RS20_REL1) ? true:false);
formula a0_n1_rs20_sat_cost = ( (A0_COST <= N1_RS20_COST) ? true:false);
formula a0_n1_rs20_sat_avail = N1_RS20_AVAIL;
formula a0_n1_rs20_sat_all = a0_n1_rs20_sat_avail;

//=====Application 0, Node1 and RS21
formula a0_n1_rs21_sat_dur0 = ( (A0_DUR <= N1_RS21_DUR0) ? true:false);
formula a0_n1_rs21_sat_dur1 = ( (A0_DUR <= N1_RS21_DUR1) ? true:false);
formula a0_n1_rs21_sat_rel0 = ( (A0_DUR <= N1_RS21_REL0) ? true:false);
formula a0_n1_rs21_sat_rel1 = ( (A0_DUR <= N1_RS21_REL1) ? true:false);
formula a0_n1_rs21_sat_cost = ( (A0_COST <= N1_RS21_COST) ? true:false);
formula a0_n1_rs21_sat_avail = N1_RS21_AVAIL;
formula a0_n1_rs21_sat_all = a0_n1_rs21_sat_avail;

//=====Application 0, Node1 and RS22
formula a0_n1_rs22_sat_dur0 = ( (A0_DUR <= N1_RS22_DUR0) ? true:false);
formula a0_n1_rs22_sat_dur1 = ( (A0_DUR <= N1_RS22_DUR1) ? true:false);
formula a0_n1_rs22_sat_rel0 = ( (A0_DUR <= N1_RS22_REL0) ? true:false);
formula a0_n1_rs22_sat_rel1 = ( (A0_DUR <= N1_RS22_REL1) ? true:false);
formula a0_n1_rs22_sat_cost = ( (A0_COST <= N1_RS22_COST) ? true:false);
formula a0_n1_rs22_sat_avail = N1_RS22_AVAIL;
formula a0_n1_rs22_sat_all = a0_n1_rs22_sat_avail;

//=====Application 0, Node1 and RS23
formula a0_n1_rs23_sat_dur0 = ( (A0_DUR <= N1_RS23_DUR0) ? true:false);
formula a0_n1_rs23_sat_dur1 = ( (A0_DUR <= N1_RS23_DUR1) ? true:false);
formula a0_n1_rs23_sat_rel0 = ( (A0_DUR <= N1_RS23_REL0) ? true:false);
formula a0_n1_rs23_sat_rel1 = ( (A0_DUR <= N1_RS23_REL1) ? true:false);
formula a0_n1_rs23_sat_cost = ( (A0_COST <= N1_RS23_COST) ? true:false);
formula a0_n1_rs23_sat_avail = N1_RS23_AVAIL;
formula a0_n1_rs23_sat_all = a0_n1_rs23_sat_avail;

//=====Application 0, Node1 and RS24
formula a0_n1_rs24_sat_dur0 = ( (A0_DUR <= N1_RS24_DUR0) ? true:false);
formula a0_n1_rs24_sat_dur1 = ( (A0_DUR <= N1_RS24_DUR1) ? true:false);
formula a0_n1_rs24_sat_rel0 = ( (A0_DUR <= N1_RS24_REL0) ? true:false);
formula a0_n1_rs24_sat_rel1 = ( (A0_DUR <= N1_RS24_REL1) ? true:false);
formula a0_n1_rs24_sat_cost = ( (A0_COST <= N1_RS24_COST) ? true:false);
formula a0_n1_rs24_sat_avail = N1_RS24_AVAIL;
formula a0_n1_rs24_sat_all = a0_n1_rs24_sat_avail;

//=====Application 0, Node1 and RS25
formula a0_n1_rs25_sat_dur0 = ( (A0_DUR <= N1_RS25_DUR0) ? true:false);
formula a0_n1_rs25_sat_dur1 = ( (A0_DUR <= N1_RS25_DUR1) ? true:false);
formula a0_n1_rs25_sat_rel0 = ( (A0_DUR <= N1_RS25_REL0) ? true:false);
formula a0_n1_rs25_sat_rel1 = ( (A0_DUR <= N1_RS25_REL1) ? true:false);
formula a0_n1_rs25_sat_cost = ( (A0_COST <= N1_RS25_COST) ? true:false);
formula a0_n1_rs25_sat_avail = N1_RS25_AVAIL;
formula a0_n1_rs25_sat_all = a0_n1_rs25_sat_avail;

//=====Application 0, Node1 and RS26
formula a0_n1_rs26_sat_dur0 = ( (A0_DUR <= N1_RS26_DUR0) ? true:false);
formula a0_n1_rs26_sat_dur1 = ( (A0_DUR <= N1_RS26_DUR1) ? true:false);
formula a0_n1_rs26_sat_rel0 = ( (A0_DUR <= N1_RS26_REL0) ? true:false);
formula a0_n1_rs26_sat_rel1 = ( (A0_DUR <= N1_RS26_REL1) ? true:false);
formula a0_n1_rs26_sat_cost = ( (A0_COST <= N1_RS26_COST) ? true:false);
formula a0_n1_rs26_sat_avail = N1_RS26_AVAIL;
formula a0_n1_rs26_sat_all = a0_n1_rs26_sat_avail;

//=====Application 0, Node1 and RS27
formula a0_n1_rs27_sat_dur0 = ( (A0_DUR <= N1_RS27_DUR0) ? true:false);
formula a0_n1_rs27_sat_dur1 = ( (A0_DUR <= N1_RS27_DUR1) ? true:false);
formula a0_n1_rs27_sat_rel0 = ( (A0_DUR <= N1_RS27_REL0) ? true:false);
formula a0_n1_rs27_sat_rel1 = ( (A0_DUR <= N1_RS27_REL1) ? true:false);
formula a0_n1_rs27_sat_cost = ( (A0_COST <= N1_RS27_COST) ? true:false);
formula a0_n1_rs27_sat_avail = N1_RS27_AVAIL;
formula a0_n1_rs27_sat_all = a0_n1_rs27_sat_avail;

//=====Application 0, Node1 and RS28
formula a0_n1_rs28_sat_dur0 = ( (A0_DUR <= N1_RS28_DUR0) ? true:false);
formula a0_n1_rs28_sat_dur1 = ( (A0_DUR <= N1_RS28_DUR1) ? true:false);
formula a0_n1_rs28_sat_rel0 = ( (A0_DUR <= N1_RS28_REL0) ? true:false);
formula a0_n1_rs28_sat_rel1 = ( (A0_DUR <= N1_RS28_REL1) ? true:false);
formula a0_n1_rs28_sat_cost = ( (A0_COST <= N1_RS28_COST) ? true:false);
formula a0_n1_rs28_sat_avail = N1_RS28_AVAIL;
formula a0_n1_rs28_sat_all = a0_n1_rs28_sat_avail;

//=====Application 0, Node1 and RS29
formula a0_n1_rs29_sat_dur0 = ( (A0_DUR <= N1_RS29_DUR0) ? true:false);
formula a0_n1_rs29_sat_dur1 = ( (A0_DUR <= N1_RS29_DUR1) ? true:false);
formula a0_n1_rs29_sat_rel0 = ( (A0_DUR <= N1_RS29_REL0) ? true:false);
formula a0_n1_rs29_sat_rel1 = ( (A0_DUR <= N1_RS29_REL1) ? true:false);
formula a0_n1_rs29_sat_cost = ( (A0_COST <= N1_RS29_COST) ? true:false);
formula a0_n1_rs29_sat_avail = N1_RS29_AVAIL;
formula a0_n1_rs29_sat_all = a0_n1_rs29_sat_avail;

//=====Application 0, Node2 and RS0
formula a0_n2_rs0_sat_dur0 = ( (A0_DUR <= N2_RS0_DUR0) ? true:false);
formula a0_n2_rs0_sat_dur1 = ( (A0_DUR <= N2_RS0_DUR1) ? true:false);
formula a0_n2_rs0_sat_rel0 = ( (A0_DUR <= N2_RS0_REL0) ? true:false);
formula a0_n2_rs0_sat_rel1 = ( (A0_DUR <= N2_RS0_REL1) ? true:false);
formula a0_n2_rs0_sat_cost = ( (A0_COST <= N2_RS0_COST) ? true:false);
formula a0_n2_rs0_sat_avail = N2_RS0_AVAIL;
formula a0_n2_rs0_sat_all = a0_n2_rs0_sat_avail;

//=====Application 0, Node2 and RS1
formula a0_n2_rs1_sat_dur0 = ( (A0_DUR <= N2_RS1_DUR0) ? true:false);
formula a0_n2_rs1_sat_dur1 = ( (A0_DUR <= N2_RS1_DUR1) ? true:false);
formula a0_n2_rs1_sat_rel0 = ( (A0_DUR <= N2_RS1_REL0) ? true:false);
formula a0_n2_rs1_sat_rel1 = ( (A0_DUR <= N2_RS1_REL1) ? true:false);
formula a0_n2_rs1_sat_cost = ( (A0_COST <= N2_RS1_COST) ? true:false);
formula a0_n2_rs1_sat_avail = N2_RS1_AVAIL;
formula a0_n2_rs1_sat_all = a0_n2_rs1_sat_avail;

//=====Application 0, Node2 and RS2
formula a0_n2_rs2_sat_dur0 = ( (A0_DUR <= N2_RS2_DUR0) ? true:false);
formula a0_n2_rs2_sat_dur1 = ( (A0_DUR <= N2_RS2_DUR1) ? true:false);
formula a0_n2_rs2_sat_rel0 = ( (A0_DUR <= N2_RS2_REL0) ? true:false);
formula a0_n2_rs2_sat_rel1 = ( (A0_DUR <= N2_RS2_REL1) ? true:false);
formula a0_n2_rs2_sat_cost = ( (A0_COST <= N2_RS2_COST) ? true:false);
formula a0_n2_rs2_sat_avail = N2_RS2_AVAIL;
formula a0_n2_rs2_sat_all = a0_n2_rs2_sat_avail;

//=====Application 0, Node2 and RS3
formula a0_n2_rs3_sat_dur0 = ( (A0_DUR <= N2_RS3_DUR0) ? true:false);
formula a0_n2_rs3_sat_dur1 = ( (A0_DUR <= N2_RS3_DUR1) ? true:false);
formula a0_n2_rs3_sat_rel0 = ( (A0_DUR <= N2_RS3_REL0) ? true:false);
formula a0_n2_rs3_sat_rel1 = ( (A0_DUR <= N2_RS3_REL1) ? true:false);
formula a0_n2_rs3_sat_cost = ( (A0_COST <= N2_RS3_COST) ? true:false);
formula a0_n2_rs3_sat_avail = N2_RS3_AVAIL;
formula a0_n2_rs3_sat_all = a0_n2_rs3_sat_avail;

//=====Application 0, Node2 and RS4
formula a0_n2_rs4_sat_dur0 = ( (A0_DUR <= N2_RS4_DUR0) ? true:false);
formula a0_n2_rs4_sat_dur1 = ( (A0_DUR <= N2_RS4_DUR1) ? true:false);
formula a0_n2_rs4_sat_rel0 = ( (A0_DUR <= N2_RS4_REL0) ? true:false);
formula a0_n2_rs4_sat_rel1 = ( (A0_DUR <= N2_RS4_REL1) ? true:false);
formula a0_n2_rs4_sat_cost = ( (A0_COST <= N2_RS4_COST) ? true:false);
formula a0_n2_rs4_sat_avail = N2_RS4_AVAIL;
formula a0_n2_rs4_sat_all = a0_n2_rs4_sat_avail;

//=====Application 0, Node2 and RS5
formula a0_n2_rs5_sat_dur0 = ( (A0_DUR <= N2_RS5_DUR0) ? true:false);
formula a0_n2_rs5_sat_dur1 = ( (A0_DUR <= N2_RS5_DUR1) ? true:false);
formula a0_n2_rs5_sat_rel0 = ( (A0_DUR <= N2_RS5_REL0) ? true:false);
formula a0_n2_rs5_sat_rel1 = ( (A0_DUR <= N2_RS5_REL1) ? true:false);
formula a0_n2_rs5_sat_cost = ( (A0_COST <= N2_RS5_COST) ? true:false);
formula a0_n2_rs5_sat_avail = N2_RS5_AVAIL;
formula a0_n2_rs5_sat_all = a0_n2_rs5_sat_avail;

//=====Application 0, Node2 and RS6
formula a0_n2_rs6_sat_dur0 = ( (A0_DUR <= N2_RS6_DUR0) ? true:false);
formula a0_n2_rs6_sat_dur1 = ( (A0_DUR <= N2_RS6_DUR1) ? true:false);
formula a0_n2_rs6_sat_rel0 = ( (A0_DUR <= N2_RS6_REL0) ? true:false);
formula a0_n2_rs6_sat_rel1 = ( (A0_DUR <= N2_RS6_REL1) ? true:false);
formula a0_n2_rs6_sat_cost = ( (A0_COST <= N2_RS6_COST) ? true:false);
formula a0_n2_rs6_sat_avail = N2_RS6_AVAIL;
formula a0_n2_rs6_sat_all = a0_n2_rs6_sat_avail;

//=====Application 0, Node2 and RS7
formula a0_n2_rs7_sat_dur0 = ( (A0_DUR <= N2_RS7_DUR0) ? true:false);
formula a0_n2_rs7_sat_dur1 = ( (A0_DUR <= N2_RS7_DUR1) ? true:false);
formula a0_n2_rs7_sat_rel0 = ( (A0_DUR <= N2_RS7_REL0) ? true:false);
formula a0_n2_rs7_sat_rel1 = ( (A0_DUR <= N2_RS7_REL1) ? true:false);
formula a0_n2_rs7_sat_cost = ( (A0_COST <= N2_RS7_COST) ? true:false);
formula a0_n2_rs7_sat_avail = N2_RS7_AVAIL;
formula a0_n2_rs7_sat_all = a0_n2_rs7_sat_avail;

//=====Application 0, Node2 and RS8
formula a0_n2_rs8_sat_dur0 = ( (A0_DUR <= N2_RS8_DUR0) ? true:false);
formula a0_n2_rs8_sat_dur1 = ( (A0_DUR <= N2_RS8_DUR1) ? true:false);
formula a0_n2_rs8_sat_rel0 = ( (A0_DUR <= N2_RS8_REL0) ? true:false);
formula a0_n2_rs8_sat_rel1 = ( (A0_DUR <= N2_RS8_REL1) ? true:false);
formula a0_n2_rs8_sat_cost = ( (A0_COST <= N2_RS8_COST) ? true:false);
formula a0_n2_rs8_sat_avail = N2_RS8_AVAIL;
formula a0_n2_rs8_sat_all = a0_n2_rs8_sat_avail;

//=====Application 0, Node2 and RS9
formula a0_n2_rs9_sat_dur0 = ( (A0_DUR <= N2_RS9_DUR0) ? true:false);
formula a0_n2_rs9_sat_dur1 = ( (A0_DUR <= N2_RS9_DUR1) ? true:false);
formula a0_n2_rs9_sat_rel0 = ( (A0_DUR <= N2_RS9_REL0) ? true:false);
formula a0_n2_rs9_sat_rel1 = ( (A0_DUR <= N2_RS9_REL1) ? true:false);
formula a0_n2_rs9_sat_cost = ( (A0_COST <= N2_RS9_COST) ? true:false);
formula a0_n2_rs9_sat_avail = N2_RS9_AVAIL;
formula a0_n2_rs9_sat_all = a0_n2_rs9_sat_avail;

//=====Application 0, Node2 and RS10
formula a0_n2_rs10_sat_dur0 = ( (A0_DUR <= N2_RS10_DUR0) ? true:false);
formula a0_n2_rs10_sat_dur1 = ( (A0_DUR <= N2_RS10_DUR1) ? true:false);
formula a0_n2_rs10_sat_rel0 = ( (A0_DUR <= N2_RS10_REL0) ? true:false);
formula a0_n2_rs10_sat_rel1 = ( (A0_DUR <= N2_RS10_REL1) ? true:false);
formula a0_n2_rs10_sat_cost = ( (A0_COST <= N2_RS10_COST) ? true:false);
formula a0_n2_rs10_sat_avail = N2_RS10_AVAIL;
formula a0_n2_rs10_sat_all = a0_n2_rs10_sat_avail;

//=====Application 0, Node2 and RS11
formula a0_n2_rs11_sat_dur0 = ( (A0_DUR <= N2_RS11_DUR0) ? true:false);
formula a0_n2_rs11_sat_dur1 = ( (A0_DUR <= N2_RS11_DUR1) ? true:false);
formula a0_n2_rs11_sat_rel0 = ( (A0_DUR <= N2_RS11_REL0) ? true:false);
formula a0_n2_rs11_sat_rel1 = ( (A0_DUR <= N2_RS11_REL1) ? true:false);
formula a0_n2_rs11_sat_cost = ( (A0_COST <= N2_RS11_COST) ? true:false);
formula a0_n2_rs11_sat_avail = N2_RS11_AVAIL;
formula a0_n2_rs11_sat_all = a0_n2_rs11_sat_avail;

//=====Application 0, Node2 and RS12
formula a0_n2_rs12_sat_dur0 = ( (A0_DUR <= N2_RS12_DUR0) ? true:false);
formula a0_n2_rs12_sat_dur1 = ( (A0_DUR <= N2_RS12_DUR1) ? true:false);
formula a0_n2_rs12_sat_rel0 = ( (A0_DUR <= N2_RS12_REL0) ? true:false);
formula a0_n2_rs12_sat_rel1 = ( (A0_DUR <= N2_RS12_REL1) ? true:false);
formula a0_n2_rs12_sat_cost = ( (A0_COST <= N2_RS12_COST) ? true:false);
formula a0_n2_rs12_sat_avail = N2_RS12_AVAIL;
formula a0_n2_rs12_sat_all = a0_n2_rs12_sat_avail;

//=====Application 0, Node2 and RS13
formula a0_n2_rs13_sat_dur0 = ( (A0_DUR <= N2_RS13_DUR0) ? true:false);
formula a0_n2_rs13_sat_dur1 = ( (A0_DUR <= N2_RS13_DUR1) ? true:false);
formula a0_n2_rs13_sat_rel0 = ( (A0_DUR <= N2_RS13_REL0) ? true:false);
formula a0_n2_rs13_sat_rel1 = ( (A0_DUR <= N2_RS13_REL1) ? true:false);
formula a0_n2_rs13_sat_cost = ( (A0_COST <= N2_RS13_COST) ? true:false);
formula a0_n2_rs13_sat_avail = N2_RS13_AVAIL;
formula a0_n2_rs13_sat_all = a0_n2_rs13_sat_avail;

//=====Application 0, Node2 and RS14
formula a0_n2_rs14_sat_dur0 = ( (A0_DUR <= N2_RS14_DUR0) ? true:false);
formula a0_n2_rs14_sat_dur1 = ( (A0_DUR <= N2_RS14_DUR1) ? true:false);
formula a0_n2_rs14_sat_rel0 = ( (A0_DUR <= N2_RS14_REL0) ? true:false);
formula a0_n2_rs14_sat_rel1 = ( (A0_DUR <= N2_RS14_REL1) ? true:false);
formula a0_n2_rs14_sat_cost = ( (A0_COST <= N2_RS14_COST) ? true:false);
formula a0_n2_rs14_sat_avail = N2_RS14_AVAIL;
formula a0_n2_rs14_sat_all = a0_n2_rs14_sat_avail;

//=====Application 0, Node2 and RS15
formula a0_n2_rs15_sat_dur0 = ( (A0_DUR <= N2_RS15_DUR0) ? true:false);
formula a0_n2_rs15_sat_dur1 = ( (A0_DUR <= N2_RS15_DUR1) ? true:false);
formula a0_n2_rs15_sat_rel0 = ( (A0_DUR <= N2_RS15_REL0) ? true:false);
formula a0_n2_rs15_sat_rel1 = ( (A0_DUR <= N2_RS15_REL1) ? true:false);
formula a0_n2_rs15_sat_cost = ( (A0_COST <= N2_RS15_COST) ? true:false);
formula a0_n2_rs15_sat_avail = N2_RS15_AVAIL;
formula a0_n2_rs15_sat_all = a0_n2_rs15_sat_avail;

//=====Application 0, Node2 and RS16
formula a0_n2_rs16_sat_dur0 = ( (A0_DUR <= N2_RS16_DUR0) ? true:false);
formula a0_n2_rs16_sat_dur1 = ( (A0_DUR <= N2_RS16_DUR1) ? true:false);
formula a0_n2_rs16_sat_rel0 = ( (A0_DUR <= N2_RS16_REL0) ? true:false);
formula a0_n2_rs16_sat_rel1 = ( (A0_DUR <= N2_RS16_REL1) ? true:false);
formula a0_n2_rs16_sat_cost = ( (A0_COST <= N2_RS16_COST) ? true:false);
formula a0_n2_rs16_sat_avail = N2_RS16_AVAIL;
formula a0_n2_rs16_sat_all = a0_n2_rs16_sat_avail;

//=====Application 0, Node2 and RS17
formula a0_n2_rs17_sat_dur0 = ( (A0_DUR <= N2_RS17_DUR0) ? true:false);
formula a0_n2_rs17_sat_dur1 = ( (A0_DUR <= N2_RS17_DUR1) ? true:false);
formula a0_n2_rs17_sat_rel0 = ( (A0_DUR <= N2_RS17_REL0) ? true:false);
formula a0_n2_rs17_sat_rel1 = ( (A0_DUR <= N2_RS17_REL1) ? true:false);
formula a0_n2_rs17_sat_cost = ( (A0_COST <= N2_RS17_COST) ? true:false);
formula a0_n2_rs17_sat_avail = N2_RS17_AVAIL;
formula a0_n2_rs17_sat_all = a0_n2_rs17_sat_avail;

//=====Application 0, Node2 and RS18
formula a0_n2_rs18_sat_dur0 = ( (A0_DUR <= N2_RS18_DUR0) ? true:false);
formula a0_n2_rs18_sat_dur1 = ( (A0_DUR <= N2_RS18_DUR1) ? true:false);
formula a0_n2_rs18_sat_rel0 = ( (A0_DUR <= N2_RS18_REL0) ? true:false);
formula a0_n2_rs18_sat_rel1 = ( (A0_DUR <= N2_RS18_REL1) ? true:false);
formula a0_n2_rs18_sat_cost = ( (A0_COST <= N2_RS18_COST) ? true:false);
formula a0_n2_rs18_sat_avail = N2_RS18_AVAIL;
formula a0_n2_rs18_sat_all = a0_n2_rs18_sat_avail;

//=====Application 0, Node2 and RS19
formula a0_n2_rs19_sat_dur0 = ( (A0_DUR <= N2_RS19_DUR0) ? true:false);
formula a0_n2_rs19_sat_dur1 = ( (A0_DUR <= N2_RS19_DUR1) ? true:false);
formula a0_n2_rs19_sat_rel0 = ( (A0_DUR <= N2_RS19_REL0) ? true:false);
formula a0_n2_rs19_sat_rel1 = ( (A0_DUR <= N2_RS19_REL1) ? true:false);
formula a0_n2_rs19_sat_cost = ( (A0_COST <= N2_RS19_COST) ? true:false);
formula a0_n2_rs19_sat_avail = N2_RS19_AVAIL;
formula a0_n2_rs19_sat_all = a0_n2_rs19_sat_avail;

//=====Application 0, Node2 and RS20
formula a0_n2_rs20_sat_dur0 = ( (A0_DUR <= N2_RS20_DUR0) ? true:false);
formula a0_n2_rs20_sat_dur1 = ( (A0_DUR <= N2_RS20_DUR1) ? true:false);
formula a0_n2_rs20_sat_rel0 = ( (A0_DUR <= N2_RS20_REL0) ? true:false);
formula a0_n2_rs20_sat_rel1 = ( (A0_DUR <= N2_RS20_REL1) ? true:false);
formula a0_n2_rs20_sat_cost = ( (A0_COST <= N2_RS20_COST) ? true:false);
formula a0_n2_rs20_sat_avail = N2_RS20_AVAIL;
formula a0_n2_rs20_sat_all = a0_n2_rs20_sat_avail;

//=====Application 0, Node2 and RS21
formula a0_n2_rs21_sat_dur0 = ( (A0_DUR <= N2_RS21_DUR0) ? true:false);
formula a0_n2_rs21_sat_dur1 = ( (A0_DUR <= N2_RS21_DUR1) ? true:false);
formula a0_n2_rs21_sat_rel0 = ( (A0_DUR <= N2_RS21_REL0) ? true:false);
formula a0_n2_rs21_sat_rel1 = ( (A0_DUR <= N2_RS21_REL1) ? true:false);
formula a0_n2_rs21_sat_cost = ( (A0_COST <= N2_RS21_COST) ? true:false);
formula a0_n2_rs21_sat_avail = N2_RS21_AVAIL;
formula a0_n2_rs21_sat_all = a0_n2_rs21_sat_avail;

//=====Application 0, Node2 and RS22
formula a0_n2_rs22_sat_dur0 = ( (A0_DUR <= N2_RS22_DUR0) ? true:false);
formula a0_n2_rs22_sat_dur1 = ( (A0_DUR <= N2_RS22_DUR1) ? true:false);
formula a0_n2_rs22_sat_rel0 = ( (A0_DUR <= N2_RS22_REL0) ? true:false);
formula a0_n2_rs22_sat_rel1 = ( (A0_DUR <= N2_RS22_REL1) ? true:false);
formula a0_n2_rs22_sat_cost = ( (A0_COST <= N2_RS22_COST) ? true:false);
formula a0_n2_rs22_sat_avail = N2_RS22_AVAIL;
formula a0_n2_rs22_sat_all = a0_n2_rs22_sat_avail;

//=====Application 0, Node2 and RS23
formula a0_n2_rs23_sat_dur0 = ( (A0_DUR <= N2_RS23_DUR0) ? true:false);
formula a0_n2_rs23_sat_dur1 = ( (A0_DUR <= N2_RS23_DUR1) ? true:false);
formula a0_n2_rs23_sat_rel0 = ( (A0_DUR <= N2_RS23_REL0) ? true:false);
formula a0_n2_rs23_sat_rel1 = ( (A0_DUR <= N2_RS23_REL1) ? true:false);
formula a0_n2_rs23_sat_cost = ( (A0_COST <= N2_RS23_COST) ? true:false);
formula a0_n2_rs23_sat_avail = N2_RS23_AVAIL;
formula a0_n2_rs23_sat_all = a0_n2_rs23_sat_avail;

//=====Application 0, Node2 and RS24
formula a0_n2_rs24_sat_dur0 = ( (A0_DUR <= N2_RS24_DUR0) ? true:false);
formula a0_n2_rs24_sat_dur1 = ( (A0_DUR <= N2_RS24_DUR1) ? true:false);
formula a0_n2_rs24_sat_rel0 = ( (A0_DUR <= N2_RS24_REL0) ? true:false);
formula a0_n2_rs24_sat_rel1 = ( (A0_DUR <= N2_RS24_REL1) ? true:false);
formula a0_n2_rs24_sat_cost = ( (A0_COST <= N2_RS24_COST) ? true:false);
formula a0_n2_rs24_sat_avail = N2_RS24_AVAIL;
formula a0_n2_rs24_sat_all = a0_n2_rs24_sat_avail;

//=====Application 0, Node2 and RS25
formula a0_n2_rs25_sat_dur0 = ( (A0_DUR <= N2_RS25_DUR0) ? true:false);
formula a0_n2_rs25_sat_dur1 = ( (A0_DUR <= N2_RS25_DUR1) ? true:false);
formula a0_n2_rs25_sat_rel0 = ( (A0_DUR <= N2_RS25_REL0) ? true:false);
formula a0_n2_rs25_sat_rel1 = ( (A0_DUR <= N2_RS25_REL1) ? true:false);
formula a0_n2_rs25_sat_cost = ( (A0_COST <= N2_RS25_COST) ? true:false);
formula a0_n2_rs25_sat_avail = N2_RS25_AVAIL;
formula a0_n2_rs25_sat_all = a0_n2_rs25_sat_avail;

//=====Application 0, Node2 and RS26
formula a0_n2_rs26_sat_dur0 = ( (A0_DUR <= N2_RS26_DUR0) ? true:false);
formula a0_n2_rs26_sat_dur1 = ( (A0_DUR <= N2_RS26_DUR1) ? true:false);
formula a0_n2_rs26_sat_rel0 = ( (A0_DUR <= N2_RS26_REL0) ? true:false);
formula a0_n2_rs26_sat_rel1 = ( (A0_DUR <= N2_RS26_REL1) ? true:false);
formula a0_n2_rs26_sat_cost = ( (A0_COST <= N2_RS26_COST) ? true:false);
formula a0_n2_rs26_sat_avail = N2_RS26_AVAIL;
formula a0_n2_rs26_sat_all = a0_n2_rs26_sat_avail;

//=====Application 0, Node2 and RS27
formula a0_n2_rs27_sat_dur0 = ( (A0_DUR <= N2_RS27_DUR0) ? true:false);
formula a0_n2_rs27_sat_dur1 = ( (A0_DUR <= N2_RS27_DUR1) ? true:false);
formula a0_n2_rs27_sat_rel0 = ( (A0_DUR <= N2_RS27_REL0) ? true:false);
formula a0_n2_rs27_sat_rel1 = ( (A0_DUR <= N2_RS27_REL1) ? true:false);
formula a0_n2_rs27_sat_cost = ( (A0_COST <= N2_RS27_COST) ? true:false);
formula a0_n2_rs27_sat_avail = N2_RS27_AVAIL;
formula a0_n2_rs27_sat_all = a0_n2_rs27_sat_avail;

//=====Application 0, Node2 and RS28
formula a0_n2_rs28_sat_dur0 = ( (A0_DUR <= N2_RS28_DUR0) ? true:false);
formula a0_n2_rs28_sat_dur1 = ( (A0_DUR <= N2_RS28_DUR1) ? true:false);
formula a0_n2_rs28_sat_rel0 = ( (A0_DUR <= N2_RS28_REL0) ? true:false);
formula a0_n2_rs28_sat_rel1 = ( (A0_DUR <= N2_RS28_REL1) ? true:false);
formula a0_n2_rs28_sat_cost = ( (A0_COST <= N2_RS28_COST) ? true:false);
formula a0_n2_rs28_sat_avail = N2_RS28_AVAIL;
formula a0_n2_rs28_sat_all = a0_n2_rs28_sat_avail;

//=====Application 0, Node2 and RS29
formula a0_n2_rs29_sat_dur0 = ( (A0_DUR <= N2_RS29_DUR0) ? true:false);
formula a0_n2_rs29_sat_dur1 = ( (A0_DUR <= N2_RS29_DUR1) ? true:false);
formula a0_n2_rs29_sat_rel0 = ( (A0_DUR <= N2_RS29_REL0) ? true:false);
formula a0_n2_rs29_sat_rel1 = ( (A0_DUR <= N2_RS29_REL1) ? true:false);
formula a0_n2_rs29_sat_cost = ( (A0_COST <= N2_RS29_COST) ? true:false);
formula a0_n2_rs29_sat_avail = N2_RS29_AVAIL;
formula a0_n2_rs29_sat_all = a0_n2_rs29_sat_avail;

//=====Application 0, Node3 and RS0
formula a0_n3_rs0_sat_dur0 = ( (A0_DUR <= N3_RS0_DUR0) ? true:false);
formula a0_n3_rs0_sat_dur1 = ( (A0_DUR <= N3_RS0_DUR1) ? true:false);
formula a0_n3_rs0_sat_rel0 = ( (A0_DUR <= N3_RS0_REL0) ? true:false);
formula a0_n3_rs0_sat_rel1 = ( (A0_DUR <= N3_RS0_REL1) ? true:false);
formula a0_n3_rs0_sat_cost = ( (A0_COST <= N3_RS0_COST) ? true:false);
formula a0_n3_rs0_sat_avail = N3_RS0_AVAIL;
formula a0_n3_rs0_sat_all = a0_n3_rs0_sat_avail;

//=====Application 0, Node3 and RS1
formula a0_n3_rs1_sat_dur0 = ( (A0_DUR <= N3_RS1_DUR0) ? true:false);
formula a0_n3_rs1_sat_dur1 = ( (A0_DUR <= N3_RS1_DUR1) ? true:false);
formula a0_n3_rs1_sat_rel0 = ( (A0_DUR <= N3_RS1_REL0) ? true:false);
formula a0_n3_rs1_sat_rel1 = ( (A0_DUR <= N3_RS1_REL1) ? true:false);
formula a0_n3_rs1_sat_cost = ( (A0_COST <= N3_RS1_COST) ? true:false);
formula a0_n3_rs1_sat_avail = N3_RS1_AVAIL;
formula a0_n3_rs1_sat_all = a0_n3_rs1_sat_avail;

//=====Application 0, Node3 and RS2
formula a0_n3_rs2_sat_dur0 = ( (A0_DUR <= N3_RS2_DUR0) ? true:false);
formula a0_n3_rs2_sat_dur1 = ( (A0_DUR <= N3_RS2_DUR1) ? true:false);
formula a0_n3_rs2_sat_rel0 = ( (A0_DUR <= N3_RS2_REL0) ? true:false);
formula a0_n3_rs2_sat_rel1 = ( (A0_DUR <= N3_RS2_REL1) ? true:false);
formula a0_n3_rs2_sat_cost = ( (A0_COST <= N3_RS2_COST) ? true:false);
formula a0_n3_rs2_sat_avail = N3_RS2_AVAIL;
formula a0_n3_rs2_sat_all = a0_n3_rs2_sat_avail;

//=====Application 0, Node3 and RS3
formula a0_n3_rs3_sat_dur0 = ( (A0_DUR <= N3_RS3_DUR0) ? true:false);
formula a0_n3_rs3_sat_dur1 = ( (A0_DUR <= N3_RS3_DUR1) ? true:false);
formula a0_n3_rs3_sat_rel0 = ( (A0_DUR <= N3_RS3_REL0) ? true:false);
formula a0_n3_rs3_sat_rel1 = ( (A0_DUR <= N3_RS3_REL1) ? true:false);
formula a0_n3_rs3_sat_cost = ( (A0_COST <= N3_RS3_COST) ? true:false);
formula a0_n3_rs3_sat_avail = N3_RS3_AVAIL;
formula a0_n3_rs3_sat_all = a0_n3_rs3_sat_avail;

//=====Application 0, Node3 and RS4
formula a0_n3_rs4_sat_dur0 = ( (A0_DUR <= N3_RS4_DUR0) ? true:false);
formula a0_n3_rs4_sat_dur1 = ( (A0_DUR <= N3_RS4_DUR1) ? true:false);
formula a0_n3_rs4_sat_rel0 = ( (A0_DUR <= N3_RS4_REL0) ? true:false);
formula a0_n3_rs4_sat_rel1 = ( (A0_DUR <= N3_RS4_REL1) ? true:false);
formula a0_n3_rs4_sat_cost = ( (A0_COST <= N3_RS4_COST) ? true:false);
formula a0_n3_rs4_sat_avail = N3_RS4_AVAIL;
formula a0_n3_rs4_sat_all = a0_n3_rs4_sat_avail;

//=====Application 0, Node3 and RS5
formula a0_n3_rs5_sat_dur0 = ( (A0_DUR <= N3_RS5_DUR0) ? true:false);
formula a0_n3_rs5_sat_dur1 = ( (A0_DUR <= N3_RS5_DUR1) ? true:false);
formula a0_n3_rs5_sat_rel0 = ( (A0_DUR <= N3_RS5_REL0) ? true:false);
formula a0_n3_rs5_sat_rel1 = ( (A0_DUR <= N3_RS5_REL1) ? true:false);
formula a0_n3_rs5_sat_cost = ( (A0_COST <= N3_RS5_COST) ? true:false);
formula a0_n3_rs5_sat_avail = N3_RS5_AVAIL;
formula a0_n3_rs5_sat_all = a0_n3_rs5_sat_avail;

//=====Application 0, Node3 and RS6
formula a0_n3_rs6_sat_dur0 = ( (A0_DUR <= N3_RS6_DUR0) ? true:false);
formula a0_n3_rs6_sat_dur1 = ( (A0_DUR <= N3_RS6_DUR1) ? true:false);
formula a0_n3_rs6_sat_rel0 = ( (A0_DUR <= N3_RS6_REL0) ? true:false);
formula a0_n3_rs6_sat_rel1 = ( (A0_DUR <= N3_RS6_REL1) ? true:false);
formula a0_n3_rs6_sat_cost = ( (A0_COST <= N3_RS6_COST) ? true:false);
formula a0_n3_rs6_sat_avail = N3_RS6_AVAIL;
formula a0_n3_rs6_sat_all = a0_n3_rs6_sat_avail;

//=====Application 0, Node3 and RS7
formula a0_n3_rs7_sat_dur0 = ( (A0_DUR <= N3_RS7_DUR0) ? true:false);
formula a0_n3_rs7_sat_dur1 = ( (A0_DUR <= N3_RS7_DUR1) ? true:false);
formula a0_n3_rs7_sat_rel0 = ( (A0_DUR <= N3_RS7_REL0) ? true:false);
formula a0_n3_rs7_sat_rel1 = ( (A0_DUR <= N3_RS7_REL1) ? true:false);
formula a0_n3_rs7_sat_cost = ( (A0_COST <= N3_RS7_COST) ? true:false);
formula a0_n3_rs7_sat_avail = N3_RS7_AVAIL;
formula a0_n3_rs7_sat_all = a0_n3_rs7_sat_avail;

//=====Application 0, Node3 and RS8
formula a0_n3_rs8_sat_dur0 = ( (A0_DUR <= N3_RS8_DUR0) ? true:false);
formula a0_n3_rs8_sat_dur1 = ( (A0_DUR <= N3_RS8_DUR1) ? true:false);
formula a0_n3_rs8_sat_rel0 = ( (A0_DUR <= N3_RS8_REL0) ? true:false);
formula a0_n3_rs8_sat_rel1 = ( (A0_DUR <= N3_RS8_REL1) ? true:false);
formula a0_n3_rs8_sat_cost = ( (A0_COST <= N3_RS8_COST) ? true:false);
formula a0_n3_rs8_sat_avail = N3_RS8_AVAIL;
formula a0_n3_rs8_sat_all = a0_n3_rs8_sat_avail;

//=====Application 0, Node3 and RS9
formula a0_n3_rs9_sat_dur0 = ( (A0_DUR <= N3_RS9_DUR0) ? true:false);
formula a0_n3_rs9_sat_dur1 = ( (A0_DUR <= N3_RS9_DUR1) ? true:false);
formula a0_n3_rs9_sat_rel0 = ( (A0_DUR <= N3_RS9_REL0) ? true:false);
formula a0_n3_rs9_sat_rel1 = ( (A0_DUR <= N3_RS9_REL1) ? true:false);
formula a0_n3_rs9_sat_cost = ( (A0_COST <= N3_RS9_COST) ? true:false);
formula a0_n3_rs9_sat_avail = N3_RS9_AVAIL;
formula a0_n3_rs9_sat_all = a0_n3_rs9_sat_avail;

//=====Application 0, Node3 and RS10
formula a0_n3_rs10_sat_dur0 = ( (A0_DUR <= N3_RS10_DUR0) ? true:false);
formula a0_n3_rs10_sat_dur1 = ( (A0_DUR <= N3_RS10_DUR1) ? true:false);
formula a0_n3_rs10_sat_rel0 = ( (A0_DUR <= N3_RS10_REL0) ? true:false);
formula a0_n3_rs10_sat_rel1 = ( (A0_DUR <= N3_RS10_REL1) ? true:false);
formula a0_n3_rs10_sat_cost = ( (A0_COST <= N3_RS10_COST) ? true:false);
formula a0_n3_rs10_sat_avail = N3_RS10_AVAIL;
formula a0_n3_rs10_sat_all = a0_n3_rs10_sat_avail;

//=====Application 0, Node3 and RS11
formula a0_n3_rs11_sat_dur0 = ( (A0_DUR <= N3_RS11_DUR0) ? true:false);
formula a0_n3_rs11_sat_dur1 = ( (A0_DUR <= N3_RS11_DUR1) ? true:false);
formula a0_n3_rs11_sat_rel0 = ( (A0_DUR <= N3_RS11_REL0) ? true:false);
formula a0_n3_rs11_sat_rel1 = ( (A0_DUR <= N3_RS11_REL1) ? true:false);
formula a0_n3_rs11_sat_cost = ( (A0_COST <= N3_RS11_COST) ? true:false);
formula a0_n3_rs11_sat_avail = N3_RS11_AVAIL;
formula a0_n3_rs11_sat_all = a0_n3_rs11_sat_avail;

//=====Application 0, Node3 and RS12
formula a0_n3_rs12_sat_dur0 = ( (A0_DUR <= N3_RS12_DUR0) ? true:false);
formula a0_n3_rs12_sat_dur1 = ( (A0_DUR <= N3_RS12_DUR1) ? true:false);
formula a0_n3_rs12_sat_rel0 = ( (A0_DUR <= N3_RS12_REL0) ? true:false);
formula a0_n3_rs12_sat_rel1 = ( (A0_DUR <= N3_RS12_REL1) ? true:false);
formula a0_n3_rs12_sat_cost = ( (A0_COST <= N3_RS12_COST) ? true:false);
formula a0_n3_rs12_sat_avail = N3_RS12_AVAIL;
formula a0_n3_rs12_sat_all = a0_n3_rs12_sat_avail;

//=====Application 0, Node3 and RS13
formula a0_n3_rs13_sat_dur0 = ( (A0_DUR <= N3_RS13_DUR0) ? true:false);
formula a0_n3_rs13_sat_dur1 = ( (A0_DUR <= N3_RS13_DUR1) ? true:false);
formula a0_n3_rs13_sat_rel0 = ( (A0_DUR <= N3_RS13_REL0) ? true:false);
formula a0_n3_rs13_sat_rel1 = ( (A0_DUR <= N3_RS13_REL1) ? true:false);
formula a0_n3_rs13_sat_cost = ( (A0_COST <= N3_RS13_COST) ? true:false);
formula a0_n3_rs13_sat_avail = N3_RS13_AVAIL;
formula a0_n3_rs13_sat_all = a0_n3_rs13_sat_avail;

//=====Application 0, Node3 and RS14
formula a0_n3_rs14_sat_dur0 = ( (A0_DUR <= N3_RS14_DUR0) ? true:false);
formula a0_n3_rs14_sat_dur1 = ( (A0_DUR <= N3_RS14_DUR1) ? true:false);
formula a0_n3_rs14_sat_rel0 = ( (A0_DUR <= N3_RS14_REL0) ? true:false);
formula a0_n3_rs14_sat_rel1 = ( (A0_DUR <= N3_RS14_REL1) ? true:false);
formula a0_n3_rs14_sat_cost = ( (A0_COST <= N3_RS14_COST) ? true:false);
formula a0_n3_rs14_sat_avail = N3_RS14_AVAIL;
formula a0_n3_rs14_sat_all = a0_n3_rs14_sat_avail;

//=====Application 0, Node3 and RS15
formula a0_n3_rs15_sat_dur0 = ( (A0_DUR <= N3_RS15_DUR0) ? true:false);
formula a0_n3_rs15_sat_dur1 = ( (A0_DUR <= N3_RS15_DUR1) ? true:false);
formula a0_n3_rs15_sat_rel0 = ( (A0_DUR <= N3_RS15_REL0) ? true:false);
formula a0_n3_rs15_sat_rel1 = ( (A0_DUR <= N3_RS15_REL1) ? true:false);
formula a0_n3_rs15_sat_cost = ( (A0_COST <= N3_RS15_COST) ? true:false);
formula a0_n3_rs15_sat_avail = N3_RS15_AVAIL;
formula a0_n3_rs15_sat_all = a0_n3_rs15_sat_avail;

//=====Application 0, Node3 and RS16
formula a0_n3_rs16_sat_dur0 = ( (A0_DUR <= N3_RS16_DUR0) ? true:false);
formula a0_n3_rs16_sat_dur1 = ( (A0_DUR <= N3_RS16_DUR1) ? true:false);
formula a0_n3_rs16_sat_rel0 = ( (A0_DUR <= N3_RS16_REL0) ? true:false);
formula a0_n3_rs16_sat_rel1 = ( (A0_DUR <= N3_RS16_REL1) ? true:false);
formula a0_n3_rs16_sat_cost = ( (A0_COST <= N3_RS16_COST) ? true:false);
formula a0_n3_rs16_sat_avail = N3_RS16_AVAIL;
formula a0_n3_rs16_sat_all = a0_n3_rs16_sat_avail;

//=====Application 0, Node3 and RS17
formula a0_n3_rs17_sat_dur0 = ( (A0_DUR <= N3_RS17_DUR0) ? true:false);
formula a0_n3_rs17_sat_dur1 = ( (A0_DUR <= N3_RS17_DUR1) ? true:false);
formula a0_n3_rs17_sat_rel0 = ( (A0_DUR <= N3_RS17_REL0) ? true:false);
formula a0_n3_rs17_sat_rel1 = ( (A0_DUR <= N3_RS17_REL1) ? true:false);
formula a0_n3_rs17_sat_cost = ( (A0_COST <= N3_RS17_COST) ? true:false);
formula a0_n3_rs17_sat_avail = N3_RS17_AVAIL;
formula a0_n3_rs17_sat_all = a0_n3_rs17_sat_avail;

//=====Application 0, Node3 and RS18
formula a0_n3_rs18_sat_dur0 = ( (A0_DUR <= N3_RS18_DUR0) ? true:false);
formula a0_n3_rs18_sat_dur1 = ( (A0_DUR <= N3_RS18_DUR1) ? true:false);
formula a0_n3_rs18_sat_rel0 = ( (A0_DUR <= N3_RS18_REL0) ? true:false);
formula a0_n3_rs18_sat_rel1 = ( (A0_DUR <= N3_RS18_REL1) ? true:false);
formula a0_n3_rs18_sat_cost = ( (A0_COST <= N3_RS18_COST) ? true:false);
formula a0_n3_rs18_sat_avail = N3_RS18_AVAIL;
formula a0_n3_rs18_sat_all = a0_n3_rs18_sat_avail;

//=====Application 0, Node3 and RS19
formula a0_n3_rs19_sat_dur0 = ( (A0_DUR <= N3_RS19_DUR0) ? true:false);
formula a0_n3_rs19_sat_dur1 = ( (A0_DUR <= N3_RS19_DUR1) ? true:false);
formula a0_n3_rs19_sat_rel0 = ( (A0_DUR <= N3_RS19_REL0) ? true:false);
formula a0_n3_rs19_sat_rel1 = ( (A0_DUR <= N3_RS19_REL1) ? true:false);
formula a0_n3_rs19_sat_cost = ( (A0_COST <= N3_RS19_COST) ? true:false);
formula a0_n3_rs19_sat_avail = N3_RS19_AVAIL;
formula a0_n3_rs19_sat_all = a0_n3_rs19_sat_avail;

//=====Application 0, Node3 and RS20
formula a0_n3_rs20_sat_dur0 = ( (A0_DUR <= N3_RS20_DUR0) ? true:false);
formula a0_n3_rs20_sat_dur1 = ( (A0_DUR <= N3_RS20_DUR1) ? true:false);
formula a0_n3_rs20_sat_rel0 = ( (A0_DUR <= N3_RS20_REL0) ? true:false);
formula a0_n3_rs20_sat_rel1 = ( (A0_DUR <= N3_RS20_REL1) ? true:false);
formula a0_n3_rs20_sat_cost = ( (A0_COST <= N3_RS20_COST) ? true:false);
formula a0_n3_rs20_sat_avail = N3_RS20_AVAIL;
formula a0_n3_rs20_sat_all = a0_n3_rs20_sat_avail;

//=====Application 0, Node3 and RS21
formula a0_n3_rs21_sat_dur0 = ( (A0_DUR <= N3_RS21_DUR0) ? true:false);
formula a0_n3_rs21_sat_dur1 = ( (A0_DUR <= N3_RS21_DUR1) ? true:false);
formula a0_n3_rs21_sat_rel0 = ( (A0_DUR <= N3_RS21_REL0) ? true:false);
formula a0_n3_rs21_sat_rel1 = ( (A0_DUR <= N3_RS21_REL1) ? true:false);
formula a0_n3_rs21_sat_cost = ( (A0_COST <= N3_RS21_COST) ? true:false);
formula a0_n3_rs21_sat_avail = N3_RS21_AVAIL;
formula a0_n3_rs21_sat_all = a0_n3_rs21_sat_avail;

//=====Application 0, Node3 and RS22
formula a0_n3_rs22_sat_dur0 = ( (A0_DUR <= N3_RS22_DUR0) ? true:false);
formula a0_n3_rs22_sat_dur1 = ( (A0_DUR <= N3_RS22_DUR1) ? true:false);
formula a0_n3_rs22_sat_rel0 = ( (A0_DUR <= N3_RS22_REL0) ? true:false);
formula a0_n3_rs22_sat_rel1 = ( (A0_DUR <= N3_RS22_REL1) ? true:false);
formula a0_n3_rs22_sat_cost = ( (A0_COST <= N3_RS22_COST) ? true:false);
formula a0_n3_rs22_sat_avail = N3_RS22_AVAIL;
formula a0_n3_rs22_sat_all = a0_n3_rs22_sat_avail;

//=====Application 0, Node3 and RS23
formula a0_n3_rs23_sat_dur0 = ( (A0_DUR <= N3_RS23_DUR0) ? true:false);
formula a0_n3_rs23_sat_dur1 = ( (A0_DUR <= N3_RS23_DUR1) ? true:false);
formula a0_n3_rs23_sat_rel0 = ( (A0_DUR <= N3_RS23_REL0) ? true:false);
formula a0_n3_rs23_sat_rel1 = ( (A0_DUR <= N3_RS23_REL1) ? true:false);
formula a0_n3_rs23_sat_cost = ( (A0_COST <= N3_RS23_COST) ? true:false);
formula a0_n3_rs23_sat_avail = N3_RS23_AVAIL;
formula a0_n3_rs23_sat_all = a0_n3_rs23_sat_avail;

//=====Application 0, Node3 and RS24
formula a0_n3_rs24_sat_dur0 = ( (A0_DUR <= N3_RS24_DUR0) ? true:false);
formula a0_n3_rs24_sat_dur1 = ( (A0_DUR <= N3_RS24_DUR1) ? true:false);
formula a0_n3_rs24_sat_rel0 = ( (A0_DUR <= N3_RS24_REL0) ? true:false);
formula a0_n3_rs24_sat_rel1 = ( (A0_DUR <= N3_RS24_REL1) ? true:false);
formula a0_n3_rs24_sat_cost = ( (A0_COST <= N3_RS24_COST) ? true:false);
formula a0_n3_rs24_sat_avail = N3_RS24_AVAIL;
formula a0_n3_rs24_sat_all = a0_n3_rs24_sat_avail;

//=====Application 0, Node3 and RS25
formula a0_n3_rs25_sat_dur0 = ( (A0_DUR <= N3_RS25_DUR0) ? true:false);
formula a0_n3_rs25_sat_dur1 = ( (A0_DUR <= N3_RS25_DUR1) ? true:false);
formula a0_n3_rs25_sat_rel0 = ( (A0_DUR <= N3_RS25_REL0) ? true:false);
formula a0_n3_rs25_sat_rel1 = ( (A0_DUR <= N3_RS25_REL1) ? true:false);
formula a0_n3_rs25_sat_cost = ( (A0_COST <= N3_RS25_COST) ? true:false);
formula a0_n3_rs25_sat_avail = N3_RS25_AVAIL;
formula a0_n3_rs25_sat_all = a0_n3_rs25_sat_avail;

//=====Application 0, Node3 and RS26
formula a0_n3_rs26_sat_dur0 = ( (A0_DUR <= N3_RS26_DUR0) ? true:false);
formula a0_n3_rs26_sat_dur1 = ( (A0_DUR <= N3_RS26_DUR1) ? true:false);
formula a0_n3_rs26_sat_rel0 = ( (A0_DUR <= N3_RS26_REL0) ? true:false);
formula a0_n3_rs26_sat_rel1 = ( (A0_DUR <= N3_RS26_REL1) ? true:false);
formula a0_n3_rs26_sat_cost = ( (A0_COST <= N3_RS26_COST) ? true:false);
formula a0_n3_rs26_sat_avail = N3_RS26_AVAIL;
formula a0_n3_rs26_sat_all = a0_n3_rs26_sat_avail;

//=====Application 0, Node3 and RS27
formula a0_n3_rs27_sat_dur0 = ( (A0_DUR <= N3_RS27_DUR0) ? true:false);
formula a0_n3_rs27_sat_dur1 = ( (A0_DUR <= N3_RS27_DUR1) ? true:false);
formula a0_n3_rs27_sat_rel0 = ( (A0_DUR <= N3_RS27_REL0) ? true:false);
formula a0_n3_rs27_sat_rel1 = ( (A0_DUR <= N3_RS27_REL1) ? true:false);
formula a0_n3_rs27_sat_cost = ( (A0_COST <= N3_RS27_COST) ? true:false);
formula a0_n3_rs27_sat_avail = N3_RS27_AVAIL;
formula a0_n3_rs27_sat_all = a0_n3_rs27_sat_avail;

//=====Application 0, Node3 and RS28
formula a0_n3_rs28_sat_dur0 = ( (A0_DUR <= N3_RS28_DUR0) ? true:false);
formula a0_n3_rs28_sat_dur1 = ( (A0_DUR <= N3_RS28_DUR1) ? true:false);
formula a0_n3_rs28_sat_rel0 = ( (A0_DUR <= N3_RS28_REL0) ? true:false);
formula a0_n3_rs28_sat_rel1 = ( (A0_DUR <= N3_RS28_REL1) ? true:false);
formula a0_n3_rs28_sat_cost = ( (A0_COST <= N3_RS28_COST) ? true:false);
formula a0_n3_rs28_sat_avail = N3_RS28_AVAIL;
formula a0_n3_rs28_sat_all = a0_n3_rs28_sat_avail;

//=====Application 0, Node3 and RS29
formula a0_n3_rs29_sat_dur0 = ( (A0_DUR <= N3_RS29_DUR0) ? true:false);
formula a0_n3_rs29_sat_dur1 = ( (A0_DUR <= N3_RS29_DUR1) ? true:false);
formula a0_n3_rs29_sat_rel0 = ( (A0_DUR <= N3_RS29_REL0) ? true:false);
formula a0_n3_rs29_sat_rel1 = ( (A0_DUR <= N3_RS29_REL1) ? true:false);
formula a0_n3_rs29_sat_cost = ( (A0_COST <= N3_RS29_COST) ? true:false);
formula a0_n3_rs29_sat_avail = N3_RS29_AVAIL;
formula a0_n3_rs29_sat_all = a0_n3_rs29_sat_avail;


//=========Utility-based Decision Making=======
//get the cost of selected node..
formula n0_rs_cost =( n0 = 0 ? N0_RS0_COST :( n0 = 1 ? N0_RS1_COST :( n0 = 2 ? N0_RS2_COST :( n0 = 3 ? N0_RS3_COST :( n0 = 4 ? N0_RS4_COST :( n0 = 5 ? N0_RS5_COST :( n0 = 6 ? N0_RS6_COST :( n0 = 7 ? N0_RS7_COST :( n0 = 8 ? N0_RS8_COST :( n0 = 9 ? N0_RS9_COST :( n0 = 10 ? N0_RS10_COST :( n0 = 11 ? N0_RS11_COST :( n0 = 12 ? N0_RS12_COST :( n0 = 13 ? N0_RS13_COST :( n0 = 14 ? N0_RS14_COST :( n0 = 15 ? N0_RS15_COST :( n0 = 16 ? N0_RS16_COST :( n0 = 17 ? N0_RS17_COST :( n0 = 18 ? N0_RS18_COST :( n0 = 19 ? N0_RS19_COST :( n0 = 20 ? N0_RS20_COST :( n0 = 21 ? N0_RS21_COST :( n0 = 22 ? N0_RS22_COST :( n0 = 23 ? N0_RS23_COST :( n0 = 24 ? N0_RS24_COST :( n0 = 25 ? N0_RS25_COST :( n0 = 26 ? N0_RS26_COST :( n0 = 27 ? N0_RS27_COST :( n0 = 28 ? N0_RS28_COST :( n0 = 29 ? N0_RS29_COST :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n0_mx_cost = max(N0_RS0_COST,N0_RS1_COST,N0_RS2_COST,N0_RS3_COST,N0_RS4_COST,N0_RS5_COST,N0_RS6_COST,N0_RS7_COST,N0_RS8_COST,N0_RS9_COST,N0_RS10_COST,N0_RS11_COST,N0_RS12_COST,N0_RS13_COST,N0_RS14_COST,N0_RS15_COST,N0_RS16_COST,N0_RS17_COST,N0_RS18_COST,N0_RS19_COST,N0_RS20_COST,N0_RS21_COST,N0_RS22_COST,N0_RS23_COST,N0_RS24_COST,N0_RS25_COST,N0_RS26_COST,N0_RS27_COST,N0_RS28_COST,N0_RS29_COST);
formula n0_mn_cost = min(N0_RS0_COST,N0_RS1_COST,N0_RS2_COST,N0_RS3_COST,N0_RS4_COST,N0_RS5_COST,N0_RS6_COST,N0_RS7_COST,N0_RS8_COST,N0_RS9_COST,N0_RS10_COST,N0_RS11_COST,N0_RS12_COST,N0_RS13_COST,N0_RS14_COST,N0_RS15_COST,N0_RS16_COST,N0_RS17_COST,N0_RS18_COST,N0_RS19_COST,N0_RS20_COST,N0_RS21_COST,N0_RS22_COST,N0_RS23_COST,N0_RS24_COST,N0_RS25_COST,N0_RS26_COST,N0_RS27_COST,N0_RS28_COST,N0_RS29_COST);
formula n0_uv_cost = (n0_mx_cost - n0_rs_cost) / (n0_mx_cost - n0_mn_cost);

//get the duration of selected node..
formula n0_rs_dur0=( (n0 = 0 & n0ev = 0) ? N0_RS0_DUR0 :( (n0 = 1 & n0ev = 0) ? N0_RS1_DUR0 :( (n0 = 2 & n0ev = 0) ? N0_RS2_DUR0 :( (n0 = 3 & n0ev = 0) ? N0_RS3_DUR0 :( (n0 = 4 & n0ev = 0) ? N0_RS4_DUR0 :( (n0 = 5 & n0ev = 0) ? N0_RS5_DUR0 :( (n0 = 6 & n0ev = 0) ? N0_RS6_DUR0 :( (n0 = 7 & n0ev = 0) ? N0_RS7_DUR0 :( (n0 = 8 & n0ev = 0) ? N0_RS8_DUR0 :( (n0 = 9 & n0ev = 0) ? N0_RS9_DUR0 :( (n0 = 10 & n0ev = 0) ? N0_RS10_DUR0 :( (n0 = 11 & n0ev = 0) ? N0_RS11_DUR0 :( (n0 = 12 & n0ev = 0) ? N0_RS12_DUR0 :( (n0 = 13 & n0ev = 0) ? N0_RS13_DUR0 :( (n0 = 14 & n0ev = 0) ? N0_RS14_DUR0 :( (n0 = 15 & n0ev = 0) ? N0_RS15_DUR0 :( (n0 = 16 & n0ev = 0) ? N0_RS16_DUR0 :( (n0 = 17 & n0ev = 0) ? N0_RS17_DUR0 :( (n0 = 18 & n0ev = 0) ? N0_RS18_DUR0 :( (n0 = 19 & n0ev = 0) ? N0_RS19_DUR0 :( (n0 = 20 & n0ev = 0) ? N0_RS20_DUR0 :( (n0 = 21 & n0ev = 0) ? N0_RS21_DUR0 :( (n0 = 22 & n0ev = 0) ? N0_RS22_DUR0 :( (n0 = 23 & n0ev = 0) ? N0_RS23_DUR0 :( (n0 = 24 & n0ev = 0) ? N0_RS24_DUR0 :( (n0 = 25 & n0ev = 0) ? N0_RS25_DUR0 :( (n0 = 26 & n0ev = 0) ? N0_RS26_DUR0 :( (n0 = 27 & n0ev = 0) ? N0_RS27_DUR0 :( (n0 = 28 & n0ev = 0) ? N0_RS28_DUR0 :( (n0 = 29 & n0ev = 0) ? N0_RS29_DUR0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n0_mx_dur0 = max(N0_RS0_DUR0,N0_RS1_DUR0,N0_RS2_DUR0,N0_RS3_DUR0,N0_RS4_DUR0,N0_RS5_DUR0,N0_RS6_DUR0,N0_RS7_DUR0,N0_RS8_DUR0,N0_RS9_DUR0,N0_RS10_DUR0,N0_RS11_DUR0,N0_RS12_DUR0,N0_RS13_DUR0,N0_RS14_DUR0,N0_RS15_DUR0,N0_RS16_DUR0,N0_RS17_DUR0,N0_RS18_DUR0,N0_RS19_DUR0,N0_RS20_DUR0,N0_RS21_DUR0,N0_RS22_DUR0,N0_RS23_DUR0,N0_RS24_DUR0,N0_RS25_DUR0,N0_RS26_DUR0,N0_RS27_DUR0,N0_RS28_DUR0,N0_RS29_DUR0);
formula n0_mn_dur0 = min(N0_RS0_DUR0,N0_RS1_DUR0,N0_RS2_DUR0,N0_RS3_DUR0,N0_RS4_DUR0,N0_RS5_DUR0,N0_RS6_DUR0,N0_RS7_DUR0,N0_RS8_DUR0,N0_RS9_DUR0,N0_RS10_DUR0,N0_RS11_DUR0,N0_RS12_DUR0,N0_RS13_DUR0,N0_RS14_DUR0,N0_RS15_DUR0,N0_RS16_DUR0,N0_RS17_DUR0,N0_RS18_DUR0,N0_RS19_DUR0,N0_RS20_DUR0,N0_RS21_DUR0,N0_RS22_DUR0,N0_RS23_DUR0,N0_RS24_DUR0,N0_RS25_DUR0,N0_RS26_DUR0,N0_RS27_DUR0,N0_RS28_DUR0,N0_RS29_DUR0);
formula n0_uv_dur0 = (n0_mx_dur0 - n0_rs_dur0) / (n0_mx_dur0 - n0_mn_dur0);

formula n0_rs_dur1=( (n0 = 0 & n0ev = 1) ? N0_RS0_DUR1 :( (n0 = 1 & n0ev = 1) ? N0_RS1_DUR1 :( (n0 = 2 & n0ev = 1) ? N0_RS2_DUR1 :( (n0 = 3 & n0ev = 1) ? N0_RS3_DUR1 :( (n0 = 4 & n0ev = 1) ? N0_RS4_DUR1 :( (n0 = 5 & n0ev = 1) ? N0_RS5_DUR1 :( (n0 = 6 & n0ev = 1) ? N0_RS6_DUR1 :( (n0 = 7 & n0ev = 1) ? N0_RS7_DUR1 :( (n0 = 8 & n0ev = 1) ? N0_RS8_DUR1 :( (n0 = 9 & n0ev = 1) ? N0_RS9_DUR1 :( (n0 = 10 & n0ev = 1) ? N0_RS10_DUR1 :( (n0 = 11 & n0ev = 1) ? N0_RS11_DUR1 :( (n0 = 12 & n0ev = 1) ? N0_RS12_DUR1 :( (n0 = 13 & n0ev = 1) ? N0_RS13_DUR1 :( (n0 = 14 & n0ev = 1) ? N0_RS14_DUR1 :( (n0 = 15 & n0ev = 1) ? N0_RS15_DUR1 :( (n0 = 16 & n0ev = 1) ? N0_RS16_DUR1 :( (n0 = 17 & n0ev = 1) ? N0_RS17_DUR1 :( (n0 = 18 & n0ev = 1) ? N0_RS18_DUR1 :( (n0 = 19 & n0ev = 1) ? N0_RS19_DUR1 :( (n0 = 20 & n0ev = 1) ? N0_RS20_DUR1 :( (n0 = 21 & n0ev = 1) ? N0_RS21_DUR1 :( (n0 = 22 & n0ev = 1) ? N0_RS22_DUR1 :( (n0 = 23 & n0ev = 1) ? N0_RS23_DUR1 :( (n0 = 24 & n0ev = 1) ? N0_RS24_DUR1 :( (n0 = 25 & n0ev = 1) ? N0_RS25_DUR1 :( (n0 = 26 & n0ev = 1) ? N0_RS26_DUR1 :( (n0 = 27 & n0ev = 1) ? N0_RS27_DUR1 :( (n0 = 28 & n0ev = 1) ? N0_RS28_DUR1 :( (n0 = 29 & n0ev = 1) ? N0_RS29_DUR1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n0_mx_dur1 = max(N0_RS0_DUR1,N0_RS1_DUR1,N0_RS2_DUR1,N0_RS3_DUR1,N0_RS4_DUR1,N0_RS5_DUR1,N0_RS6_DUR1,N0_RS7_DUR1,N0_RS8_DUR1,N0_RS9_DUR1,N0_RS10_DUR1,N0_RS11_DUR1,N0_RS12_DUR1,N0_RS13_DUR1,N0_RS14_DUR1,N0_RS15_DUR1,N0_RS16_DUR1,N0_RS17_DUR1,N0_RS18_DUR1,N0_RS19_DUR1,N0_RS20_DUR1,N0_RS21_DUR1,N0_RS22_DUR1,N0_RS23_DUR1,N0_RS24_DUR1,N0_RS25_DUR1,N0_RS26_DUR1,N0_RS27_DUR1,N0_RS28_DUR1,N0_RS29_DUR1);
formula n0_mn_dur1 = min(N0_RS0_DUR1,N0_RS1_DUR1,N0_RS2_DUR1,N0_RS3_DUR1,N0_RS4_DUR1,N0_RS5_DUR1,N0_RS6_DUR1,N0_RS7_DUR1,N0_RS8_DUR1,N0_RS9_DUR1,N0_RS10_DUR1,N0_RS11_DUR1,N0_RS12_DUR1,N0_RS13_DUR1,N0_RS14_DUR1,N0_RS15_DUR1,N0_RS16_DUR1,N0_RS17_DUR1,N0_RS18_DUR1,N0_RS19_DUR1,N0_RS20_DUR1,N0_RS21_DUR1,N0_RS22_DUR1,N0_RS23_DUR1,N0_RS24_DUR1,N0_RS25_DUR1,N0_RS26_DUR1,N0_RS27_DUR1,N0_RS28_DUR1,N0_RS29_DUR1);
formula n0_uv_dur1 = (n0_mx_dur1 - n0_rs_dur1) / (n0_mx_dur1 - n0_mn_dur1);

//get the reliability of selected node..
formula n0_rs_rel0=( (n0 = 0 & n0ev = 0) ? N0_RS0_REL0 :( (n0 = 1 & n0ev = 0) ? N0_RS1_REL0 :( (n0 = 2 & n0ev = 0) ? N0_RS2_REL0 :( (n0 = 3 & n0ev = 0) ? N0_RS3_REL0 :( (n0 = 4 & n0ev = 0) ? N0_RS4_REL0 :( (n0 = 5 & n0ev = 0) ? N0_RS5_REL0 :( (n0 = 6 & n0ev = 0) ? N0_RS6_REL0 :( (n0 = 7 & n0ev = 0) ? N0_RS7_REL0 :( (n0 = 8 & n0ev = 0) ? N0_RS8_REL0 :( (n0 = 9 & n0ev = 0) ? N0_RS9_REL0 :( (n0 = 10 & n0ev = 0) ? N0_RS10_REL0 :( (n0 = 11 & n0ev = 0) ? N0_RS11_REL0 :( (n0 = 12 & n0ev = 0) ? N0_RS12_REL0 :( (n0 = 13 & n0ev = 0) ? N0_RS13_REL0 :( (n0 = 14 & n0ev = 0) ? N0_RS14_REL0 :( (n0 = 15 & n0ev = 0) ? N0_RS15_REL0 :( (n0 = 16 & n0ev = 0) ? N0_RS16_REL0 :( (n0 = 17 & n0ev = 0) ? N0_RS17_REL0 :( (n0 = 18 & n0ev = 0) ? N0_RS18_REL0 :( (n0 = 19 & n0ev = 0) ? N0_RS19_REL0 :( (n0 = 20 & n0ev = 0) ? N0_RS20_REL0 :( (n0 = 21 & n0ev = 0) ? N0_RS21_REL0 :( (n0 = 22 & n0ev = 0) ? N0_RS22_REL0 :( (n0 = 23 & n0ev = 0) ? N0_RS23_REL0 :( (n0 = 24 & n0ev = 0) ? N0_RS24_REL0 :( (n0 = 25 & n0ev = 0) ? N0_RS25_REL0 :( (n0 = 26 & n0ev = 0) ? N0_RS26_REL0 :( (n0 = 27 & n0ev = 0) ? N0_RS27_REL0 :( (n0 = 28 & n0ev = 0) ? N0_RS28_REL0 :( (n0 = 29 & n0ev = 0) ? N0_RS29_REL0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n0_mx_rel0 = max(N0_RS0_REL0,N0_RS1_REL0,N0_RS2_REL0,N0_RS3_REL0,N0_RS4_REL0,N0_RS5_REL0,N0_RS6_REL0,N0_RS7_REL0,N0_RS8_REL0,N0_RS9_REL0,N0_RS10_REL0,N0_RS11_REL0,N0_RS12_REL0,N0_RS13_REL0,N0_RS14_REL0,N0_RS15_REL0,N0_RS16_REL0,N0_RS17_REL0,N0_RS18_REL0,N0_RS19_REL0,N0_RS20_REL0,N0_RS21_REL0,N0_RS22_REL0,N0_RS23_REL0,N0_RS24_REL0,N0_RS25_REL0,N0_RS26_REL0,N0_RS27_REL0,N0_RS28_REL0,N0_RS29_REL0);
formula n0_mn_rel0 = min(N0_RS0_REL0,N0_RS1_REL0,N0_RS2_REL0,N0_RS3_REL0,N0_RS4_REL0,N0_RS5_REL0,N0_RS6_REL0,N0_RS7_REL0,N0_RS8_REL0,N0_RS9_REL0,N0_RS10_REL0,N0_RS11_REL0,N0_RS12_REL0,N0_RS13_REL0,N0_RS14_REL0,N0_RS15_REL0,N0_RS16_REL0,N0_RS17_REL0,N0_RS18_REL0,N0_RS19_REL0,N0_RS20_REL0,N0_RS21_REL0,N0_RS22_REL0,N0_RS23_REL0,N0_RS24_REL0,N0_RS25_REL0,N0_RS26_REL0,N0_RS27_REL0,N0_RS28_REL0,N0_RS29_REL0);
formula n0_uv_rel0 = (n0_rs_rel0 - n0_mx_rel0) / (n0_mx_rel0 - n0_mn_rel0);

formula n0_rs_rel1=( (n0 = 0 & n0ev = 1) ? N0_RS0_REL1 :( (n0 = 1 & n0ev = 1) ? N0_RS1_REL1 :( (n0 = 2 & n0ev = 1) ? N0_RS2_REL1 :( (n0 = 3 & n0ev = 1) ? N0_RS3_REL1 :( (n0 = 4 & n0ev = 1) ? N0_RS4_REL1 :( (n0 = 5 & n0ev = 1) ? N0_RS5_REL1 :( (n0 = 6 & n0ev = 1) ? N0_RS6_REL1 :( (n0 = 7 & n0ev = 1) ? N0_RS7_REL1 :( (n0 = 8 & n0ev = 1) ? N0_RS8_REL1 :( (n0 = 9 & n0ev = 1) ? N0_RS9_REL1 :( (n0 = 10 & n0ev = 1) ? N0_RS10_REL1 :( (n0 = 11 & n0ev = 1) ? N0_RS11_REL1 :( (n0 = 12 & n0ev = 1) ? N0_RS12_REL1 :( (n0 = 13 & n0ev = 1) ? N0_RS13_REL1 :( (n0 = 14 & n0ev = 1) ? N0_RS14_REL1 :( (n0 = 15 & n0ev = 1) ? N0_RS15_REL1 :( (n0 = 16 & n0ev = 1) ? N0_RS16_REL1 :( (n0 = 17 & n0ev = 1) ? N0_RS17_REL1 :( (n0 = 18 & n0ev = 1) ? N0_RS18_REL1 :( (n0 = 19 & n0ev = 1) ? N0_RS19_REL1 :( (n0 = 20 & n0ev = 1) ? N0_RS20_REL1 :( (n0 = 21 & n0ev = 1) ? N0_RS21_REL1 :( (n0 = 22 & n0ev = 1) ? N0_RS22_REL1 :( (n0 = 23 & n0ev = 1) ? N0_RS23_REL1 :( (n0 = 24 & n0ev = 1) ? N0_RS24_REL1 :( (n0 = 25 & n0ev = 1) ? N0_RS25_REL1 :( (n0 = 26 & n0ev = 1) ? N0_RS26_REL1 :( (n0 = 27 & n0ev = 1) ? N0_RS27_REL1 :( (n0 = 28 & n0ev = 1) ? N0_RS28_REL1 :( (n0 = 29 & n0ev = 1) ? N0_RS29_REL1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n0_mx_rel1 = max(N0_RS0_REL1,N0_RS1_REL1,N0_RS2_REL1,N0_RS3_REL1,N0_RS4_REL1,N0_RS5_REL1,N0_RS6_REL1,N0_RS7_REL1,N0_RS8_REL1,N0_RS9_REL1,N0_RS10_REL1,N0_RS11_REL1,N0_RS12_REL1,N0_RS13_REL1,N0_RS14_REL1,N0_RS15_REL1,N0_RS16_REL1,N0_RS17_REL1,N0_RS18_REL1,N0_RS19_REL1,N0_RS20_REL1,N0_RS21_REL1,N0_RS22_REL1,N0_RS23_REL1,N0_RS24_REL1,N0_RS25_REL1,N0_RS26_REL1,N0_RS27_REL1,N0_RS28_REL1,N0_RS29_REL1);
formula n0_mn_rel1 = min(N0_RS0_REL1,N0_RS1_REL1,N0_RS2_REL1,N0_RS3_REL1,N0_RS4_REL1,N0_RS5_REL1,N0_RS6_REL1,N0_RS7_REL1,N0_RS8_REL1,N0_RS9_REL1,N0_RS10_REL1,N0_RS11_REL1,N0_RS12_REL1,N0_RS13_REL1,N0_RS14_REL1,N0_RS15_REL1,N0_RS16_REL1,N0_RS17_REL1,N0_RS18_REL1,N0_RS19_REL1,N0_RS20_REL1,N0_RS21_REL1,N0_RS22_REL1,N0_RS23_REL1,N0_RS24_REL1,N0_RS25_REL1,N0_RS26_REL1,N0_RS27_REL1,N0_RS28_REL1,N0_RS29_REL1);
formula n0_uv_rel1 = (n0_rs_rel1 - n0_mx_rel1) / (n0_mx_rel1 - n0_mn_rel1);


//Preventing from non-evaluated problem..
formula n0_ut_cost = (n0_uv_cost > 0.0 ? n0_uv_cost: 0.0);
formula n0_ut_dur0 = (n0_uv_dur0 > 0.0 ? n0_uv_dur0: 0.0);
formula n0_ut_dur1 = (n0_uv_dur1 > 0.0 ? n0_uv_dur1: 0.0);
formula n0_ut_rel0 = (n0_uv_rel0 > 0.0 ? n0_uv_rel0: 0.0);
formula n0_ut_rel1 = (n0_uv_rel1 > 0.0 ? n0_uv_rel1: 0.0);

//Compute the overall utility value..
formula n0_ut_all = (n0ev=0 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur0 * A0_WG_DUR + n0_ut_rel0 * A0_WG_REL):(n0ev=1 ? (n0_ut_cost * A0_WG_COST + n0_ut_dur1 * A0_WG_DUR + n0_ut_rel1 * A0_WG_REL):0.0));

//get the cost of selected node..
formula n1_rs_cost =( n1 = 0 ? N1_RS0_COST :( n1 = 1 ? N1_RS1_COST :( n1 = 2 ? N1_RS2_COST :( n1 = 3 ? N1_RS3_COST :( n1 = 4 ? N1_RS4_COST :( n1 = 5 ? N1_RS5_COST :( n1 = 6 ? N1_RS6_COST :( n1 = 7 ? N1_RS7_COST :( n1 = 8 ? N1_RS8_COST :( n1 = 9 ? N1_RS9_COST :( n1 = 10 ? N1_RS10_COST :( n1 = 11 ? N1_RS11_COST :( n1 = 12 ? N1_RS12_COST :( n1 = 13 ? N1_RS13_COST :( n1 = 14 ? N1_RS14_COST :( n1 = 15 ? N1_RS15_COST :( n1 = 16 ? N1_RS16_COST :( n1 = 17 ? N1_RS17_COST :( n1 = 18 ? N1_RS18_COST :( n1 = 19 ? N1_RS19_COST :( n1 = 20 ? N1_RS20_COST :( n1 = 21 ? N1_RS21_COST :( n1 = 22 ? N1_RS22_COST :( n1 = 23 ? N1_RS23_COST :( n1 = 24 ? N1_RS24_COST :( n1 = 25 ? N1_RS25_COST :( n1 = 26 ? N1_RS26_COST :( n1 = 27 ? N1_RS27_COST :( n1 = 28 ? N1_RS28_COST :( n1 = 29 ? N1_RS29_COST :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n1_mx_cost = max(N1_RS0_COST,N1_RS1_COST,N1_RS2_COST,N1_RS3_COST,N1_RS4_COST,N1_RS5_COST,N1_RS6_COST,N1_RS7_COST,N1_RS8_COST,N1_RS9_COST,N1_RS10_COST,N1_RS11_COST,N1_RS12_COST,N1_RS13_COST,N1_RS14_COST,N1_RS15_COST,N1_RS16_COST,N1_RS17_COST,N1_RS18_COST,N1_RS19_COST,N1_RS20_COST,N1_RS21_COST,N1_RS22_COST,N1_RS23_COST,N1_RS24_COST,N1_RS25_COST,N1_RS26_COST,N1_RS27_COST,N1_RS28_COST,N1_RS29_COST);
formula n1_mn_cost = min(N1_RS0_COST,N1_RS1_COST,N1_RS2_COST,N1_RS3_COST,N1_RS4_COST,N1_RS5_COST,N1_RS6_COST,N1_RS7_COST,N1_RS8_COST,N1_RS9_COST,N1_RS10_COST,N1_RS11_COST,N1_RS12_COST,N1_RS13_COST,N1_RS14_COST,N1_RS15_COST,N1_RS16_COST,N1_RS17_COST,N1_RS18_COST,N1_RS19_COST,N1_RS20_COST,N1_RS21_COST,N1_RS22_COST,N1_RS23_COST,N1_RS24_COST,N1_RS25_COST,N1_RS26_COST,N1_RS27_COST,N1_RS28_COST,N1_RS29_COST);
formula n1_uv_cost = (n1_mx_cost - n1_rs_cost) / (n1_mx_cost - n1_mn_cost);

//get the duration of selected node..
formula n1_rs_dur0=( (n1 = 0 & n1ev = 0) ? N1_RS0_DUR0 :( (n1 = 1 & n1ev = 0) ? N1_RS1_DUR0 :( (n1 = 2 & n1ev = 0) ? N1_RS2_DUR0 :( (n1 = 3 & n1ev = 0) ? N1_RS3_DUR0 :( (n1 = 4 & n1ev = 0) ? N1_RS4_DUR0 :( (n1 = 5 & n1ev = 0) ? N1_RS5_DUR0 :( (n1 = 6 & n1ev = 0) ? N1_RS6_DUR0 :( (n1 = 7 & n1ev = 0) ? N1_RS7_DUR0 :( (n1 = 8 & n1ev = 0) ? N1_RS8_DUR0 :( (n1 = 9 & n1ev = 0) ? N1_RS9_DUR0 :( (n1 = 10 & n1ev = 0) ? N1_RS10_DUR0 :( (n1 = 11 & n1ev = 0) ? N1_RS11_DUR0 :( (n1 = 12 & n1ev = 0) ? N1_RS12_DUR0 :( (n1 = 13 & n1ev = 0) ? N1_RS13_DUR0 :( (n1 = 14 & n1ev = 0) ? N1_RS14_DUR0 :( (n1 = 15 & n1ev = 0) ? N1_RS15_DUR0 :( (n1 = 16 & n1ev = 0) ? N1_RS16_DUR0 :( (n1 = 17 & n1ev = 0) ? N1_RS17_DUR0 :( (n1 = 18 & n1ev = 0) ? N1_RS18_DUR0 :( (n1 = 19 & n1ev = 0) ? N1_RS19_DUR0 :( (n1 = 20 & n1ev = 0) ? N1_RS20_DUR0 :( (n1 = 21 & n1ev = 0) ? N1_RS21_DUR0 :( (n1 = 22 & n1ev = 0) ? N1_RS22_DUR0 :( (n1 = 23 & n1ev = 0) ? N1_RS23_DUR0 :( (n1 = 24 & n1ev = 0) ? N1_RS24_DUR0 :( (n1 = 25 & n1ev = 0) ? N1_RS25_DUR0 :( (n1 = 26 & n1ev = 0) ? N1_RS26_DUR0 :( (n1 = 27 & n1ev = 0) ? N1_RS27_DUR0 :( (n1 = 28 & n1ev = 0) ? N1_RS28_DUR0 :( (n1 = 29 & n1ev = 0) ? N1_RS29_DUR0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n1_mx_dur0 = max(N1_RS0_DUR0,N1_RS1_DUR0,N1_RS2_DUR0,N1_RS3_DUR0,N1_RS4_DUR0,N1_RS5_DUR0,N1_RS6_DUR0,N1_RS7_DUR0,N1_RS8_DUR0,N1_RS9_DUR0,N1_RS10_DUR0,N1_RS11_DUR0,N1_RS12_DUR0,N1_RS13_DUR0,N1_RS14_DUR0,N1_RS15_DUR0,N1_RS16_DUR0,N1_RS17_DUR0,N1_RS18_DUR0,N1_RS19_DUR0,N1_RS20_DUR0,N1_RS21_DUR0,N1_RS22_DUR0,N1_RS23_DUR0,N1_RS24_DUR0,N1_RS25_DUR0,N1_RS26_DUR0,N1_RS27_DUR0,N1_RS28_DUR0,N1_RS29_DUR0);
formula n1_mn_dur0 = min(N1_RS0_DUR0,N1_RS1_DUR0,N1_RS2_DUR0,N1_RS3_DUR0,N1_RS4_DUR0,N1_RS5_DUR0,N1_RS6_DUR0,N1_RS7_DUR0,N1_RS8_DUR0,N1_RS9_DUR0,N1_RS10_DUR0,N1_RS11_DUR0,N1_RS12_DUR0,N1_RS13_DUR0,N1_RS14_DUR0,N1_RS15_DUR0,N1_RS16_DUR0,N1_RS17_DUR0,N1_RS18_DUR0,N1_RS19_DUR0,N1_RS20_DUR0,N1_RS21_DUR0,N1_RS22_DUR0,N1_RS23_DUR0,N1_RS24_DUR0,N1_RS25_DUR0,N1_RS26_DUR0,N1_RS27_DUR0,N1_RS28_DUR0,N1_RS29_DUR0);
formula n1_uv_dur0 = (n1_mx_dur0 - n1_rs_dur0) / (n1_mx_dur0 - n1_mn_dur0);

formula n1_rs_dur1=( (n1 = 0 & n1ev = 1) ? N1_RS0_DUR1 :( (n1 = 1 & n1ev = 1) ? N1_RS1_DUR1 :( (n1 = 2 & n1ev = 1) ? N1_RS2_DUR1 :( (n1 = 3 & n1ev = 1) ? N1_RS3_DUR1 :( (n1 = 4 & n1ev = 1) ? N1_RS4_DUR1 :( (n1 = 5 & n1ev = 1) ? N1_RS5_DUR1 :( (n1 = 6 & n1ev = 1) ? N1_RS6_DUR1 :( (n1 = 7 & n1ev = 1) ? N1_RS7_DUR1 :( (n1 = 8 & n1ev = 1) ? N1_RS8_DUR1 :( (n1 = 9 & n1ev = 1) ? N1_RS9_DUR1 :( (n1 = 10 & n1ev = 1) ? N1_RS10_DUR1 :( (n1 = 11 & n1ev = 1) ? N1_RS11_DUR1 :( (n1 = 12 & n1ev = 1) ? N1_RS12_DUR1 :( (n1 = 13 & n1ev = 1) ? N1_RS13_DUR1 :( (n1 = 14 & n1ev = 1) ? N1_RS14_DUR1 :( (n1 = 15 & n1ev = 1) ? N1_RS15_DUR1 :( (n1 = 16 & n1ev = 1) ? N1_RS16_DUR1 :( (n1 = 17 & n1ev = 1) ? N1_RS17_DUR1 :( (n1 = 18 & n1ev = 1) ? N1_RS18_DUR1 :( (n1 = 19 & n1ev = 1) ? N1_RS19_DUR1 :( (n1 = 20 & n1ev = 1) ? N1_RS20_DUR1 :( (n1 = 21 & n1ev = 1) ? N1_RS21_DUR1 :( (n1 = 22 & n1ev = 1) ? N1_RS22_DUR1 :( (n1 = 23 & n1ev = 1) ? N1_RS23_DUR1 :( (n1 = 24 & n1ev = 1) ? N1_RS24_DUR1 :( (n1 = 25 & n1ev = 1) ? N1_RS25_DUR1 :( (n1 = 26 & n1ev = 1) ? N1_RS26_DUR1 :( (n1 = 27 & n1ev = 1) ? N1_RS27_DUR1 :( (n1 = 28 & n1ev = 1) ? N1_RS28_DUR1 :( (n1 = 29 & n1ev = 1) ? N1_RS29_DUR1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n1_mx_dur1 = max(N1_RS0_DUR1,N1_RS1_DUR1,N1_RS2_DUR1,N1_RS3_DUR1,N1_RS4_DUR1,N1_RS5_DUR1,N1_RS6_DUR1,N1_RS7_DUR1,N1_RS8_DUR1,N1_RS9_DUR1,N1_RS10_DUR1,N1_RS11_DUR1,N1_RS12_DUR1,N1_RS13_DUR1,N1_RS14_DUR1,N1_RS15_DUR1,N1_RS16_DUR1,N1_RS17_DUR1,N1_RS18_DUR1,N1_RS19_DUR1,N1_RS20_DUR1,N1_RS21_DUR1,N1_RS22_DUR1,N1_RS23_DUR1,N1_RS24_DUR1,N1_RS25_DUR1,N1_RS26_DUR1,N1_RS27_DUR1,N1_RS28_DUR1,N1_RS29_DUR1);
formula n1_mn_dur1 = min(N1_RS0_DUR1,N1_RS1_DUR1,N1_RS2_DUR1,N1_RS3_DUR1,N1_RS4_DUR1,N1_RS5_DUR1,N1_RS6_DUR1,N1_RS7_DUR1,N1_RS8_DUR1,N1_RS9_DUR1,N1_RS10_DUR1,N1_RS11_DUR1,N1_RS12_DUR1,N1_RS13_DUR1,N1_RS14_DUR1,N1_RS15_DUR1,N1_RS16_DUR1,N1_RS17_DUR1,N1_RS18_DUR1,N1_RS19_DUR1,N1_RS20_DUR1,N1_RS21_DUR1,N1_RS22_DUR1,N1_RS23_DUR1,N1_RS24_DUR1,N1_RS25_DUR1,N1_RS26_DUR1,N1_RS27_DUR1,N1_RS28_DUR1,N1_RS29_DUR1);
formula n1_uv_dur1 = (n1_mx_dur1 - n1_rs_dur1) / (n1_mx_dur1 - n1_mn_dur1);

//get the reliability of selected node..
formula n1_rs_rel0=( (n1 = 0 & n1ev = 0) ? N1_RS0_REL0 :( (n1 = 1 & n1ev = 0) ? N1_RS1_REL0 :( (n1 = 2 & n1ev = 0) ? N1_RS2_REL0 :( (n1 = 3 & n1ev = 0) ? N1_RS3_REL0 :( (n1 = 4 & n1ev = 0) ? N1_RS4_REL0 :( (n1 = 5 & n1ev = 0) ? N1_RS5_REL0 :( (n1 = 6 & n1ev = 0) ? N1_RS6_REL0 :( (n1 = 7 & n1ev = 0) ? N1_RS7_REL0 :( (n1 = 8 & n1ev = 0) ? N1_RS8_REL0 :( (n1 = 9 & n1ev = 0) ? N1_RS9_REL0 :( (n1 = 10 & n1ev = 0) ? N1_RS10_REL0 :( (n1 = 11 & n1ev = 0) ? N1_RS11_REL0 :( (n1 = 12 & n1ev = 0) ? N1_RS12_REL0 :( (n1 = 13 & n1ev = 0) ? N1_RS13_REL0 :( (n1 = 14 & n1ev = 0) ? N1_RS14_REL0 :( (n1 = 15 & n1ev = 0) ? N1_RS15_REL0 :( (n1 = 16 & n1ev = 0) ? N1_RS16_REL0 :( (n1 = 17 & n1ev = 0) ? N1_RS17_REL0 :( (n1 = 18 & n1ev = 0) ? N1_RS18_REL0 :( (n1 = 19 & n1ev = 0) ? N1_RS19_REL0 :( (n1 = 20 & n1ev = 0) ? N1_RS20_REL0 :( (n1 = 21 & n1ev = 0) ? N1_RS21_REL0 :( (n1 = 22 & n1ev = 0) ? N1_RS22_REL0 :( (n1 = 23 & n1ev = 0) ? N1_RS23_REL0 :( (n1 = 24 & n1ev = 0) ? N1_RS24_REL0 :( (n1 = 25 & n1ev = 0) ? N1_RS25_REL0 :( (n1 = 26 & n1ev = 0) ? N1_RS26_REL0 :( (n1 = 27 & n1ev = 0) ? N1_RS27_REL0 :( (n1 = 28 & n1ev = 0) ? N1_RS28_REL0 :( (n1 = 29 & n1ev = 0) ? N1_RS29_REL0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n1_mx_rel0 = max(N1_RS0_REL0,N1_RS1_REL0,N1_RS2_REL0,N1_RS3_REL0,N1_RS4_REL0,N1_RS5_REL0,N1_RS6_REL0,N1_RS7_REL0,N1_RS8_REL0,N1_RS9_REL0,N1_RS10_REL0,N1_RS11_REL0,N1_RS12_REL0,N1_RS13_REL0,N1_RS14_REL0,N1_RS15_REL0,N1_RS16_REL0,N1_RS17_REL0,N1_RS18_REL0,N1_RS19_REL0,N1_RS20_REL0,N1_RS21_REL0,N1_RS22_REL0,N1_RS23_REL0,N1_RS24_REL0,N1_RS25_REL0,N1_RS26_REL0,N1_RS27_REL0,N1_RS28_REL0,N1_RS29_REL0);
formula n1_mn_rel0 = min(N1_RS0_REL0,N1_RS1_REL0,N1_RS2_REL0,N1_RS3_REL0,N1_RS4_REL0,N1_RS5_REL0,N1_RS6_REL0,N1_RS7_REL0,N1_RS8_REL0,N1_RS9_REL0,N1_RS10_REL0,N1_RS11_REL0,N1_RS12_REL0,N1_RS13_REL0,N1_RS14_REL0,N1_RS15_REL0,N1_RS16_REL0,N1_RS17_REL0,N1_RS18_REL0,N1_RS19_REL0,N1_RS20_REL0,N1_RS21_REL0,N1_RS22_REL0,N1_RS23_REL0,N1_RS24_REL0,N1_RS25_REL0,N1_RS26_REL0,N1_RS27_REL0,N1_RS28_REL0,N1_RS29_REL0);
formula n1_uv_rel0 = (n1_rs_rel0 - n1_mx_rel0) / (n1_mx_rel0 - n1_mn_rel0);

formula n1_rs_rel1=( (n1 = 0 & n1ev = 1) ? N1_RS0_REL1 :( (n1 = 1 & n1ev = 1) ? N1_RS1_REL1 :( (n1 = 2 & n1ev = 1) ? N1_RS2_REL1 :( (n1 = 3 & n1ev = 1) ? N1_RS3_REL1 :( (n1 = 4 & n1ev = 1) ? N1_RS4_REL1 :( (n1 = 5 & n1ev = 1) ? N1_RS5_REL1 :( (n1 = 6 & n1ev = 1) ? N1_RS6_REL1 :( (n1 = 7 & n1ev = 1) ? N1_RS7_REL1 :( (n1 = 8 & n1ev = 1) ? N1_RS8_REL1 :( (n1 = 9 & n1ev = 1) ? N1_RS9_REL1 :( (n1 = 10 & n1ev = 1) ? N1_RS10_REL1 :( (n1 = 11 & n1ev = 1) ? N1_RS11_REL1 :( (n1 = 12 & n1ev = 1) ? N1_RS12_REL1 :( (n1 = 13 & n1ev = 1) ? N1_RS13_REL1 :( (n1 = 14 & n1ev = 1) ? N1_RS14_REL1 :( (n1 = 15 & n1ev = 1) ? N1_RS15_REL1 :( (n1 = 16 & n1ev = 1) ? N1_RS16_REL1 :( (n1 = 17 & n1ev = 1) ? N1_RS17_REL1 :( (n1 = 18 & n1ev = 1) ? N1_RS18_REL1 :( (n1 = 19 & n1ev = 1) ? N1_RS19_REL1 :( (n1 = 20 & n1ev = 1) ? N1_RS20_REL1 :( (n1 = 21 & n1ev = 1) ? N1_RS21_REL1 :( (n1 = 22 & n1ev = 1) ? N1_RS22_REL1 :( (n1 = 23 & n1ev = 1) ? N1_RS23_REL1 :( (n1 = 24 & n1ev = 1) ? N1_RS24_REL1 :( (n1 = 25 & n1ev = 1) ? N1_RS25_REL1 :( (n1 = 26 & n1ev = 1) ? N1_RS26_REL1 :( (n1 = 27 & n1ev = 1) ? N1_RS27_REL1 :( (n1 = 28 & n1ev = 1) ? N1_RS28_REL1 :( (n1 = 29 & n1ev = 1) ? N1_RS29_REL1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n1_mx_rel1 = max(N1_RS0_REL1,N1_RS1_REL1,N1_RS2_REL1,N1_RS3_REL1,N1_RS4_REL1,N1_RS5_REL1,N1_RS6_REL1,N1_RS7_REL1,N1_RS8_REL1,N1_RS9_REL1,N1_RS10_REL1,N1_RS11_REL1,N1_RS12_REL1,N1_RS13_REL1,N1_RS14_REL1,N1_RS15_REL1,N1_RS16_REL1,N1_RS17_REL1,N1_RS18_REL1,N1_RS19_REL1,N1_RS20_REL1,N1_RS21_REL1,N1_RS22_REL1,N1_RS23_REL1,N1_RS24_REL1,N1_RS25_REL1,N1_RS26_REL1,N1_RS27_REL1,N1_RS28_REL1,N1_RS29_REL1);
formula n1_mn_rel1 = min(N1_RS0_REL1,N1_RS1_REL1,N1_RS2_REL1,N1_RS3_REL1,N1_RS4_REL1,N1_RS5_REL1,N1_RS6_REL1,N1_RS7_REL1,N1_RS8_REL1,N1_RS9_REL1,N1_RS10_REL1,N1_RS11_REL1,N1_RS12_REL1,N1_RS13_REL1,N1_RS14_REL1,N1_RS15_REL1,N1_RS16_REL1,N1_RS17_REL1,N1_RS18_REL1,N1_RS19_REL1,N1_RS20_REL1,N1_RS21_REL1,N1_RS22_REL1,N1_RS23_REL1,N1_RS24_REL1,N1_RS25_REL1,N1_RS26_REL1,N1_RS27_REL1,N1_RS28_REL1,N1_RS29_REL1);
formula n1_uv_rel1 = (n1_rs_rel1 - n1_mx_rel1) / (n1_mx_rel1 - n1_mn_rel1);


//Preventing from non-evaluated problem..
formula n1_ut_cost = (n1_uv_cost > 0.0 ? n1_uv_cost: 0.0);
formula n1_ut_dur0 = (n1_uv_dur0 > 0.0 ? n1_uv_dur0: 0.0);
formula n1_ut_dur1 = (n1_uv_dur1 > 0.0 ? n1_uv_dur1: 0.0);
formula n1_ut_rel0 = (n1_uv_rel0 > 0.0 ? n1_uv_rel0: 0.0);
formula n1_ut_rel1 = (n1_uv_rel1 > 0.0 ? n1_uv_rel1: 0.0);

//Compute the overall utility value..
formula n1_ut_all = (n1ev=0 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur0 * A0_WG_DUR + n1_ut_rel0 * A0_WG_REL):(n1ev=1 ? (n1_ut_cost * A0_WG_COST + n1_ut_dur1 * A0_WG_DUR + n1_ut_rel1 * A0_WG_REL):0.0));

//get the cost of selected node..
formula n2_rs_cost =( n2 = 0 ? N2_RS0_COST :( n2 = 1 ? N2_RS1_COST :( n2 = 2 ? N2_RS2_COST :( n2 = 3 ? N2_RS3_COST :( n2 = 4 ? N2_RS4_COST :( n2 = 5 ? N2_RS5_COST :( n2 = 6 ? N2_RS6_COST :( n2 = 7 ? N2_RS7_COST :( n2 = 8 ? N2_RS8_COST :( n2 = 9 ? N2_RS9_COST :( n2 = 10 ? N2_RS10_COST :( n2 = 11 ? N2_RS11_COST :( n2 = 12 ? N2_RS12_COST :( n2 = 13 ? N2_RS13_COST :( n2 = 14 ? N2_RS14_COST :( n2 = 15 ? N2_RS15_COST :( n2 = 16 ? N2_RS16_COST :( n2 = 17 ? N2_RS17_COST :( n2 = 18 ? N2_RS18_COST :( n2 = 19 ? N2_RS19_COST :( n2 = 20 ? N2_RS20_COST :( n2 = 21 ? N2_RS21_COST :( n2 = 22 ? N2_RS22_COST :( n2 = 23 ? N2_RS23_COST :( n2 = 24 ? N2_RS24_COST :( n2 = 25 ? N2_RS25_COST :( n2 = 26 ? N2_RS26_COST :( n2 = 27 ? N2_RS27_COST :( n2 = 28 ? N2_RS28_COST :( n2 = 29 ? N2_RS29_COST :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n2_mx_cost = max(N2_RS0_COST,N2_RS1_COST,N2_RS2_COST,N2_RS3_COST,N2_RS4_COST,N2_RS5_COST,N2_RS6_COST,N2_RS7_COST,N2_RS8_COST,N2_RS9_COST,N2_RS10_COST,N2_RS11_COST,N2_RS12_COST,N2_RS13_COST,N2_RS14_COST,N2_RS15_COST,N2_RS16_COST,N2_RS17_COST,N2_RS18_COST,N2_RS19_COST,N2_RS20_COST,N2_RS21_COST,N2_RS22_COST,N2_RS23_COST,N2_RS24_COST,N2_RS25_COST,N2_RS26_COST,N2_RS27_COST,N2_RS28_COST,N2_RS29_COST);
formula n2_mn_cost = min(N2_RS0_COST,N2_RS1_COST,N2_RS2_COST,N2_RS3_COST,N2_RS4_COST,N2_RS5_COST,N2_RS6_COST,N2_RS7_COST,N2_RS8_COST,N2_RS9_COST,N2_RS10_COST,N2_RS11_COST,N2_RS12_COST,N2_RS13_COST,N2_RS14_COST,N2_RS15_COST,N2_RS16_COST,N2_RS17_COST,N2_RS18_COST,N2_RS19_COST,N2_RS20_COST,N2_RS21_COST,N2_RS22_COST,N2_RS23_COST,N2_RS24_COST,N2_RS25_COST,N2_RS26_COST,N2_RS27_COST,N2_RS28_COST,N2_RS29_COST);
formula n2_uv_cost = (n2_mx_cost - n2_rs_cost) / (n2_mx_cost - n2_mn_cost);

//get the duration of selected node..
formula n2_rs_dur0=( (n2 = 0 & n2ev = 0) ? N2_RS0_DUR0 :( (n2 = 1 & n2ev = 0) ? N2_RS1_DUR0 :( (n2 = 2 & n2ev = 0) ? N2_RS2_DUR0 :( (n2 = 3 & n2ev = 0) ? N2_RS3_DUR0 :( (n2 = 4 & n2ev = 0) ? N2_RS4_DUR0 :( (n2 = 5 & n2ev = 0) ? N2_RS5_DUR0 :( (n2 = 6 & n2ev = 0) ? N2_RS6_DUR0 :( (n2 = 7 & n2ev = 0) ? N2_RS7_DUR0 :( (n2 = 8 & n2ev = 0) ? N2_RS8_DUR0 :( (n2 = 9 & n2ev = 0) ? N2_RS9_DUR0 :( (n2 = 10 & n2ev = 0) ? N2_RS10_DUR0 :( (n2 = 11 & n2ev = 0) ? N2_RS11_DUR0 :( (n2 = 12 & n2ev = 0) ? N2_RS12_DUR0 :( (n2 = 13 & n2ev = 0) ? N2_RS13_DUR0 :( (n2 = 14 & n2ev = 0) ? N2_RS14_DUR0 :( (n2 = 15 & n2ev = 0) ? N2_RS15_DUR0 :( (n2 = 16 & n2ev = 0) ? N2_RS16_DUR0 :( (n2 = 17 & n2ev = 0) ? N2_RS17_DUR0 :( (n2 = 18 & n2ev = 0) ? N2_RS18_DUR0 :( (n2 = 19 & n2ev = 0) ? N2_RS19_DUR0 :( (n2 = 20 & n2ev = 0) ? N2_RS20_DUR0 :( (n2 = 21 & n2ev = 0) ? N2_RS21_DUR0 :( (n2 = 22 & n2ev = 0) ? N2_RS22_DUR0 :( (n2 = 23 & n2ev = 0) ? N2_RS23_DUR0 :( (n2 = 24 & n2ev = 0) ? N2_RS24_DUR0 :( (n2 = 25 & n2ev = 0) ? N2_RS25_DUR0 :( (n2 = 26 & n2ev = 0) ? N2_RS26_DUR0 :( (n2 = 27 & n2ev = 0) ? N2_RS27_DUR0 :( (n2 = 28 & n2ev = 0) ? N2_RS28_DUR0 :( (n2 = 29 & n2ev = 0) ? N2_RS29_DUR0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n2_mx_dur0 = max(N2_RS0_DUR0,N2_RS1_DUR0,N2_RS2_DUR0,N2_RS3_DUR0,N2_RS4_DUR0,N2_RS5_DUR0,N2_RS6_DUR0,N2_RS7_DUR0,N2_RS8_DUR0,N2_RS9_DUR0,N2_RS10_DUR0,N2_RS11_DUR0,N2_RS12_DUR0,N2_RS13_DUR0,N2_RS14_DUR0,N2_RS15_DUR0,N2_RS16_DUR0,N2_RS17_DUR0,N2_RS18_DUR0,N2_RS19_DUR0,N2_RS20_DUR0,N2_RS21_DUR0,N2_RS22_DUR0,N2_RS23_DUR0,N2_RS24_DUR0,N2_RS25_DUR0,N2_RS26_DUR0,N2_RS27_DUR0,N2_RS28_DUR0,N2_RS29_DUR0);
formula n2_mn_dur0 = min(N2_RS0_DUR0,N2_RS1_DUR0,N2_RS2_DUR0,N2_RS3_DUR0,N2_RS4_DUR0,N2_RS5_DUR0,N2_RS6_DUR0,N2_RS7_DUR0,N2_RS8_DUR0,N2_RS9_DUR0,N2_RS10_DUR0,N2_RS11_DUR0,N2_RS12_DUR0,N2_RS13_DUR0,N2_RS14_DUR0,N2_RS15_DUR0,N2_RS16_DUR0,N2_RS17_DUR0,N2_RS18_DUR0,N2_RS19_DUR0,N2_RS20_DUR0,N2_RS21_DUR0,N2_RS22_DUR0,N2_RS23_DUR0,N2_RS24_DUR0,N2_RS25_DUR0,N2_RS26_DUR0,N2_RS27_DUR0,N2_RS28_DUR0,N2_RS29_DUR0);
formula n2_uv_dur0 = (n2_mx_dur0 - n2_rs_dur0) / (n2_mx_dur0 - n2_mn_dur0);

formula n2_rs_dur1=( (n2 = 0 & n2ev = 1) ? N2_RS0_DUR1 :( (n2 = 1 & n2ev = 1) ? N2_RS1_DUR1 :( (n2 = 2 & n2ev = 1) ? N2_RS2_DUR1 :( (n2 = 3 & n2ev = 1) ? N2_RS3_DUR1 :( (n2 = 4 & n2ev = 1) ? N2_RS4_DUR1 :( (n2 = 5 & n2ev = 1) ? N2_RS5_DUR1 :( (n2 = 6 & n2ev = 1) ? N2_RS6_DUR1 :( (n2 = 7 & n2ev = 1) ? N2_RS7_DUR1 :( (n2 = 8 & n2ev = 1) ? N2_RS8_DUR1 :( (n2 = 9 & n2ev = 1) ? N2_RS9_DUR1 :( (n2 = 10 & n2ev = 1) ? N2_RS10_DUR1 :( (n2 = 11 & n2ev = 1) ? N2_RS11_DUR1 :( (n2 = 12 & n2ev = 1) ? N2_RS12_DUR1 :( (n2 = 13 & n2ev = 1) ? N2_RS13_DUR1 :( (n2 = 14 & n2ev = 1) ? N2_RS14_DUR1 :( (n2 = 15 & n2ev = 1) ? N2_RS15_DUR1 :( (n2 = 16 & n2ev = 1) ? N2_RS16_DUR1 :( (n2 = 17 & n2ev = 1) ? N2_RS17_DUR1 :( (n2 = 18 & n2ev = 1) ? N2_RS18_DUR1 :( (n2 = 19 & n2ev = 1) ? N2_RS19_DUR1 :( (n2 = 20 & n2ev = 1) ? N2_RS20_DUR1 :( (n2 = 21 & n2ev = 1) ? N2_RS21_DUR1 :( (n2 = 22 & n2ev = 1) ? N2_RS22_DUR1 :( (n2 = 23 & n2ev = 1) ? N2_RS23_DUR1 :( (n2 = 24 & n2ev = 1) ? N2_RS24_DUR1 :( (n2 = 25 & n2ev = 1) ? N2_RS25_DUR1 :( (n2 = 26 & n2ev = 1) ? N2_RS26_DUR1 :( (n2 = 27 & n2ev = 1) ? N2_RS27_DUR1 :( (n2 = 28 & n2ev = 1) ? N2_RS28_DUR1 :( (n2 = 29 & n2ev = 1) ? N2_RS29_DUR1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n2_mx_dur1 = max(N2_RS0_DUR1,N2_RS1_DUR1,N2_RS2_DUR1,N2_RS3_DUR1,N2_RS4_DUR1,N2_RS5_DUR1,N2_RS6_DUR1,N2_RS7_DUR1,N2_RS8_DUR1,N2_RS9_DUR1,N2_RS10_DUR1,N2_RS11_DUR1,N2_RS12_DUR1,N2_RS13_DUR1,N2_RS14_DUR1,N2_RS15_DUR1,N2_RS16_DUR1,N2_RS17_DUR1,N2_RS18_DUR1,N2_RS19_DUR1,N2_RS20_DUR1,N2_RS21_DUR1,N2_RS22_DUR1,N2_RS23_DUR1,N2_RS24_DUR1,N2_RS25_DUR1,N2_RS26_DUR1,N2_RS27_DUR1,N2_RS28_DUR1,N2_RS29_DUR1);
formula n2_mn_dur1 = min(N2_RS0_DUR1,N2_RS1_DUR1,N2_RS2_DUR1,N2_RS3_DUR1,N2_RS4_DUR1,N2_RS5_DUR1,N2_RS6_DUR1,N2_RS7_DUR1,N2_RS8_DUR1,N2_RS9_DUR1,N2_RS10_DUR1,N2_RS11_DUR1,N2_RS12_DUR1,N2_RS13_DUR1,N2_RS14_DUR1,N2_RS15_DUR1,N2_RS16_DUR1,N2_RS17_DUR1,N2_RS18_DUR1,N2_RS19_DUR1,N2_RS20_DUR1,N2_RS21_DUR1,N2_RS22_DUR1,N2_RS23_DUR1,N2_RS24_DUR1,N2_RS25_DUR1,N2_RS26_DUR1,N2_RS27_DUR1,N2_RS28_DUR1,N2_RS29_DUR1);
formula n2_uv_dur1 = (n2_mx_dur1 - n2_rs_dur1) / (n2_mx_dur1 - n2_mn_dur1);

//get the reliability of selected node..
formula n2_rs_rel0=( (n2 = 0 & n2ev = 0) ? N2_RS0_REL0 :( (n2 = 1 & n2ev = 0) ? N2_RS1_REL0 :( (n2 = 2 & n2ev = 0) ? N2_RS2_REL0 :( (n2 = 3 & n2ev = 0) ? N2_RS3_REL0 :( (n2 = 4 & n2ev = 0) ? N2_RS4_REL0 :( (n2 = 5 & n2ev = 0) ? N2_RS5_REL0 :( (n2 = 6 & n2ev = 0) ? N2_RS6_REL0 :( (n2 = 7 & n2ev = 0) ? N2_RS7_REL0 :( (n2 = 8 & n2ev = 0) ? N2_RS8_REL0 :( (n2 = 9 & n2ev = 0) ? N2_RS9_REL0 :( (n2 = 10 & n2ev = 0) ? N2_RS10_REL0 :( (n2 = 11 & n2ev = 0) ? N2_RS11_REL0 :( (n2 = 12 & n2ev = 0) ? N2_RS12_REL0 :( (n2 = 13 & n2ev = 0) ? N2_RS13_REL0 :( (n2 = 14 & n2ev = 0) ? N2_RS14_REL0 :( (n2 = 15 & n2ev = 0) ? N2_RS15_REL0 :( (n2 = 16 & n2ev = 0) ? N2_RS16_REL0 :( (n2 = 17 & n2ev = 0) ? N2_RS17_REL0 :( (n2 = 18 & n2ev = 0) ? N2_RS18_REL0 :( (n2 = 19 & n2ev = 0) ? N2_RS19_REL0 :( (n2 = 20 & n2ev = 0) ? N2_RS20_REL0 :( (n2 = 21 & n2ev = 0) ? N2_RS21_REL0 :( (n2 = 22 & n2ev = 0) ? N2_RS22_REL0 :( (n2 = 23 & n2ev = 0) ? N2_RS23_REL0 :( (n2 = 24 & n2ev = 0) ? N2_RS24_REL0 :( (n2 = 25 & n2ev = 0) ? N2_RS25_REL0 :( (n2 = 26 & n2ev = 0) ? N2_RS26_REL0 :( (n2 = 27 & n2ev = 0) ? N2_RS27_REL0 :( (n2 = 28 & n2ev = 0) ? N2_RS28_REL0 :( (n2 = 29 & n2ev = 0) ? N2_RS29_REL0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n2_mx_rel0 = max(N2_RS0_REL0,N2_RS1_REL0,N2_RS2_REL0,N2_RS3_REL0,N2_RS4_REL0,N2_RS5_REL0,N2_RS6_REL0,N2_RS7_REL0,N2_RS8_REL0,N2_RS9_REL0,N2_RS10_REL0,N2_RS11_REL0,N2_RS12_REL0,N2_RS13_REL0,N2_RS14_REL0,N2_RS15_REL0,N2_RS16_REL0,N2_RS17_REL0,N2_RS18_REL0,N2_RS19_REL0,N2_RS20_REL0,N2_RS21_REL0,N2_RS22_REL0,N2_RS23_REL0,N2_RS24_REL0,N2_RS25_REL0,N2_RS26_REL0,N2_RS27_REL0,N2_RS28_REL0,N2_RS29_REL0);
formula n2_mn_rel0 = min(N2_RS0_REL0,N2_RS1_REL0,N2_RS2_REL0,N2_RS3_REL0,N2_RS4_REL0,N2_RS5_REL0,N2_RS6_REL0,N2_RS7_REL0,N2_RS8_REL0,N2_RS9_REL0,N2_RS10_REL0,N2_RS11_REL0,N2_RS12_REL0,N2_RS13_REL0,N2_RS14_REL0,N2_RS15_REL0,N2_RS16_REL0,N2_RS17_REL0,N2_RS18_REL0,N2_RS19_REL0,N2_RS20_REL0,N2_RS21_REL0,N2_RS22_REL0,N2_RS23_REL0,N2_RS24_REL0,N2_RS25_REL0,N2_RS26_REL0,N2_RS27_REL0,N2_RS28_REL0,N2_RS29_REL0);
formula n2_uv_rel0 = (n2_rs_rel0 - n2_mx_rel0) / (n2_mx_rel0 - n2_mn_rel0);

formula n2_rs_rel1=( (n2 = 0 & n2ev = 1) ? N2_RS0_REL1 :( (n2 = 1 & n2ev = 1) ? N2_RS1_REL1 :( (n2 = 2 & n2ev = 1) ? N2_RS2_REL1 :( (n2 = 3 & n2ev = 1) ? N2_RS3_REL1 :( (n2 = 4 & n2ev = 1) ? N2_RS4_REL1 :( (n2 = 5 & n2ev = 1) ? N2_RS5_REL1 :( (n2 = 6 & n2ev = 1) ? N2_RS6_REL1 :( (n2 = 7 & n2ev = 1) ? N2_RS7_REL1 :( (n2 = 8 & n2ev = 1) ? N2_RS8_REL1 :( (n2 = 9 & n2ev = 1) ? N2_RS9_REL1 :( (n2 = 10 & n2ev = 1) ? N2_RS10_REL1 :( (n2 = 11 & n2ev = 1) ? N2_RS11_REL1 :( (n2 = 12 & n2ev = 1) ? N2_RS12_REL1 :( (n2 = 13 & n2ev = 1) ? N2_RS13_REL1 :( (n2 = 14 & n2ev = 1) ? N2_RS14_REL1 :( (n2 = 15 & n2ev = 1) ? N2_RS15_REL1 :( (n2 = 16 & n2ev = 1) ? N2_RS16_REL1 :( (n2 = 17 & n2ev = 1) ? N2_RS17_REL1 :( (n2 = 18 & n2ev = 1) ? N2_RS18_REL1 :( (n2 = 19 & n2ev = 1) ? N2_RS19_REL1 :( (n2 = 20 & n2ev = 1) ? N2_RS20_REL1 :( (n2 = 21 & n2ev = 1) ? N2_RS21_REL1 :( (n2 = 22 & n2ev = 1) ? N2_RS22_REL1 :( (n2 = 23 & n2ev = 1) ? N2_RS23_REL1 :( (n2 = 24 & n2ev = 1) ? N2_RS24_REL1 :( (n2 = 25 & n2ev = 1) ? N2_RS25_REL1 :( (n2 = 26 & n2ev = 1) ? N2_RS26_REL1 :( (n2 = 27 & n2ev = 1) ? N2_RS27_REL1 :( (n2 = 28 & n2ev = 1) ? N2_RS28_REL1 :( (n2 = 29 & n2ev = 1) ? N2_RS29_REL1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n2_mx_rel1 = max(N2_RS0_REL1,N2_RS1_REL1,N2_RS2_REL1,N2_RS3_REL1,N2_RS4_REL1,N2_RS5_REL1,N2_RS6_REL1,N2_RS7_REL1,N2_RS8_REL1,N2_RS9_REL1,N2_RS10_REL1,N2_RS11_REL1,N2_RS12_REL1,N2_RS13_REL1,N2_RS14_REL1,N2_RS15_REL1,N2_RS16_REL1,N2_RS17_REL1,N2_RS18_REL1,N2_RS19_REL1,N2_RS20_REL1,N2_RS21_REL1,N2_RS22_REL1,N2_RS23_REL1,N2_RS24_REL1,N2_RS25_REL1,N2_RS26_REL1,N2_RS27_REL1,N2_RS28_REL1,N2_RS29_REL1);
formula n2_mn_rel1 = min(N2_RS0_REL1,N2_RS1_REL1,N2_RS2_REL1,N2_RS3_REL1,N2_RS4_REL1,N2_RS5_REL1,N2_RS6_REL1,N2_RS7_REL1,N2_RS8_REL1,N2_RS9_REL1,N2_RS10_REL1,N2_RS11_REL1,N2_RS12_REL1,N2_RS13_REL1,N2_RS14_REL1,N2_RS15_REL1,N2_RS16_REL1,N2_RS17_REL1,N2_RS18_REL1,N2_RS19_REL1,N2_RS20_REL1,N2_RS21_REL1,N2_RS22_REL1,N2_RS23_REL1,N2_RS24_REL1,N2_RS25_REL1,N2_RS26_REL1,N2_RS27_REL1,N2_RS28_REL1,N2_RS29_REL1);
formula n2_uv_rel1 = (n2_rs_rel1 - n2_mx_rel1) / (n2_mx_rel1 - n2_mn_rel1);


//Preventing from non-evaluated problem..
formula n2_ut_cost = (n2_uv_cost > 0.0 ? n2_uv_cost: 0.0);
formula n2_ut_dur0 = (n2_uv_dur0 > 0.0 ? n2_uv_dur0: 0.0);
formula n2_ut_dur1 = (n2_uv_dur1 > 0.0 ? n2_uv_dur1: 0.0);
formula n2_ut_rel0 = (n2_uv_rel0 > 0.0 ? n2_uv_rel0: 0.0);
formula n2_ut_rel1 = (n2_uv_rel1 > 0.0 ? n2_uv_rel1: 0.0);

//Compute the overall utility value..
formula n2_ut_all = (n2ev=0 ? (n2_ut_cost * A0_WG_COST + n2_ut_dur0 * A0_WG_DUR + n2_ut_rel0 * A0_WG_REL):(n2ev=1 ? (n2_ut_cost * A0_WG_COST + n2_ut_dur1 * A0_WG_DUR + n2_ut_rel1 * A0_WG_REL):0.0));

//get the cost of selected node..
formula n3_rs_cost =( n3 = 0 ? N3_RS0_COST :( n3 = 1 ? N3_RS1_COST :( n3 = 2 ? N3_RS2_COST :( n3 = 3 ? N3_RS3_COST :( n3 = 4 ? N3_RS4_COST :( n3 = 5 ? N3_RS5_COST :( n3 = 6 ? N3_RS6_COST :( n3 = 7 ? N3_RS7_COST :( n3 = 8 ? N3_RS8_COST :( n3 = 9 ? N3_RS9_COST :( n3 = 10 ? N3_RS10_COST :( n3 = 11 ? N3_RS11_COST :( n3 = 12 ? N3_RS12_COST :( n3 = 13 ? N3_RS13_COST :( n3 = 14 ? N3_RS14_COST :( n3 = 15 ? N3_RS15_COST :( n3 = 16 ? N3_RS16_COST :( n3 = 17 ? N3_RS17_COST :( n3 = 18 ? N3_RS18_COST :( n3 = 19 ? N3_RS19_COST :( n3 = 20 ? N3_RS20_COST :( n3 = 21 ? N3_RS21_COST :( n3 = 22 ? N3_RS22_COST :( n3 = 23 ? N3_RS23_COST :( n3 = 24 ? N3_RS24_COST :( n3 = 25 ? N3_RS25_COST :( n3 = 26 ? N3_RS26_COST :( n3 = 27 ? N3_RS27_COST :( n3 = 28 ? N3_RS28_COST :( n3 = 29 ? N3_RS29_COST :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n3_mx_cost = max(N3_RS0_COST,N3_RS1_COST,N3_RS2_COST,N3_RS3_COST,N3_RS4_COST,N3_RS5_COST,N3_RS6_COST,N3_RS7_COST,N3_RS8_COST,N3_RS9_COST,N3_RS10_COST,N3_RS11_COST,N3_RS12_COST,N3_RS13_COST,N3_RS14_COST,N3_RS15_COST,N3_RS16_COST,N3_RS17_COST,N3_RS18_COST,N3_RS19_COST,N3_RS20_COST,N3_RS21_COST,N3_RS22_COST,N3_RS23_COST,N3_RS24_COST,N3_RS25_COST,N3_RS26_COST,N3_RS27_COST,N3_RS28_COST,N3_RS29_COST);
formula n3_mn_cost = min(N3_RS0_COST,N3_RS1_COST,N3_RS2_COST,N3_RS3_COST,N3_RS4_COST,N3_RS5_COST,N3_RS6_COST,N3_RS7_COST,N3_RS8_COST,N3_RS9_COST,N3_RS10_COST,N3_RS11_COST,N3_RS12_COST,N3_RS13_COST,N3_RS14_COST,N3_RS15_COST,N3_RS16_COST,N3_RS17_COST,N3_RS18_COST,N3_RS19_COST,N3_RS20_COST,N3_RS21_COST,N3_RS22_COST,N3_RS23_COST,N3_RS24_COST,N3_RS25_COST,N3_RS26_COST,N3_RS27_COST,N3_RS28_COST,N3_RS29_COST);
formula n3_uv_cost = (n3_mx_cost - n3_rs_cost) / (n3_mx_cost - n3_mn_cost);

//get the duration of selected node..
formula n3_rs_dur0=( (n3 = 0 & n3ev = 0) ? N3_RS0_DUR0 :( (n3 = 1 & n3ev = 0) ? N3_RS1_DUR0 :( (n3 = 2 & n3ev = 0) ? N3_RS2_DUR0 :( (n3 = 3 & n3ev = 0) ? N3_RS3_DUR0 :( (n3 = 4 & n3ev = 0) ? N3_RS4_DUR0 :( (n3 = 5 & n3ev = 0) ? N3_RS5_DUR0 :( (n3 = 6 & n3ev = 0) ? N3_RS6_DUR0 :( (n3 = 7 & n3ev = 0) ? N3_RS7_DUR0 :( (n3 = 8 & n3ev = 0) ? N3_RS8_DUR0 :( (n3 = 9 & n3ev = 0) ? N3_RS9_DUR0 :( (n3 = 10 & n3ev = 0) ? N3_RS10_DUR0 :( (n3 = 11 & n3ev = 0) ? N3_RS11_DUR0 :( (n3 = 12 & n3ev = 0) ? N3_RS12_DUR0 :( (n3 = 13 & n3ev = 0) ? N3_RS13_DUR0 :( (n3 = 14 & n3ev = 0) ? N3_RS14_DUR0 :( (n3 = 15 & n3ev = 0) ? N3_RS15_DUR0 :( (n3 = 16 & n3ev = 0) ? N3_RS16_DUR0 :( (n3 = 17 & n3ev = 0) ? N3_RS17_DUR0 :( (n3 = 18 & n3ev = 0) ? N3_RS18_DUR0 :( (n3 = 19 & n3ev = 0) ? N3_RS19_DUR0 :( (n3 = 20 & n3ev = 0) ? N3_RS20_DUR0 :( (n3 = 21 & n3ev = 0) ? N3_RS21_DUR0 :( (n3 = 22 & n3ev = 0) ? N3_RS22_DUR0 :( (n3 = 23 & n3ev = 0) ? N3_RS23_DUR0 :( (n3 = 24 & n3ev = 0) ? N3_RS24_DUR0 :( (n3 = 25 & n3ev = 0) ? N3_RS25_DUR0 :( (n3 = 26 & n3ev = 0) ? N3_RS26_DUR0 :( (n3 = 27 & n3ev = 0) ? N3_RS27_DUR0 :( (n3 = 28 & n3ev = 0) ? N3_RS28_DUR0 :( (n3 = 29 & n3ev = 0) ? N3_RS29_DUR0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n3_mx_dur0 = max(N3_RS0_DUR0,N3_RS1_DUR0,N3_RS2_DUR0,N3_RS3_DUR0,N3_RS4_DUR0,N3_RS5_DUR0,N3_RS6_DUR0,N3_RS7_DUR0,N3_RS8_DUR0,N3_RS9_DUR0,N3_RS10_DUR0,N3_RS11_DUR0,N3_RS12_DUR0,N3_RS13_DUR0,N3_RS14_DUR0,N3_RS15_DUR0,N3_RS16_DUR0,N3_RS17_DUR0,N3_RS18_DUR0,N3_RS19_DUR0,N3_RS20_DUR0,N3_RS21_DUR0,N3_RS22_DUR0,N3_RS23_DUR0,N3_RS24_DUR0,N3_RS25_DUR0,N3_RS26_DUR0,N3_RS27_DUR0,N3_RS28_DUR0,N3_RS29_DUR0);
formula n3_mn_dur0 = min(N3_RS0_DUR0,N3_RS1_DUR0,N3_RS2_DUR0,N3_RS3_DUR0,N3_RS4_DUR0,N3_RS5_DUR0,N3_RS6_DUR0,N3_RS7_DUR0,N3_RS8_DUR0,N3_RS9_DUR0,N3_RS10_DUR0,N3_RS11_DUR0,N3_RS12_DUR0,N3_RS13_DUR0,N3_RS14_DUR0,N3_RS15_DUR0,N3_RS16_DUR0,N3_RS17_DUR0,N3_RS18_DUR0,N3_RS19_DUR0,N3_RS20_DUR0,N3_RS21_DUR0,N3_RS22_DUR0,N3_RS23_DUR0,N3_RS24_DUR0,N3_RS25_DUR0,N3_RS26_DUR0,N3_RS27_DUR0,N3_RS28_DUR0,N3_RS29_DUR0);
formula n3_uv_dur0 = (n3_mx_dur0 - n3_rs_dur0) / (n3_mx_dur0 - n3_mn_dur0);

formula n3_rs_dur1=( (n3 = 0 & n3ev = 1) ? N3_RS0_DUR1 :( (n3 = 1 & n3ev = 1) ? N3_RS1_DUR1 :( (n3 = 2 & n3ev = 1) ? N3_RS2_DUR1 :( (n3 = 3 & n3ev = 1) ? N3_RS3_DUR1 :( (n3 = 4 & n3ev = 1) ? N3_RS4_DUR1 :( (n3 = 5 & n3ev = 1) ? N3_RS5_DUR1 :( (n3 = 6 & n3ev = 1) ? N3_RS6_DUR1 :( (n3 = 7 & n3ev = 1) ? N3_RS7_DUR1 :( (n3 = 8 & n3ev = 1) ? N3_RS8_DUR1 :( (n3 = 9 & n3ev = 1) ? N3_RS9_DUR1 :( (n3 = 10 & n3ev = 1) ? N3_RS10_DUR1 :( (n3 = 11 & n3ev = 1) ? N3_RS11_DUR1 :( (n3 = 12 & n3ev = 1) ? N3_RS12_DUR1 :( (n3 = 13 & n3ev = 1) ? N3_RS13_DUR1 :( (n3 = 14 & n3ev = 1) ? N3_RS14_DUR1 :( (n3 = 15 & n3ev = 1) ? N3_RS15_DUR1 :( (n3 = 16 & n3ev = 1) ? N3_RS16_DUR1 :( (n3 = 17 & n3ev = 1) ? N3_RS17_DUR1 :( (n3 = 18 & n3ev = 1) ? N3_RS18_DUR1 :( (n3 = 19 & n3ev = 1) ? N3_RS19_DUR1 :( (n3 = 20 & n3ev = 1) ? N3_RS20_DUR1 :( (n3 = 21 & n3ev = 1) ? N3_RS21_DUR1 :( (n3 = 22 & n3ev = 1) ? N3_RS22_DUR1 :( (n3 = 23 & n3ev = 1) ? N3_RS23_DUR1 :( (n3 = 24 & n3ev = 1) ? N3_RS24_DUR1 :( (n3 = 25 & n3ev = 1) ? N3_RS25_DUR1 :( (n3 = 26 & n3ev = 1) ? N3_RS26_DUR1 :( (n3 = 27 & n3ev = 1) ? N3_RS27_DUR1 :( (n3 = 28 & n3ev = 1) ? N3_RS28_DUR1 :( (n3 = 29 & n3ev = 1) ? N3_RS29_DUR1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n3_mx_dur1 = max(N3_RS0_DUR1,N3_RS1_DUR1,N3_RS2_DUR1,N3_RS3_DUR1,N3_RS4_DUR1,N3_RS5_DUR1,N3_RS6_DUR1,N3_RS7_DUR1,N3_RS8_DUR1,N3_RS9_DUR1,N3_RS10_DUR1,N3_RS11_DUR1,N3_RS12_DUR1,N3_RS13_DUR1,N3_RS14_DUR1,N3_RS15_DUR1,N3_RS16_DUR1,N3_RS17_DUR1,N3_RS18_DUR1,N3_RS19_DUR1,N3_RS20_DUR1,N3_RS21_DUR1,N3_RS22_DUR1,N3_RS23_DUR1,N3_RS24_DUR1,N3_RS25_DUR1,N3_RS26_DUR1,N3_RS27_DUR1,N3_RS28_DUR1,N3_RS29_DUR1);
formula n3_mn_dur1 = min(N3_RS0_DUR1,N3_RS1_DUR1,N3_RS2_DUR1,N3_RS3_DUR1,N3_RS4_DUR1,N3_RS5_DUR1,N3_RS6_DUR1,N3_RS7_DUR1,N3_RS8_DUR1,N3_RS9_DUR1,N3_RS10_DUR1,N3_RS11_DUR1,N3_RS12_DUR1,N3_RS13_DUR1,N3_RS14_DUR1,N3_RS15_DUR1,N3_RS16_DUR1,N3_RS17_DUR1,N3_RS18_DUR1,N3_RS19_DUR1,N3_RS20_DUR1,N3_RS21_DUR1,N3_RS22_DUR1,N3_RS23_DUR1,N3_RS24_DUR1,N3_RS25_DUR1,N3_RS26_DUR1,N3_RS27_DUR1,N3_RS28_DUR1,N3_RS29_DUR1);
formula n3_uv_dur1 = (n3_mx_dur1 - n3_rs_dur1) / (n3_mx_dur1 - n3_mn_dur1);

//get the reliability of selected node..
formula n3_rs_rel0=( (n3 = 0 & n3ev = 0) ? N3_RS0_REL0 :( (n3 = 1 & n3ev = 0) ? N3_RS1_REL0 :( (n3 = 2 & n3ev = 0) ? N3_RS2_REL0 :( (n3 = 3 & n3ev = 0) ? N3_RS3_REL0 :( (n3 = 4 & n3ev = 0) ? N3_RS4_REL0 :( (n3 = 5 & n3ev = 0) ? N3_RS5_REL0 :( (n3 = 6 & n3ev = 0) ? N3_RS6_REL0 :( (n3 = 7 & n3ev = 0) ? N3_RS7_REL0 :( (n3 = 8 & n3ev = 0) ? N3_RS8_REL0 :( (n3 = 9 & n3ev = 0) ? N3_RS9_REL0 :( (n3 = 10 & n3ev = 0) ? N3_RS10_REL0 :( (n3 = 11 & n3ev = 0) ? N3_RS11_REL0 :( (n3 = 12 & n3ev = 0) ? N3_RS12_REL0 :( (n3 = 13 & n3ev = 0) ? N3_RS13_REL0 :( (n3 = 14 & n3ev = 0) ? N3_RS14_REL0 :( (n3 = 15 & n3ev = 0) ? N3_RS15_REL0 :( (n3 = 16 & n3ev = 0) ? N3_RS16_REL0 :( (n3 = 17 & n3ev = 0) ? N3_RS17_REL0 :( (n3 = 18 & n3ev = 0) ? N3_RS18_REL0 :( (n3 = 19 & n3ev = 0) ? N3_RS19_REL0 :( (n3 = 20 & n3ev = 0) ? N3_RS20_REL0 :( (n3 = 21 & n3ev = 0) ? N3_RS21_REL0 :( (n3 = 22 & n3ev = 0) ? N3_RS22_REL0 :( (n3 = 23 & n3ev = 0) ? N3_RS23_REL0 :( (n3 = 24 & n3ev = 0) ? N3_RS24_REL0 :( (n3 = 25 & n3ev = 0) ? N3_RS25_REL0 :( (n3 = 26 & n3ev = 0) ? N3_RS26_REL0 :( (n3 = 27 & n3ev = 0) ? N3_RS27_REL0 :( (n3 = 28 & n3ev = 0) ? N3_RS28_REL0 :( (n3 = 29 & n3ev = 0) ? N3_RS29_REL0 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n3_mx_rel0 = max(N3_RS0_REL0,N3_RS1_REL0,N3_RS2_REL0,N3_RS3_REL0,N3_RS4_REL0,N3_RS5_REL0,N3_RS6_REL0,N3_RS7_REL0,N3_RS8_REL0,N3_RS9_REL0,N3_RS10_REL0,N3_RS11_REL0,N3_RS12_REL0,N3_RS13_REL0,N3_RS14_REL0,N3_RS15_REL0,N3_RS16_REL0,N3_RS17_REL0,N3_RS18_REL0,N3_RS19_REL0,N3_RS20_REL0,N3_RS21_REL0,N3_RS22_REL0,N3_RS23_REL0,N3_RS24_REL0,N3_RS25_REL0,N3_RS26_REL0,N3_RS27_REL0,N3_RS28_REL0,N3_RS29_REL0);
formula n3_mn_rel0 = min(N3_RS0_REL0,N3_RS1_REL0,N3_RS2_REL0,N3_RS3_REL0,N3_RS4_REL0,N3_RS5_REL0,N3_RS6_REL0,N3_RS7_REL0,N3_RS8_REL0,N3_RS9_REL0,N3_RS10_REL0,N3_RS11_REL0,N3_RS12_REL0,N3_RS13_REL0,N3_RS14_REL0,N3_RS15_REL0,N3_RS16_REL0,N3_RS17_REL0,N3_RS18_REL0,N3_RS19_REL0,N3_RS20_REL0,N3_RS21_REL0,N3_RS22_REL0,N3_RS23_REL0,N3_RS24_REL0,N3_RS25_REL0,N3_RS26_REL0,N3_RS27_REL0,N3_RS28_REL0,N3_RS29_REL0);
formula n3_uv_rel0 = (n3_rs_rel0 - n3_mx_rel0) / (n3_mx_rel0 - n3_mn_rel0);

formula n3_rs_rel1=( (n3 = 0 & n3ev = 1) ? N3_RS0_REL1 :( (n3 = 1 & n3ev = 1) ? N3_RS1_REL1 :( (n3 = 2 & n3ev = 1) ? N3_RS2_REL1 :( (n3 = 3 & n3ev = 1) ? N3_RS3_REL1 :( (n3 = 4 & n3ev = 1) ? N3_RS4_REL1 :( (n3 = 5 & n3ev = 1) ? N3_RS5_REL1 :( (n3 = 6 & n3ev = 1) ? N3_RS6_REL1 :( (n3 = 7 & n3ev = 1) ? N3_RS7_REL1 :( (n3 = 8 & n3ev = 1) ? N3_RS8_REL1 :( (n3 = 9 & n3ev = 1) ? N3_RS9_REL1 :( (n3 = 10 & n3ev = 1) ? N3_RS10_REL1 :( (n3 = 11 & n3ev = 1) ? N3_RS11_REL1 :( (n3 = 12 & n3ev = 1) ? N3_RS12_REL1 :( (n3 = 13 & n3ev = 1) ? N3_RS13_REL1 :( (n3 = 14 & n3ev = 1) ? N3_RS14_REL1 :( (n3 = 15 & n3ev = 1) ? N3_RS15_REL1 :( (n3 = 16 & n3ev = 1) ? N3_RS16_REL1 :( (n3 = 17 & n3ev = 1) ? N3_RS17_REL1 :( (n3 = 18 & n3ev = 1) ? N3_RS18_REL1 :( (n3 = 19 & n3ev = 1) ? N3_RS19_REL1 :( (n3 = 20 & n3ev = 1) ? N3_RS20_REL1 :( (n3 = 21 & n3ev = 1) ? N3_RS21_REL1 :( (n3 = 22 & n3ev = 1) ? N3_RS22_REL1 :( (n3 = 23 & n3ev = 1) ? N3_RS23_REL1 :( (n3 = 24 & n3ev = 1) ? N3_RS24_REL1 :( (n3 = 25 & n3ev = 1) ? N3_RS25_REL1 :( (n3 = 26 & n3ev = 1) ? N3_RS26_REL1 :( (n3 = 27 & n3ev = 1) ? N3_RS27_REL1 :( (n3 = 28 & n3ev = 1) ? N3_RS28_REL1 :( (n3 = 29 & n3ev = 1) ? N3_RS29_REL1 :0.0))))))))))))))))))))))))))))));
//Compute the utility value..
formula n3_mx_rel1 = max(N3_RS0_REL1,N3_RS1_REL1,N3_RS2_REL1,N3_RS3_REL1,N3_RS4_REL1,N3_RS5_REL1,N3_RS6_REL1,N3_RS7_REL1,N3_RS8_REL1,N3_RS9_REL1,N3_RS10_REL1,N3_RS11_REL1,N3_RS12_REL1,N3_RS13_REL1,N3_RS14_REL1,N3_RS15_REL1,N3_RS16_REL1,N3_RS17_REL1,N3_RS18_REL1,N3_RS19_REL1,N3_RS20_REL1,N3_RS21_REL1,N3_RS22_REL1,N3_RS23_REL1,N3_RS24_REL1,N3_RS25_REL1,N3_RS26_REL1,N3_RS27_REL1,N3_RS28_REL1,N3_RS29_REL1);
formula n3_mn_rel1 = min(N3_RS0_REL1,N3_RS1_REL1,N3_RS2_REL1,N3_RS3_REL1,N3_RS4_REL1,N3_RS5_REL1,N3_RS6_REL1,N3_RS7_REL1,N3_RS8_REL1,N3_RS9_REL1,N3_RS10_REL1,N3_RS11_REL1,N3_RS12_REL1,N3_RS13_REL1,N3_RS14_REL1,N3_RS15_REL1,N3_RS16_REL1,N3_RS17_REL1,N3_RS18_REL1,N3_RS19_REL1,N3_RS20_REL1,N3_RS21_REL1,N3_RS22_REL1,N3_RS23_REL1,N3_RS24_REL1,N3_RS25_REL1,N3_RS26_REL1,N3_RS27_REL1,N3_RS28_REL1,N3_RS29_REL1);
formula n3_uv_rel1 = (n3_rs_rel1 - n3_mx_rel1) / (n3_mx_rel1 - n3_mn_rel1);


//Preventing from non-evaluated problem..
formula n3_ut_cost = (n3_uv_cost > 0.0 ? n3_uv_cost: 0.0);
formula n3_ut_dur0 = (n3_uv_dur0 > 0.0 ? n3_uv_dur0: 0.0);
formula n3_ut_dur1 = (n3_uv_dur1 > 0.0 ? n3_uv_dur1: 0.0);
formula n3_ut_rel0 = (n3_uv_rel0 > 0.0 ? n3_uv_rel0: 0.0);
formula n3_ut_rel1 = (n3_uv_rel1 > 0.0 ? n3_uv_rel1: 0.0);

//Compute the overall utility value..
formula n3_ut_all = (n3ev=0 ? (n3_ut_cost * A0_WG_COST + n3_ut_dur0 * A0_WG_DUR + n3_ut_rel0 * A0_WG_REL):(n3ev=1 ? (n3_ut_cost * A0_WG_COST + n3_ut_dur1 * A0_WG_DUR + n3_ut_rel1 * A0_WG_REL):0.0));

//=========Reward Structure=======
rewards "cost"
[end] true: n0_rs_cost;
[end] true: n1_rs_cost;
[end] true: n2_rs_cost;
[end] true: n3_rs_cost;
endrewards
rewards "time"
[end] true: n0_rs_dur0;
[end] true: n0_rs_dur1;
[end] true: n1_rs_dur0;
[end] true: n1_rs_dur1;
[end] true: n2_rs_dur0;
[end] true: n2_rs_dur1;
[end] true: n3_rs_dur0;
[end] true: n3_rs_dur1;
endrewards
rewards "reliability"
[end] true: n0_rs_rel0;
[end] true: n0_rs_rel1;
[end] true: n1_rs_rel0;
[end] true: n1_rs_rel1;
[end] true: n2_rs_rel0;
[end] true: n2_rs_rel1;
[end] true: n3_rs_rel0;
[end] true: n3_rs_rel1;
endrewards
rewards "utility"
[end] true: n0_ut_all;
[end] true: n1_ut_all;
[end] true: n2_ut_all;
[end] true: n3_ut_all;
endrewards

//=========Labels=======
label "done" = (end=true);
